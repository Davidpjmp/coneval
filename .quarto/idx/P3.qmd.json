{"title":"Análisis descriptivo básico","markdown":{"headingText":"Análisis descriptivo básico","containsRefs":false,"markdown":"\nVamos a llamar algunas librerías básicas, el tidyverse (que son muchas librerías) y sjlabelled que nos sirve para el manejo de etiquetas\n\n```{r}\nif (!require(\"pacman\")) install.packages(\"pacman\") # instala pacman si se requiere\npacman::p_load(tidyverse, haven, sjlabelled, foreign, janitor) #carga los paquetes necesarios para esta práctica\n```\n\nE importamos la base\n\n```{r}\nconcentrado2020 <- haven::read_dta(\"datos/concentrado2020.dta\", encoding=\"latin1\")\n```\n\n## Variables nominales\n\nLa variable nominal \"sexo_jefe\", se captura con \"1\" para hombres y con un \"2\" para mujeres en la base de datos. Podemos establecer una operación de igual y además sumar los casos que cumplan con esta condición:\n\n```{r}\nconcentrado2020 %>% \n  dplyr::count(sexo_jefe==2) # cuentan los casos que cumplen con la condición \"sexo_jefe==2\"\n```\n\nEsto es a lo que nos referimos con contar frecuencias. Podemos contar casos que cumplan con una operación de igualdad.\n\n```{r}\nconcentrado2020 %>%\n  with(\n    table(sexo_jefe)\n    )\n```\n\nCon \"tabyl()\"\" de \"janitor\"\"\n\n```{r}\nconcentrado2020 %>%\n  dplyr::mutate(sexo_jefe=as_label(sexo_jefe))  %>%\n  janitor::tabyl(sexo_jefe)\n```\n\nPara ver que esto es una distribución de frecuencias sería muy útil ver la proporción total, ello se realiza agregando un elemento más en nuestro código con una \"tubería\":\n\n```{r}\nconcentrado2020 %>% \n  dplyr::mutate(sexo_jefe=as_label(sexo_jefe))  %>%\n  janitor::tabyl(sexo_jefe) %>% \n  janitor::adorn_totals()\n```\n\nHoy revisamos algunos tipos de variables\n\n```{r}\nclass(concentrado2020$sexo_jefe) # variable sin etiqueta\nclass(as_label(concentrado2020$sexo_jefe)) # variable con etiqueta\n\nclass(as_label(concentrado2020$ing_cor)) # variable ordinal\nclass(as_label(concentrado2020$money)) # variable de intervalo/razón\n```\n\nEn general, tendremos variables de factor que podrían ser consideradas como cualitativas y numéricas. Aunque en realidad, R tiene muchas formas de almacenamiento. Como mostramos con el comando \"glimpse()\" en capítulo anterior, podemos revisar una variable en específico:\n\n```{r}\ndplyr::glimpse(concentrado2020$sexo_jefe)\n```\n\n```{r}\nconcentrado2020 %>% mutate(sexo_jefe=as_label(sexo_jefe)) %>% # cambia los valores de la variable a sus etiquetas\n                tabyl(sexo_jefe) %>% # para hacer la tabla\n                adorn_totals() %>% # añade totales\n                adorn_pct_formatting()  # nos da porcentaje en lugar de proporción\n                \n```\n\nLa tubería o \"pipe\" %\\>% nos permite ir agregando elementos de manera sencilla nuestros comandos. En este caso decimos que dentro del objeto haga el cambio, luego la tabla, que le ponga porcentajes y finalmente que nos dé los totales. El total del 100% no aparece, por un elemento propio del programa.\n\n## Variables ordinales\n\nSon variables que dan cuenta de cualidades o condiciones a través de categorías que guardan un orden entre sí.\n\nVamos a darle una \"ojeada\" a esta variable\n\n```{r}\nglimpse(concentrado2020$educa_jefe\n        )\n```\n\nHoy hacemos la tabla, con las etiquetas:\n\n```{r}\nconcentrado2020 %>%\n  mutate(educa_jefe=as_label(educa_jefe)) %>% \n  tabyl(educa_jefe)\n```\n\nPara que no nos salgan las categorías sin datos podemos poner una opción dentro del comando \"tabyl()\"\n\n```{r}\nconcentrado2020 %>% \n  mutate(educa_jefe=as_label(educa_jefe)) %>% \n  tabyl(educa_jefe, show_missing_levels=F ) %>% # esta opción elimina los valores con 0\n  adorn_totals()  \n```\n\n## Bivariado cualitativo\n\n### Cálculo de frecuencias\n\nLas tablas de doble entrada tiene su nombre porque en las columnas entran los valores de una variable categórica, y en las filas de una segunda. Basicamente es como hacer un conteo de todas las combinaciones posibles entre los valores de una variable con la otra.\n\nPor ejemplo, si quisiéramos combinar las dos variables que ya estudiamos lo podemos hacer, con una tabla de doble entrada:\n\n```{r}\nconcentrado2020 %>% \n  mutate(clase_hog=as_label(clase_hog)) %>% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %>% # para que las lea como factor\n                tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %>% # incluimos aquí \n                adorn_totals()  \n```\n\nObservamos que en cada celda confluyen los casos que comparten las mismas características:\n\n```{r}\nconcentrado2020 %>%   \n    count(clase_hog==1 & sexo_jefe==1) # nos da la segunda celda de la izquierda\n\n```\n\n### Totales y porcentajes\n\nDe esta manera se colocan todos los datos. Si observa al poner la función \"adorn_totals()\" lo agregó como una nueva fila de totales, pero también podemos pedirle que agregue una columna de totales.\n\n```{r}\nconcentrado2020 %>% \n  mutate(clase_hog=as_label(clase_hog)) %>% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %>% # para que las lea como factor\n  tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %>% # incluimos aquí dos variables\n  adorn_totals(\"col\")  \n```\n\nO bien agregar los dos, introduciendo en el argumento \"c(\"col\", \"row\")\" un vector de caracteres de las dos opciones requeridas:\n\n```{r}\nconcentrado2020 %>% \n  mutate(clase_hog=as_label(clase_hog)) %>% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %>% # para que las lea como factor\n  tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %>% # incluimos aquí dos variable\n  adorn_totals(c(\"col\", \"row\")) \n```\n\nDel mismo modo, podemos calcular los porcentajes. Pero los podemos calcular de tres formas. Uno es que lo calculemos para los totales calculados para las filas, para las columnas o para el gran total poblacional.\n\nPara columnas tenemos el siguiente código y los siguientes resultados:\n\n```{r}\nconcentrado2020 %>% \n  mutate(clase_hog=as_label(clase_hog)) %>% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %>% # para que las lea como factor\n  tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %>% # incluimos aquí dos variable\n  adorn_totals(c(\"col\", \"row\")) %>% \n  adorn_percentages(\"col\") %>% # Divide los valores entre el total de la columna\n  adorn_pct_formatting() # lo vuelve porcentaje\n\n```\n\nCuando se hagan cuadros de distribuciones (que todas sus partes suman 100), los porcentajes pueden ser una gran ayuda para la interpretación, sobre todos cuando se comparar poblaciones de categorías de diferente tamaño. Por lo general, queremos que los cuadros nos den información de donde están los totales y su 100%, de esta manera el lector se puede guiar de porcentaje con respecto a qué está leyendo. En este caso, vemos que el 100% es común en la última fila.\n\nVeamos la diferencia de cómo podemos leer la misma celda, pero hoy, hemos calculado los porcentajes a nivel de fila:\n\n```{r}\nconcentrado2020 %>% \n  mutate(clase_hog=as_label(clase_hog)) %>% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %>% # para que las lea como factor\n  tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %>% # incluimos aquí dos variable\n  adorn_totals(c(\"col\", \"row\")) %>% \n  adorn_percentages(\"row\") %>% # Divide los valores entre el total de la fila\n  adorn_pct_formatting() # lo vuelve porcentaje\n```\n\nFinalmente, podemos calcular los porcentajes con referencia a la población total en análisis. Es decir la celda en la esquina inferior derecha de nuestra tabla original.\n\n```{r}\nconcentrado2020 %>% \n  mutate(clase_hog=as_label(clase_hog)) %>% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %>% # para que las lea como factor\n  tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %>% # incluimos aquí dos variable\n  adorn_totals(c(\"col\", \"row\")) %>% \n  adorn_percentages(\"all\") %>% # Divide los valores entre el total de la población\n  adorn_pct_formatting() # lo vuelve porcentaje\n```\n\n## Descriptivos para variables cuantitativas\n\nVamos a empezar a revisar los gráficos para variables cuantitativas.\n\n### Medidas numéricas básicas\n\n5 números\n\n```{r}\nsummary(concentrado2020$ing_cor) ## ingresos\n```\n\nCon pipes se pueden crear \"indicadores\" de nuestras variables es un tibble\n\n```{r}\nconcentrado2020 %>% \n  summarise(nombre_indicador=mean(ing_cor, na.rm=T))\n```\n\n### Histograma básico\n\n```{r}\nhist(concentrado2020$ing_cor)\n```\n\nLe podemos modificar el título del eje de las x y de las y\n\n```{r}\nhist(concentrado2020$ing_cor, \n     main=\"Histograma de los ingresos corrientes\", \n     xlab=\"pesos mexicanos\", ylab=\"Frecuencia\") \n```\n\n¡A ponerle colorcitos! Aquí hay una lista <http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf>\n\n```{r}\nhist(concentrado2020$ing_cor, \n     main=\"Histograma de los ingresos corrientes\", \n     xlab=\"pesos mexicanos\", ylab=\"Frecuencia\",\n     col=\"deeppink1\") \n```\n\nCon pipes:\n\n```{r}\nconcentrado2020 %>% \n    with(hist(ing_cor)) # con with, para que entienda\n```\n\nCuando usamos pipes, se debe de recordar que no es necesario escribir el nombre del data.frame en el filtro porque es lo primero que colocamos en nuestro \"pipe\".\n\nCheca que cualquier aditamiento debe ir en el pipe donde está el comando de hist(). Ten cuidado con los paréntesis.\n\n```{r}\nconcentrado2020 %>% \n  filter(!is.na(ing_cor)) %>% # la ventaja de esta forma es que podemos hacer más operaciones\n    with(hist(ing_cor, main= \"histograma\"))\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"P3.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.163","editor":"visual","theme":"spacelab"},"extensions":{"book":{"multiFile":true}}},"pdf":{"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"P3.pdf"},"language":{},"metadata":{"block-headings":true,"editor":"visual","documentclass":"report"},"extensions":{"book":{}}}}}