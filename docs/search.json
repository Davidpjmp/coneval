[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R para el monitoreo de la política de desarrollo social",
    "section": "",
    "text": "El objetivo del curso es que las personas adscritas a la CGMEFFI desarrollen habilidades en el uso del software especializado “R” para fortalecer el análisis y potenciar el alcance de la información derivada del monitoreo de la política de desarrollo social.\n\n\n\n1. Manejo y procesamiento de datos\n1.1 Tipos y estructuras de datos\n1.2 Operaciones básicas\n1.3 Manejo de datos\n1.4 Ciclos, secuencias y condicionales\n1.5 Funciones\n2. Visualización de datos\n2.1 Generación de gráficas con ggplot\n2.2 Edición de gráficas con ggplot\n2.3 Visualización espacial\n2.4 Creación de tableros\n3. Análisis de texto\n3.1 Estructura y carga de datos\n3.2 Análisis de palabras\n3.3 Relación de texto\n\n\n\nLa metodología del curso consistirá en lo siguiente:\n1. La exposición de la facilitadora. Durante la primera parte de la sesión, se expondrán los comandos necesarios para llevar a cabo cada tema. Se dará una introducción sobre la temática y se buscará dar ejemplos concretos para facilitar el aprendizaje. Se espera que el personal exponga sus dudas o comentarios a lo largo de la explicación.\n2. Realización de ejercicios prácticos. Al final de cada sesión, corresponderá a las personas asistentes del curso realizar individualmente o en parejas un ejercicio relacionado con lo visto en la primera parte de la clase.\n3. Consulta autónoma de material. Tanto la exposición como los ejercicios serán acompañado de material de consulta realizado ad hoc para el curso y el contenido, de tal manera que el estudiantado pueda volver a los códigos y las explicaciones posteriormente.\n\n\n\n\n\nDoctora en Estudios de Población. Centro de Estudios Demográficos y Urbanos, El Colegio de México.\nSemblanza Profesora de tiempo completo en la Facultad de Ciencias Políticas y Sociales. Investigadora nivel I en elSistema Nacional de Investigadores. Maestra en Población y Desarrollo por la Facultad Latinoamericana de Ciencias Sociales (FLACSO) – Sede México. Posee experiencia en recolección de información estadística, diseño y control de procesos de recolección y su procesamiento. Ha aplicado diversos métodos y herramientas multivariadas, homologación de información y comparabilidad de fuentes en sus investigaciones, así como usa de diversos softwares estadísticos, y ha impartido clases de estadítica aplicada a nivel de licenciatura y posgrado. Es co-coordinadora del Capítulo de CDMX de la iniciativa RLadies.\n\n\n\nDoctora en Ciencia Política. Centro de Investigación y Docencia Económicas (CIDE) México.\nSemblanza Gerente de Información y Políticas Públicas en Sertech MX, asistente de docencia en FLACSO México y profesora de asignatura de Estadística en la UNAM. Maestra en Gobierno y Asuntos Públicos por la Facultad Latinoamericana de Ciencias Sociales (FLACSO) – Sede México. También se ha desempeñado como Analista de Datos Senior en ThinkData MX; como profesora de asignatura y adjunta de diversos cursos de métodos cuantitativos para el análisis de políticas públicas en la Universidad Autónoma de San Luis Potosí, FLACSO México, Centro de Investigación y Docencia Económicas (CIDE) y Universidad Nacional Autónoma de México (UNAM). Sus líneas de investigación son los estudios legislativos, análisis de políticas públicas a nivel local, instituciones y partidos políticos en América Latina."
  },
  {
    "objectID": "instala.html",
    "href": "instala.html",
    "title": "Instalación de R y Rstudio",
    "section": "",
    "text": "https://youtu.be/YkN5urybh2A Video en YouTube"
  },
  {
    "objectID": "instala.html#instalación-en-os",
    "href": "instala.html#instalación-en-os",
    "title": "Instalación de R y Rstudio",
    "section": "Instalación en OS",
    "text": "Instalación en OS\nhttps://youtu.be/icWV8jzYOtA Viedo en YouTube"
  },
  {
    "objectID": "instala.html#instalación-en-pc",
    "href": "instala.html#instalación-en-pc",
    "title": "Instalación de R y Rstudio",
    "section": "Instalación en PC",
    "text": "Instalación en PC\nhttps://youtu.be/TNSQikMfgJI Video en YouTube"
  },
  {
    "objectID": "instala.html#ojo",
    "href": "instala.html#ojo",
    "title": "Instalación de R y Rstudio",
    "section": "Ojo",
    "text": "Ojo\nPronto RStudio se volverá “posit”"
  },
  {
    "objectID": "P1.html",
    "href": "P1.html",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "",
    "text": "En RStudio podemos tener varias ventanas que nos permiten tener más control de nuestro “ambiente”, el historial, los “scripts” o códigos que escribimos y por supuesto, tenemos nuestra consola, que también tiene el símbolo “>” con R. Podemos pedir operaciones básicas\n\n2+5\n\n[1] 7\n\n5*3\n\n[1] 15\n\n#Para escribir comentarios y que no los lea como operaciones ponemos el símbolo de gato\n# Lo podemos hacer para un comentario en una línea o la par de una instrucción\n1:5               # Secuencia 1-5\n\n[1] 1 2 3 4 5\n\nseq(1, 10, 0.5)   # Secuencia con incrementos diferentes a 1\n\n [1]  1.0  1.5  2.0  2.5  3.0  3.5  4.0  4.5  5.0  5.5  6.0  6.5  7.0  7.5  8.0\n[16]  8.5  9.0  9.5 10.0\n\nc('a','b','c')  # Vector con caracteres\n\n[1] \"a\" \"b\" \"c\"\n\n1:7             # Entero\n\n[1] 1 2 3 4 5 6 7\n\n40<80           # Valor logico\n\n[1] TRUE\n\n2+2 == 5        # Valor logico\n\n[1] FALSE\n\nT == TRUE       # T expresion corta de verdadero\n\n[1] TRUE\n\n\nR es un lenguaje de programación por objetos. Por lo cual vamos a tener objetos a los que se les asigna su contenido. Si usamos una flechita “<-” o “->” le estamos asignando algo al objeto que apunta la felcha.\n\nx <- 24         # Asignacion de valor 24 a la variable x para su uso posterior (OBJETO)\nx/2             # Uso posterior de variable u objeto x\n\n[1] 12\n\nx               # Imprime en pantalla el valor de la variable u objeto\n\n[1] 24\n\nx <- TRUE       # Asigna el valor logico TRUE a la variable x OJO: x toma el ultimo valor que se le asigna\nx\n\n[1] TRUE"
  },
  {
    "objectID": "P1.html#vectores",
    "href": "P1.html#vectores",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.2 Vectores",
    "text": "1.2 Vectores\nLos vectores son uno de los objetos más usados en R.\n\ny <- c(2,4,6)     # Vector numerico\ny <- c('Primaria', 'Secundaria') # Vector caracteres\n\nDado que poseen elementos, podemos también observar y hacer operaciones con sus elementos, usando “[ ]” para acceder a ellos\n\ny[2]              # Acceder al segundo valor del vector y\n\n[1] \"Secundaria\"\n\ny[3] <- 'Preparatoria y más' # Asigna valor a la tercera componente del vector\nsex <-1:2         # Asigna a la variable sex los valores 1 y 2\nnames(sex) <- c(\"Femenino\", \"Masculino\") # Asigna nombres al vector de elementos sexo\nsex[2]            # Segundo elemento del vector sex\n\nMasculino \n        2"
  },
  {
    "objectID": "P1.html#matrices",
    "href": "P1.html#matrices",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.3 Matrices",
    "text": "1.3 Matrices\nLas matrices son muy importantes, porque nos permiten hacer operaciones y casi todas nuestras bases de datos tendran un aspecto de matriz.\n\nm <- matrix (nrow=2, ncol=3, 1:6, byrow = TRUE) # Matrices Ejemplo 1\nm\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n\nm <- matrix (nrow=2, ncol=3, 1:6, byrow = FALSE) # Matrices Ejemplo 1\nm\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\ndim(m)\n\n[1] 2 3\n\nattributes(m)\n\n$dim\n[1] 2 3\n\nn <- 1:6     # Matrices Ejemplo 2\ndim(n) <- c(2,3)\nn\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\nxx <-10:12   # Matrices Ejemplo 3\nyy<-14:16\ncbind(xx,yy) # Une vectores por Columnas\n\n     xx yy\n[1,] 10 14\n[2,] 11 15\n[3,] 12 16\n\nrbind(xx,yy) # Une vectores por Renglones\n\n   [,1] [,2] [,3]\nxx   10   11   12\nyy   14   15   16\n\nmi_matrix<-cbind(xx,yy) # este resultado lo puedo asignar a un objeto"
  },
  {
    "objectID": "P1.html#funciones",
    "href": "P1.html#funciones",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.4 Funciones",
    "text": "1.4 Funciones\nAlgunas funciones básicas son las siguientes. Vamos a ir viendo más funciones, pero para entender cómo funcionan, haremos unos ejemplos y cómo pedir ayuda sobre ellas.\n\nsum (10,20,30)    # Función suma\n\n[1] 60\n\nrep('R', times=3) # Repite la letra R el numero de veces que se indica\n\n[1] \"R\" \"R\" \"R\"\n\nsqrt(9)           # Raiz cuadrada de 9\n\n[1] 3"
  },
  {
    "objectID": "P1.html#ayuda",
    "href": "P1.html#ayuda",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.5 Ayuda",
    "text": "1.5 Ayuda\nPedir ayuda es indispensable para aprender a escribir nuestros códigos. A prueba y error, es el mejor sistema para aprender. Podemos usar la función help, example y ?\n\nhelp(sum)         # Ayuda sobre función sum\nexample(sum)      # Ejemplo de función sum\n\n\nsum> ## Pass a vector to sum, and it will add the elements together.\nsum> sum(1:5)\n[1] 15\n\nsum> ## Pass several numbers to sum, and it also adds the elements.\nsum> sum(1, 2, 3, 4, 5)\n[1] 15\n\nsum> ## In fact, you can pass vectors into several arguments, and everything gets added.\nsum> sum(1:2, 3:5)\n[1] 15\n\nsum> ## If there are missing values, the sum is unknown, i.e., also missing, ....\nsum> sum(1:5, NA)\n[1] NA\n\nsum> ## ... unless  we exclude missing values explicitly:\nsum> sum(1:5, NA, na.rm = TRUE)\n[1] 15"
  },
  {
    "objectID": "P1.html#mi-ambiente",
    "href": "P1.html#mi-ambiente",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.6 Mi ambiente",
    "text": "1.6 Mi ambiente\nTodos los objetos que hemos declarado hasta ahora son parte de nuestro “ambiente” (environment). Para saber qué está en nuestro ambiente usamos el comando\n\nls()\n\n[1] \"m\"         \"mi_matrix\" \"n\"         \"sex\"       \"x\"         \"xx\"       \n[7] \"y\"         \"yy\"       \n\ngc()           # Garbage collection, reporta memoria en uso\n\n          used (Mb) gc trigger (Mb) limit (Mb) max used (Mb)\nNcells  605393 32.4    1322030 70.7         NA  1322030 70.7\nVcells 1110117  8.5    8388608 64.0      16384  1839372 14.1\n\n\nPara borrar todos nuestros objetos, usamos el siguiente comando, que equivale a usar la escobita de la venta de environment\n\nrm(list=ls())  # Borrar objetos actuales"
  },
  {
    "objectID": "P1.html#directorio-de-trabajo",
    "href": "P1.html#directorio-de-trabajo",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.7 Directorio de trabajo",
    "text": "1.7 Directorio de trabajo\nEs muy útil saber dónde estamos trabajando y donde queremos trabajar. Por eso podemos utilizar los siguientes comandos para saberlo\nOjo, checa, si estás desdes una PC, cómo cambian las “” por”/” o por “\\”\n\ngetwd()           # Directorio actual\n\n[1] \"/Users/anaescoto/Dropbox/2022/Curso_r_cnvl/coneval\"\n\n#setwd(\"C:/Users/anaes/Dropbox/2021/CursoR-posgrado\")# Cambio de directorio\n\nlist.files()      # Lista de archivos en ese directorio\n\n [1] \"01_ppt20221003.pptx\" \"Icon\\r\"              \"LICENSE\"            \n [4] \"Mi_Exportación.xlsx\" \"P1.qmd\"              \"P1.rmarkdown\"       \n [7] \"P10.qmd\"             \"P11.qmd\"             \"P12.qmd\"            \n[10] \"P2.qmd\"              \"P3.qmd\"              \"P4.R\"               \n[13] \"P4.qmd\"              \"P5.R\"                \"P5.qmd\"             \n[16] \"P6.qmd\"              \"P7.qmd\"              \"P8.qmd\"             \n[19] \"P9.qmd\"              \"Pendiente.qmd\"       \"README.md\"          \n[22] \"_quarto.yml\"         \"coneval.Rproj\"       \"datos\"              \n[25] \"docs\"                \"index.html\"          \"index.qmd\"          \n[28] \"instala.html\"        \"instala.qmd\"         \"intro1.png\"         \n[31] \"mapas2.R\"            \"mds.xlsx\"            \"modelos.xlsx\"       \n[34] \"pruebas_mapas.R\"     \"rrefine.R\"           \"site_libs\"          \n[37] \"tabs.xlsx\"          \n\n\nChecar que esto también se puede hacer desde el menú:\n\n\n\ni0"
  },
  {
    "objectID": "P1.html#proyectos",
    "href": "P1.html#proyectos",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.8 Proyectos",
    "text": "1.8 Proyectos\nPero… a veces preferimos trabajar en proyectos, sobre todo porque nos da más control.\nHay gente que lo dice mejor que yo, como Hadley Wickham: https://es.r4ds.hadley.nz/flujo-de-trabajo-proyectos.html"
  },
  {
    "objectID": "P1.html#instalación-de-paquetes",
    "href": "P1.html#instalación-de-paquetes",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.9 Instalación de paquetes",
    "text": "1.9 Instalación de paquetes\nLos paquetes son útiles para realizar funciones especiales. La especialización de paquetes es más rápida en R que en otros programas por ser un software libre.\nVamos a instalar el paquete “foreign”, como su nombre lo indica, nos permite leer elementos “extranjeros” en R. Es sumamente útil porque nos permite leer casi todos los formatos, sin necesidad de usar paquetes especializados como StatTransfer.\nPara instalar las paqueterías usamos el siguiente comando “install.packages()” Checa que adentro del paréntesis va el nombre de la librería, con comillas.\nCon la opción “dependencies = TRUE” R nos instalará no sólo la librería o paquete que estamos pidiendo, sino todo aquellos paquetes que necesite la librería en cuestión. Muchas veces los diseños de los paquetes implican el uso de algún otro anterior. Por lo que poner esta sentencia nos puede ahorrar errores cuando estemos usando el paquete. Piensa que esto es similar a cuando enciendes tu computadora y tu sistema operativo te pide que mantengas las actualizaciones.\nVamos a instalar dos librerías que nos permiten importar formatos.\n\n#install.packages(\"foreign\", dependencies = TRUE)\n#install.packages(\"haven\", dependencies = TRUE)\n\nEste proceso no hay que hacerlo siempre. Si no sólo la primera vez. Una vez instalado un paquete de librería, la llamamos con el comando “library”\n\nlibrary(foreign)\nlibrary(haven)\n\n“foreing” nos permite leer archivos en formato de dBase, con extensión “.dbf”. Si bien no es un formato muy común para los investigadores, sí para los que generan la información, puesto que dBase es uno de los principales programas de administración de bases de datos.\nHe puesto un ejemplo de una base de datos mexicana en dbf, en este formato.\n\nejemplo_dbf<-read.dbf(\"datos/ejemplo_dbf.DBF\") #checa cómo nos vamos adentro de nuestro directorio"
  },
  {
    "objectID": "P1.html#paquete-pacman",
    "href": "P1.html#paquete-pacman",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.10 Paquete pacman",
    "text": "1.10 Paquete pacman\nEn general, cuando hacemos nuestro código querremos verificar que nuestras librerías estén instaladas. Si actualizamos nuestro R y Rstudio es probable (sobre todo en MAC) que hayamos perdido alguno.\nEste es un ejemplo de un código. Y vamos a introducir un paquete muy útil llamado “pacman”\n\nif (!require(\"pacman\")) install.packages(\"pacman\") # instala pacman si se requiere\n\nLoading required package: pacman\n\npacman::p_load(tidyverse, readxl, writexl, haven, sjlabelled, foreign) #carga los paquetes necesarios para esta práctica\n\nHay muchos formatos de almacenamiento de bases de datos. Vamos a aprender a importar información desde ellos."
  },
  {
    "objectID": "P2.html",
    "href": "P2.html",
    "title": "2  Manejo de datos: importación, selección y revisión",
    "section": "",
    "text": "Vamos a llamar algunas librerías básicas, el tidyverse (que son muchas librerías) y sjlabelled que nos sirve para el manejo de etiquetas\n\nif (!require(\"pacman\")) install.packages(\"pacman\") # instala pacman si se requiere\n\nLoading required package: pacman\n\npacman::p_load(tidyverse, haven, sjlabelled, foreign, janitor) #carga los paquetes necesarios para esta práctica"
  },
  {
    "objectID": "P2.html#importación-de-datos",
    "href": "P2.html#importación-de-datos",
    "title": "2  Manejo de datos: importación, selección y revisión",
    "section": "2.2 Importación de datos",
    "text": "2.2 Importación de datos\n\n2.2.1 Desde Excel\nEl paquete más compatible con RStudio es readxl. A veces, otros paquetes tienen más problemas de configuración entre R y el Java.\n\nejemploxl <- readxl::read_excel(\"datos/ejemplo_xlsx.xlsx\", sheet = \"para_importar\")\n\nNew names:\n• `` -> `...128`\n• `` -> `...129`\n• `` -> `...132`\n• `PIB (Paridad de Poder Adquisitivo)` -> `PIB (Paridad de Poder\n  Adquisitivo)...135`\n• `PIB (Paridad de Poder Adquisitivo)` -> `PIB (Paridad de Poder\n  Adquisitivo)...136`\n• `PIB per cápita (Paridad de Poder Adquisitivo)` -> `PIB per cápita (Paridad\n  de Poder Adquisitivo)...137`\n• `PIB per cápita (Paridad de Poder Adquisitivo)` -> `PIB per cápita (Paridad\n  de Poder Adquisitivo)...138`\n• `PIB per cápita` -> `PIB per cápita...139`\n• `PIB per cápita` -> `PIB per cápita...140`\n• `PIB` -> `PIB...141`\n• `PIB` -> `PIB...142`\n\n\nComo el nombre de paquete lo indica, sólo lee. Para escribir en este formato, recomiendo el paquete “writexl”. Lo instalamos anteriormente.\nSi quisiéramos exportar un objeto a Excel\n\nwritexl::write_xlsx(ejemploxl, path = \"Mi_Exportación.xlsx\")\n\n\n\n2.2.2 Desde STATA y SPSS\nSi bien también se puede realizar desde el paquete foreign. Pero este no importa algunas características como las etiquetas y tampoco funciona con las versiones más nuevas de STATA. Vamos a instalar otro paquete, compatible con el mundo tidyverse.\nRecuerda que no hay que instalarlo (viene adentro de tidyverse). Se instalasólo la primera vez. Una vez instalado un paquete, lo llamamos con el comando “library”\n\nconcentrado2020 <- haven::read_dta(\"datos/concentrado2020.dta\")\n\n!Importante, a R no le gustan los objetos con nombres que empiezan en números\nEl paquete haven sí exporta información.\n\nhaven::write_dta(concentrado2020, \"datos/mi_exportación.dta\", version = 12)\n\nCon SSPS es muy parecido. Dentro de “haven” hay una función específica para ello.\n\n#encevi_hogar<- haven::read_sav(\"datos/encevi_hogar.sav\")\n\nPara escribir\n\n#haven::write_sav(concentrado2020 , \"mi_exportacion.sav\")\n\nCheca que en todas las exportaciones en los nombres hay que incluir la extensión del programa. Si quieres guardar en un lugar diferente al directorio del trabajo, hay que escribir toda la ruta dentro de la computadora."
  },
  {
    "objectID": "P2.html#revisión-de-nuestra-base",
    "href": "P2.html#revisión-de-nuestra-base",
    "title": "2  Manejo de datos: importación, selección y revisión",
    "section": "2.3 Revisión de nuestra base",
    "text": "2.3 Revisión de nuestra base\nVamos a revisar la base, brevemente la base\n\nclass(concentrado2020) # tipo de objeto\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\nnames(concentrado2020) # lista las variables\n\n  [1] \"folioviv\"   \"foliohog\"   \"ubica_geo\"  \"tam_loc\"    \"est_socio\" \n  [6] \"est_dis\"    \"upm\"        \"factor\"     \"clase_hog\"  \"sexo_jefe\" \n [11] \"edad_jefe\"  \"educa_jefe\" \"tot_integ\"  \"hombres\"    \"mujeres\"   \n [16] \"mayores\"    \"menores\"    \"p12_64\"     \"p65mas\"     \"ocupados\"  \n [21] \"percep_ing\" \"perc_ocupa\" \"ing_cor\"    \"ingtrab\"    \"trabajo\"   \n [26] \"sueldos\"    \"horas_extr\" \"comisiones\" \"aguinaldo\"  \"indemtrab\" \n [31] \"otra_rem\"   \"remu_espec\" \"negocio\"    \"noagrop\"    \"industria\" \n [36] \"comercio\"   \"servicios\"  \"agrope\"     \"agricolas\"  \"pecuarios\" \n [41] \"reproducc\"  \"pesca\"      \"otros_trab\" \"rentas\"     \"utilidad\"  \n [46] \"arrenda\"    \"transfer\"   \"jubilacion\" \"becas\"      \"donativos\" \n [51] \"remesas\"    \"bene_gob\"   \"transf_hog\" \"trans_inst\" \"estim_alqu\"\n [56] \"otros_ing\"  \"gasto_mon\"  \"alimentos\"  \"ali_dentro\" \"cereales\"  \n [61] \"carnes\"     \"pescado\"    \"leche\"      \"huevo\"      \"aceites\"   \n [66] \"tuberculo\"  \"verduras\"   \"frutas\"     \"azucar\"     \"cafe\"      \n [71] \"especias\"   \"otros_alim\" \"bebidas\"    \"ali_fuera\"  \"tabaco\"    \n [76] \"vesti_calz\" \"vestido\"    \"calzado\"    \"vivienda\"   \"alquiler\"  \n [81] \"pred_cons\"  \"agua\"       \"energia\"    \"limpieza\"   \"cuidados\"  \n [86] \"utensilios\" \"enseres\"    \"salud\"      \"atenc_ambu\" \"hospital\"  \n [91] \"medicinas\"  \"transporte\" \"publico\"    \"foraneo\"    \"adqui_vehi\"\n [96] \"mantenim\"   \"refaccion\"  \"combus\"     \"comunica\"   \"educa_espa\"\n[101] \"educacion\"  \"esparci\"    \"paq_turist\" \"personales\" \"cuida_pers\"\n[106] \"acces_pers\" \"otros_gas\"  \"transf_gas\" \"percep_tot\" \"retiro_inv\"\n[111] \"prestamos\"  \"otras_perc\" \"ero_nm_viv\" \"ero_nm_hog\" \"erogac_tot\"\n[116] \"cuota_viv\"  \"mater_serv\" \"material\"   \"servicio\"   \"deposito\"  \n[121] \"prest_terc\" \"pago_tarje\" \"deudas\"     \"balance\"    \"otras_erog\"\n[126] \"smg\"       \n\nhead(concentrado2020) # muestra las primeras 6 líneas\n\n# A tibble: 6 × 126\n  folioviv  folio…¹ ubica…² tam_loc est_s…³ est_dis upm   factor clase…⁴ sexo_…⁵\n  <chr>     <chr>   <chr>   <chr>   <chr>   <chr>   <chr>  <dbl> <chr>   <chr>  \n1 01000136… 1       01001   1       3       002     0000…    190 2       2      \n2 01000136… 1       01001   1       3       002     0000…    190 2       1      \n3 01000178… 1       01001   1       3       002     0000…    189 2       1      \n4 01000178… 1       01001   1       3       002     0000…    189 2       1      \n5 01000178… 1       01001   1       3       002     0000…    189 2       1      \n6 01000178… 1       01001   1       3       002     0000…    189 2       1      \n# … with 116 more variables: edad_jefe <dbl>, educa_jefe <chr>,\n#   tot_integ <dbl>, hombres <dbl>, mujeres <dbl>, mayores <dbl>,\n#   menores <dbl>, p12_64 <dbl>, p65mas <dbl>, ocupados <dbl>,\n#   percep_ing <dbl>, perc_ocupa <dbl>, ing_cor <dbl>, ingtrab <dbl>,\n#   trabajo <dbl>, sueldos <dbl>, horas_extr <dbl>, comisiones <dbl>,\n#   aguinaldo <dbl>, indemtrab <dbl>, otra_rem <dbl>, remu_espec <dbl>,\n#   negocio <dbl>, noagrop <dbl>, industria <dbl>, comercio <dbl>, …\n\ntable(concentrado2020$clase_hog) # un tabulado simple\n\n\n    1     2     3     4     5 \n10842 55339 21819   717   289"
  },
  {
    "objectID": "P2.html#revisión-con-dplyr",
    "href": "P2.html#revisión-con-dplyr",
    "title": "2  Manejo de datos: importación, selección y revisión",
    "section": "2.4 Revisión con dplyr",
    "text": "2.4 Revisión con dplyr\nOperador de “pipe” o “tubería” %>% (Ctrl+Shift+M) Antes de continuar, presentemos el operador “pipe” %>%. dplyr importa este operador de otro paquete (magrittr). Este operador le permite canalizar la salida de una función a la entrada de otra función. En lugar de funciones de anidamiento (lectura desde adentro hacia afuera), la idea de la tubería es leer las funciones de izquierda a derecha.\n\nconcentrado2020 %>% \n    dplyr::select(sexo_jefe, edad_jefe) %>% \n    head\n\n# A tibble: 6 × 2\n  sexo_jefe edad_jefe\n  <chr>         <dbl>\n1 2                48\n2 1                46\n3 1                26\n4 1                29\n5 1                63\n6 1                33\n\n\n\nconcentrado2020 %>% \n    dplyr::select(sexo_jefe, edad_jefe) %>% \n    glimpse\n\nRows: 89,006\nColumns: 2\n$ sexo_jefe <chr> \"2\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"2\", …\n$ edad_jefe <dbl> 48, 46, 26, 29, 63, 33, 60, 76, 74, 37, 76, 79, 37, 80, 46, …"
  },
  {
    "objectID": "P2.html#etiquetas-y-cómo-usarlas",
    "href": "P2.html#etiquetas-y-cómo-usarlas",
    "title": "2  Manejo de datos: importación, selección y revisión",
    "section": "2.5 Etiquetas y cómo usarlas",
    "text": "2.5 Etiquetas y cómo usarlas\nPodemos ver que los objetos “data.frame”(spoiler, ya hablaremos de ellos)\n\nclass(concentrado2020$sexo_jefe)\n\n[1] \"character\"\n\n\n\n2.5.1 Ejemplo de etiquetado\nPara que se vea mejor nuestro tabulado, sería bueno que nuestras variables tuvieran etiqueta. Para ello utilizaremos el paquete “sjlabelled”\n\netiqueta_sex<-c(\"Hombre\", \"Mujer\")\n\nconcentrado2020<-concentrado2020 %>% \n  mutate(sexo_jefe=as_numeric(sexo_jefe)) %>% # para quitar el \"string\"\n  sjlabelled::set_labels(sexo_jefe, labels=etiqueta_sex) \n\nEtiquetemos también la variable “clase_hog”. Podemos checar cómo está estructurada esta base acá https://www.inegi.org.mx/rnm/index.php/catalog/685/data-dictionary\n\nconcentrado2020<-concentrado2020 %>% \n  mutate(clase_hog=as_numeric(clase_hog)) %>% # para quitar el \"string\"\n  sjlabelled::set_labels(clase_hog, labels=c(\"unipersonal\",\n                                             \"nuclear\", \n                                             \"ampliado\",\n                                             \"compuesto\",\n                                             \"corresidente\")) \n\n\ntable(concentrado2020$sexo_jefe)\n\n\n    1     2 \n63230 25776 \n\ntable(sjlabelled::as_label(concentrado2020$sexo_jefe))\n\n\nHombre  Mujer \n 63230  25776 \n\n\n\n\n2.5.2 Ojeando\n\ndplyr::glimpse(concentrado2020)\n\nRows: 89,006\nColumns: 126\n$ folioviv   <chr> \"0100013605\", \"0100013606\", \"0100017801\", \"0100017802\", \"01…\n$ foliohog   <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\",…\n$ ubica_geo  <chr> \"01001\", \"01001\", \"01001\", \"01001\", \"01001\", \"01001\", \"0100…\n$ tam_loc    <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\",…\n$ est_socio  <chr> \"3\", \"3\", \"3\", \"3\", \"3\", \"3\", \"3\", \"3\", \"3\", \"3\", \"3\", \"3\",…\n$ est_dis    <chr> \"002\", \"002\", \"002\", \"002\", \"002\", \"002\", \"002\", \"002\", \"00…\n$ upm        <chr> \"0000001\", \"0000001\", \"0000002\", \"0000002\", \"0000002\", \"000…\n$ factor     <dbl> 190, 190, 189, 189, 189, 189, 189, 168, 168, 168, 168, 168,…\n$ clase_hog  <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 1, 1, 1, 3, 3, 2, 3, 5, 2,…\n$ sexo_jefe  <dbl> 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1,…\n$ edad_jefe  <dbl> 48, 46, 26, 29, 63, 33, 60, 76, 74, 37, 76, 79, 37, 80, 46,…\n$ educa_jefe <chr> \"09\", \"08\", \"10\", \"08\", \"10\", \"06\", \"03\", \"08\", \"03\", \"06\",…\n$ tot_integ  <dbl> 3, 4, 2, 2, 2, 4, 3, 2, 2, 6, 6, 1, 1, 1, 2, 3, 3, 2, 2, 5,…\n$ hombres    <dbl> 1, 3, 1, 2, 1, 2, 2, 1, 1, 3, 4, 0, 1, 0, 0, 2, 1, 1, 2, 3,…\n$ mujeres    <dbl> 2, 1, 1, 0, 1, 2, 1, 1, 1, 3, 2, 1, 0, 1, 2, 1, 2, 1, 0, 2,…\n$ mayores    <dbl> 3, 3, 2, 1, 2, 2, 3, 2, 2, 3, 6, 1, 1, 1, 2, 3, 2, 2, 2, 5,…\n$ menores    <dbl> 0, 1, 0, 1, 0, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,…\n$ p12_64     <dbl> 3, 3, 2, 1, 2, 2, 3, 0, 0, 3, 4, 0, 1, 0, 2, 1, 2, 1, 2, 5,…\n$ p65mas     <dbl> 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 2, 1, 0, 1, 0, 2, 0, 1, 0, 0,…\n$ ocupados   <dbl> 1, 1, 2, 1, 1, 1, 1, 0, 1, 3, 1, 1, 1, 0, 2, 0, 1, 1, 2, 2,…\n$ percep_ing <dbl> 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 5, 1, 1, 1, 1, 2, 1, 2, 2, 3,…\n$ perc_ocupa <dbl> 1, 1, 2, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 2, 2,…\n$ ing_cor    <dbl> 16229.49, 31425.68, 33979.16, 71557.37, 90703.26, 30368.84,…\n$ ingtrab    <dbl> 13278.68, 22254.09, 33979.16, 71557.37, 48113.11, 30368.84,…\n$ trabajo    <dbl> 0.00, 22254.09, 24098.35, 71557.37, 48113.11, 30368.84, 148…\n$ sueldos    <dbl> 0.00, 21639.34, 23606.55, 67868.85, 47213.11, 29508.19, 140…\n$ horas_extr <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ comisiones <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ aguinaldo  <dbl> 0.00, 614.75, 491.80, 3688.52, 0.00, 860.65, 737.70, 0.00, …\n$ indemtrab  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ otra_rem   <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ remu_espec <dbl> 0.00, 0.00, 0.00, 0.00, 900.00, 0.00, 0.00, 0.00, 0.00, 0.0…\n$ negocio    <dbl> 1573.77, 0.00, 9880.81, 0.00, 0.00, 0.00, 0.00, 0.00, 8659.…\n$ noagrop    <dbl> 1573.77, 0.00, 9880.81, 0.00, 0.00, 0.00, 0.00, 0.00, 8659.…\n$ industria  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ comercio   <dbl> 1573.77, 0.00, 9880.81, 0.00, 0.00, 0.00, 0.00, 0.00, 8659.…\n$ servicios  <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ agrope     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ agricolas  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ pecuarios  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ reproducc  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ pesca      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ otros_trab <dbl> 11704.91, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0…\n$ rentas     <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 15497…\n$ utilidad   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 154979, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ arrenda    <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ transfer   <dbl> 2459.01, 1671.59, 0.00, 0.00, 22131.14, 0.00, 25967.21, 130…\n$ jubilacion <dbl> 0.00, 0.00, 0.00, 0.00, 22131.14, 0.00, 25967.21, 7336.95, …\n$ becas      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ donativos  <dbl> 885.24, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 29.34, 0.…\n$ remesas    <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ bene_gob   <dbl> 1573.77, 1573.77, 0.00, 0.00, 0.00, 0.00, 0.00, 5086.95, 10…\n$ transf_hog <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 606.51, 0.00, 0.0…\n$ trans_inst <dbl> 0.00, 97.82, 0.00, 0.00, 0.00, 0.00, 0.00, 58.69, 0.00, 0.0…\n$ estim_alqu <dbl> 0.00, 7500.00, 0.00, 0.00, 18000.00, 0.00, 12000.00, 11612.…\n$ otros_ing  <dbl> 491.80, 0.00, 0.00, 0.00, 2459.01, 0.00, 0.00, 0.00, 0.00, …\n$ gasto_mon  <dbl> 24626.04, 20397.10, 44955.73, 82950.42, 30140.68, 39991.94,…\n$ alimentos  <dbl> 14732.80, 9321.32, 15081.32, 26921.53, 11969.93, 7547.03, 1…\n$ ali_dentro <dbl> 13549.96, 9321.32, 9295.63, 22164.39, 3355.69, 7547.03, 112…\n$ cereales   <dbl> 3990.78, 1324.26, 1594.26, 2441.54, 0.00, 1529.96, 1259.98,…\n$ carnes     <dbl> 989.99, 3882.84, 0.00, 4513.33, 3034.27, 4204.25, 2031.41, …\n$ pescado    <dbl> 0.00, 0.00, 0.00, 1025.87, 0.00, 0.00, 771.42, 0.00, 0.00, …\n$ leche      <dbl> 1613.54, 925.71, 0.00, 449.99, 321.42, 321.42, 2494.25, 707…\n$ huevo      <dbl> 822.85, 745.70, 925.71, 0.00, 0.00, 244.28, 642.85, 0.00, 0…\n$ aceites    <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 1067.13, 0.00, 0.00, 0.00, 0.…\n$ tuberculo  <dbl> 347.14, 0.00, 0.00, 197.48, 0.00, 0.00, 0.00, 411.42, 0.00,…\n$ verduras   <dbl> 655.70, 1157.10, 385.71, 2413.26, 0.00, 0.00, 1896.37, 3439…\n$ frutas     <dbl> 0.00, 0.00, 0.00, 1367.85, 0.00, 0.00, 642.85, 1504.25, 0.0…\n$ azucar     <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ cafe       <dbl> 925.71, 0.00, 0.00, 86.52, 0.00, 0.00, 0.00, 77.14, 0.00, 0…\n$ especias   <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ otros_alim <dbl> 3304.26, 1285.71, 3278.56, 9668.55, 0.00, 179.99, 1542.85, …\n$ bebidas    <dbl> 899.99, 0.00, 3111.39, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, …\n$ ali_fuera  <dbl> 1182.84, 0.00, 5785.69, 4757.14, 8614.24, 0.00, 0.00, 0.00,…\n$ tabaco     <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ vesti_calz <dbl> 0.00, 0.00, 1006.60, 4509.73, 0.00, 371.73, 0.00, 215.21, 0…\n$ vestido    <dbl> 0.00, 0.00, 1006.60, 4294.52, 0.00, 0.00, 0.00, 215.21, 0.0…\n$ calzado    <dbl> 0.00, 0.00, 0.00, 215.21, 0.00, 371.73, 0.00, 0.00, 0.00, 0…\n$ vivienda   <dbl> 2850.00, 2308.50, 11097.00, 13984.50, 3179.50, 12450.00, 34…\n$ alquiler   <dbl> 0.00, 0.00, 9000.00, 12000.00, 0.00, 10500.00, 0.00, 0.00, …\n$ pred_cons  <dbl> 0.0, 0.0, 0.0, 0.0, 212.5, 0.0, 300.0, 100.0, 100.0, 150.0,…\n$ agua       <dbl> 750.00, 990.00, 420.00, 756.00, 408.00, 1500.00, 600.00, 39…\n$ energia    <dbl> 2100.00, 1318.50, 1677.00, 1228.50, 2559.00, 450.00, 2550.0…\n$ limpieza   <dbl> 375.00, 924.00, 2530.16, 708.00, 920.80, 408.00, 845.73, 72…\n$ cuidados   <dbl> 375.00, 924.00, 2403.00, 708.00, 429.00, 408.00, 699.00, 72…\n$ utensilios <dbl> 0.00, 0.00, 39.13, 0.00, 0.00, 0.00, 146.73, 0.00, 0.00, 0.…\n$ enseres    <dbl> 0.00, 0.00, 88.03, 0.00, 491.80, 0.00, 0.00, 0.00, 0.00, 0.…\n$ salud      <dbl> 0.00, 782.60, 4509.77, 39.13, 2412.39, 229.87, 213.25, 309.…\n$ atenc_ambu <dbl> 0.00, 782.60, 3913.04, 0.00, 0.00, 229.87, 0.00, 309.12, 0.…\n$ hospital   <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ medicinas  <dbl> 0.00, 0.00, 596.73, 39.13, 2412.39, 0.00, 213.25, 0.00, 426…\n$ transporte <dbl> 5447.24, 4915.68, 7029.68, 7022.39, 7154.75, 16171.31, 4200…\n$ publico    <dbl> 1812.82, 1465.68, 514.28, 899.99, 0.00, 1594.27, 0.00, 1092…\n$ foraneo    <dbl> 634.42, 0.00, 1475.40, 1475.40, 0.00, 0.00, 0.00, 0.00, 0.0…\n$ adqui_vehi <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 7377.04, 0.00, 0.00, 0.00, 0.…\n$ mantenim   <dbl> 0.00, 1200.00, 3000.00, 0.00, 6014.75, 1950.00, 3000.00, 11…\n$ refaccion  <dbl> 0.00, 0.00, 0.00, 0.00, 2114.75, 0.00, 0.00, 538.04, 0.00, …\n$ combus     <dbl> 0.00, 1200.00, 3000.00, 0.00, 3900.00, 1950.00, 3000.00, 58…\n$ comunica   <dbl> 3000.00, 2250.00, 2040.00, 4647.00, 1140.00, 5250.00, 1200.…\n$ educa_espa <dbl> 120.00, 0.00, 693.44, 26408.75, 1440.00, 1035.00, 0.00, 0.0…\n$ educacion  <dbl> 120.00, 0.00, 0.00, 7650.00, 0.00, 1035.00, 0.00, 0.00, 0.0…\n$ esparci    <dbl> 0.00, 0.00, 693.44, 13840.72, 1440.00, 0.00, 0.00, 0.00, 0.…\n$ paq_turist <dbl> 0.00, 0.00, 0.00, 4918.03, 0.00, 0.00, 0.00, 0.00, 0.00, 0.…\n$ personales <dbl> 1101.00, 2145.00, 2766.78, 2767.30, 112.50, 1779.00, 521.50…\n$ cuida_pers <dbl> 1101.00, 2145.00, 2082.00, 2601.00, 0.00, 1029.00, 384.00, …\n$ acces_pers <dbl> 0.00, 0.00, 684.78, 166.30, 0.00, 0.00, 0.00, 0.00, 0.00, 1…\n$ otros_gas  <dbl> 0.00, 0.00, 0.00, 0.00, 112.50, 750.00, 137.50, 125.00, 0.0…\n$ transf_gas <dbl> 0.00, 0.00, 240.98, 589.09, 2950.81, 0.00, 0.00, 386.40, 0.…\n$ percep_tot <dbl> 0.00, 2571.42, 6014.03, 1799.99, 4885.71, 5528.56, 0.00, 22…\n$ retiro_inv <dbl> 0.00, 0.00, 3442.61, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.…\n$ prestamos  <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ otras_perc <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 48.91, 0.00, 2445…\n$ ero_nm_viv <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ ero_nm_hog <dbl> 0.00, 2571.42, 2571.42, 1799.99, 4885.71, 5528.56, 0.00, 22…\n$ erogac_tot <dbl> 0.00, 2360.65, 1062.28, 885.24, 5901.63, 0.00, 0.00, 0.00, …\n$ cuota_viv  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ mater_serv <dbl> 0.00, 0.00, 78.68, 0.00, 0.00, 0.00, 0.00, 0.00, 29.34, 0.0…\n$ material   <dbl> 0.00, 0.00, 78.68, 0.00, 0.00, 0.00, 0.00, 0.00, 29.34, 0.0…\n$ servicio   <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ deposito   <dbl> 0.00, 0.00, 983.60, 0.00, 5901.63, 0.00, 0.00, 0.00, 0.00, …\n$ prest_terc <dbl> 0.00, 0.00, 0.00, 885.24, 0.00, 0.00, 0.00, 0.00, 0.00, 0.0…\n$ pago_tarje <dbl> 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,…\n$ deudas     <dbl> 0.00, 2360.65, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.…\n$ balance    <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ otras_erog <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ smg        <dbl> 11089.8, 11089.8, 11089.8, 11089.8, 11089.8, 11089.8, 11089…\n\ndplyr::glimpse(concentrado2020[,20:30]) # en corchete del lado derecho podemos ojear columnas \n\nRows: 89,006\nColumns: 11\n$ ocupados   <dbl> 1, 1, 2, 1, 1, 1, 1, 0, 1, 3, 1, 1, 1, 0, 2, 0, 1, 1, 2, 2,…\n$ percep_ing <dbl> 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 5, 1, 1, 1, 1, 2, 1, 2, 2, 3,…\n$ perc_ocupa <dbl> 1, 1, 2, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 2, 2,…\n$ ing_cor    <dbl> 16229.49, 31425.68, 33979.16, 71557.37, 90703.26, 30368.84,…\n$ ingtrab    <dbl> 13278.68, 22254.09, 33979.16, 71557.37, 48113.11, 30368.84,…\n$ trabajo    <dbl> 0.00, 22254.09, 24098.35, 71557.37, 48113.11, 30368.84, 148…\n$ sueldos    <dbl> 0.00, 21639.34, 23606.55, 67868.85, 47213.11, 29508.19, 140…\n$ horas_extr <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ comisiones <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ aguinaldo  <dbl> 0.00, 614.75, 491.80, 3688.52, 0.00, 860.65, 737.70, 0.00, …\n$ indemtrab  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n\n\nPodemos hacer un tipo “labelbook”, usando una función que viene de la librería “sjlabelled”, “get_labels”. Funciona para toda la base o para columnas, o para variables.\n\n#print(get_labels(concentrado2020)) #todas\nprint(get_labels(concentrado2020[, 20:30])) #de las segundas 10 variables\n\n$ocupados\nNULL\n\n$percep_ing\nNULL\n\n$perc_ocupa\nNULL\n\n$ing_cor\nNULL\n\n$ingtrab\nNULL\n\n$trabajo\nNULL\n\n$sueldos\nNULL\n\n$horas_extr\nNULL\n\n$comisiones\nNULL\n\n$aguinaldo\nNULL\n\n$indemtrab\nNULL\n\n\nNo tienen :(\nEn singular nos da las etiquetas de las variables, no de los valores:\n\n#print(get_label(concentrado2020)) #todas\nprint(get_label(concentrado2020[, 1:10])) #de las primeras 10 variables\n\n                      folioviv                       foliohog \n\"Identificador de la vivienda\"      \"Identificador del hogar\" \n                     ubica_geo                        tam_loc \n        \"Ubicación geográfica\"          \"Tamaño de localidad\" \n                     est_socio                        est_dis \n      \"Estrato socioeconómico\"   \"Estrato de diseño muestral\" \n                           upm                         factor \n \"Unidad primaria de muestreo\"          \"Factor de expansión\" \n                     clase_hog                      sexo_jefe \n              \"Clase de hogar\"      \"Sexo del jefe del hogar\" \n\nprint(get_label(concentrado2020$clase_hog)) #\n\n[1] \"Clase de hogar\"\n\n\n\n\n2.5.3 Selección de casos y de variables\nPoco a poco vamos comprendiendo más la lógica de R. Hay varias “formas” de programar. Por lo que no te asustes si varios códigos llegan al mismo resultado\nPara revisar el contenido de un data frame podemos usar, como lo hicimos anteriormente, el formato basededatos$var o usar corchete, checa como estas cuatro formas tan el mismo resultado.\n\nx<-concentrado2020$ing_cor\nx<-concentrado2020[[\"ing_cor\"]]  # ¡Ojo con las comillas! \nx<-concentrado2020[,23]\nx<-concentrado2020[,\"ing_cor\"]\n\nAhora, con el formato de dplyr podemos llegar a lo mismo\n\nx<-concentrado2020 %>% \n  select(ing_cor)"
  },
  {
    "objectID": "P2.html#subsetting",
    "href": "P2.html#subsetting",
    "title": "2  Manejo de datos: importación, selección y revisión",
    "section": "2.6 “Subsetting”",
    "text": "2.6 “Subsetting”\nSelección “inversa” O sea no “botar algo”, es con el negativo. No funciona con todos los formatos\n\nx<-concentrado2020 %>% \n  select(-ing_cor)\n\nrm(x) #rm sólo bota objetos\n\nPero con los otros formatos podemos “asignar” valores adentro de un data.frame, y uno de eso valores puede ser “la nada””\n\nconcentrado2020$aproba2<-concentrado2020$ing_cor\nconcentrado2020$aproba2<-NULL\n\nDe aquí viene esa cuesta en el aprendizaje; tenemos que comprender en qué forma programó el que hizo la librería e incluso a veces cómo aprendió quién te está enseñando o el foro que estás leyendo.\nRara vez utilizamos una base de datos completa, y rara vez queremos hacer operaciones completas con ellas.\nVamos a pedir cosas más específicas y podemos seleccionar observaciones o filas. Como nuestra base de datos es muy grande, guardaremos el filtro o selección en un objeto.\n\nsubset1<-concentrado2020[concentrado2020$ing_cor>5000,]\n\nTambién podemos seleccionar columnas\n\nsubset2<- concentrado2020[, c(\"sexo_jefe\", \"edad_jefe\", \"ing_cor\")]\n\npodemos combinar los dos tipos de selección\n\nsubset3<- concentrado2020[(concentrado2020$ing_cor>5000 & concentrado2020$sexo_jefe==1 ), c(\"sexo_jefe\", \"edad_jefe\", \"ing_cor\")]\n\nCon dplyr, podemos usar “filter” y “select”\n\nsubset4<-concentrado2020 %>% \n  dplyr::filter(ing_cor>5000 & sexo_jefe==1) %>%\n    dplyr::select(sexo_jefe, edad_jefe, ing_cor)"
  },
  {
    "objectID": "P3.html",
    "href": "P3.html",
    "title": "3  Análisis descriptivo básico",
    "section": "",
    "text": "Desde el portal https://datos.gob.mx/ tenemos acceso a directo a varias fuentes de información, al ser datos abiertos, los archivos de texto son muy comunes.\nLeeremos parte de esa información, específicamente la de CONAPO https://datos.gob.mx/busca/dataset/proyecciones-de-la-poblacion-de-mexico-y-de-las-entidades-federativas-2016-2050\nEn estas bases hay acentos y otros carecteres especiales del español, por lo que agregaremos una opción de “encoding”, de lo contrario da error.\n\nmig_inter_quin_proyecciones <- read.csv(\"http://www.conapo.gob.mx/work/models/CONAPO/Datos_Abiertos/Proyecciones2018/mig_inter_quin_proyecciones.csv\", encoding=\"latin1\")\n#View(mig_inter_quin_proyecciones)\nnames(mig_inter_quin_proyecciones)\n\n[1] \"RENGLON\"     \"AÑO\"         \"ENTIDAD\"     \"CVE_GEO\"     \"EDAD\"       \n[6] \"SEXO\"        \"EMIGRANTES\"  \"INMIGRANTES\""
  },
  {
    "objectID": "P3.html#análisis-descriptivo-básico",
    "href": "P3.html#análisis-descriptivo-básico",
    "title": "3  Análisis descriptivo básico",
    "section": "3.2 Análisis descriptivo básico",
    "text": "3.2 Análisis descriptivo básico\nVamos a llamar algunas librerías básicas, el tidyverse (que son muchas librerías) y sjlabelled que nos sirve para el manejo de etiquetas\n\nif (!require(\"pacman\")) install.packages(\"pacman\") # instala pacman si se requiere\n\nLoading required package: pacman\n\npacman::p_load(tidyverse, haven, sjlabelled, foreign, janitor) #carga los paquetes necesarios para esta práctica\n\nE importamos la base\n\nconcentrado2020 <- haven::read_dta(\"datos/concentrado2020.dta\")"
  },
  {
    "objectID": "P3.html#variables-nominales",
    "href": "P3.html#variables-nominales",
    "title": "3  Análisis descriptivo básico",
    "section": "3.3 Variables nominales",
    "text": "3.3 Variables nominales\nLa variable nominal “sexo_jefe”, se captura con “1” para hombres y con un “2” para mujeres en la base de datos. Podemos establecer una operación de igual y además sumar los casos que cumplan con esta condición:\n\nconcentrado2020 %>% \n  dplyr::count(sexo_jefe==2) # cuentan los casos que cumplen con la condición \"sexo_jefe==2\"\n\n# A tibble: 2 × 2\n  `sexo_jefe == 2`     n\n  <lgl>            <int>\n1 FALSE            63230\n2 TRUE             25776\n\n\nEsto es a lo que nos referimos con contar frecuencias. Podemos contar casos que cumplan con una operación de igualdad.\n\nconcentrado2020 %>%\n  with(\n    table(sexo_jefe)\n    )\n\nsexo_jefe\n    1     2 \n63230 25776 \n\n\n\n3.3.1 Recordemos nuestro etiquetado\n\netiqueta_sex<-c(\"Hombre\", \"Mujer\")\n\nconcentrado2020<-concentrado2020 %>% \n  mutate(sexo_jefe=as_numeric(sexo_jefe)) %>% # para quitar el \"string\"\n  sjlabelled::set_labels(sexo_jefe, labels=etiqueta_sex) \n\n\nconcentrado2020<-concentrado2020 %>% \n  mutate(clase_hog=as_numeric(clase_hog)) %>% # para quitar el \"string\"\n  sjlabelled::set_labels(clase_hog, labels=c(\"unipersonal\",\n                                             \"nuclear\", \n                                             \"ampliado\",\n                                             \"compuesto\",\n                                             \"corresidente\")) \n\nCon “tabyl()”” de “janitor””\n\nconcentrado2020 %>%\n  dplyr::mutate(sexo_jefe=as_label(sexo_jefe))  %>%\n  janitor::tabyl(sexo_jefe)\n\n sexo_jefe     n   percent\n    Hombre 63230 0.7104015\n     Mujer 25776 0.2895985\n\n\nPara ver que esto es una distribución de frecuencias sería muy útil ver la proporción total, ello se realiza agregando un elemento más en nuestro código con una “tubería”:\n\nconcentrado2020 %>% \n  dplyr::mutate(sexo_jefe=as_label(sexo_jefe))  %>%\n  janitor::tabyl(sexo_jefe) %>% \n  janitor::adorn_totals()\n\n sexo_jefe     n   percent\n    Hombre 63230 0.7104015\n     Mujer 25776 0.2895985\n     Total 89006 1.0000000\n\n\nHoy revisamos algunos tipos de variables\n\nclass(concentrado2020$sexo_jefe) # variable sin etiqueta\n\n[1] \"numeric\"\n\nclass(as_label(concentrado2020$sexo_jefe)) # variable con etiqueta\n\n[1] \"factor\"\n\nclass(as_label(concentrado2020$educa_jefe)) # variable ordinal\n\n[1] \"character\"\n\nclass(concentrado2020$ing_cor) # variable de intervalo/razón\n\n[1] \"numeric\"\n\n\nEn general, tendremos variables de factor que podrían ser consideradas como cualitativas y numéricas. Aunque en realidad, R tiene muchas formas de almacenamiento. Como mostramos con el comando “glimpse()” en la práctica anterior, podemos revisar una variable en específico:\n\ndplyr::glimpse(concentrado2020$sexo_jefe)\n\n num [1:89006] 2 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \"labels\")= Named num [1:2] 1 2\n  ..- attr(*, \"names\")= chr [1:2] \"Hombre\" \"Mujer\"\n - attr(*, \"label\")= chr \"Sexo del jefe del hogar\"\n\n\n\nconcentrado2020 %>% mutate(sexo_jefe=as_label(sexo_jefe)) %>% # cambia los valores de la variable a sus etiquetas\n                tabyl(sexo_jefe) %>% # para hacer la tabla\n                adorn_totals() %>% # añade totales\n                adorn_pct_formatting()  # nos da porcentaje en lugar de proporción\n\n sexo_jefe     n percent\n    Hombre 63230   71.0%\n     Mujer 25776   29.0%\n     Total 89006  100.0%\n\n\nLa tubería o “pipe” %>% nos permite ir agregando elementos de manera sencilla nuestros comandos. En este caso decimos que dentro del objeto haga el cambio, luego la tabla, que le ponga porcentajes y finalmente que nos dé los totales. El total del 100% no aparece, por un elemento propio del programa."
  },
  {
    "objectID": "P3.html#variables-ordinales",
    "href": "P3.html#variables-ordinales",
    "title": "3  Análisis descriptivo básico",
    "section": "3.4 Variables ordinales",
    "text": "3.4 Variables ordinales\nSon variables que dan cuenta de cualidades o condiciones a través de categorías que guardan un orden entre sí.\nVamos a darle una “ojeada” a esta variable\n\nglimpse(concentrado2020$educa_jefe)\n\n chr [1:89006] \"09\" \"08\" \"10\" \"08\" \"10\" \"06\" \"03\" \"08\" \"03\" \"06\" \"03\" \"03\" ...\n - attr(*, \"label\")= chr \"Educación formal del jefe del hogar\"\n - attr(*, \"format.stata\")= chr \"%2s\"\n\n\nEtiquetemos también nuestra variable ordinal\n\nconcentrado2020 <-concentrado2020 %>% \n  mutate(educa_jefe=as.numeric(educa_jefe)) %>% \n  set_labels(educa_jefe,\n             labels=c(\"Sin instrucción\", \n                      \"Preescolar\",\n                      \"Primaria incompleta\",\n                      \"Primaria completa\",\n                      \"Secundaria incompleta\",\n                      \"Secundaria completa\",\n                      \"Preparatoria incompleta\",\n                      \"Preparatoria completa\",\n                      \"Profesional incompleta\",\n                      \"Profesional completa\",\n                      \"Posgrado\"))\n\nHoy hacemos la tabla, con las etiquetas y vemos que se ve más bonita:\n\nconcentrado2020 %>%\n  mutate(educa_jefe=as_label(educa_jefe)) %>% \n  tabyl(educa_jefe)\n\n              educa_jefe     n     percent\n         Sin instrucción  6160 0.069208817\n              Preescolar    20 0.000224704\n     Primaria incompleta 14577 0.163775476\n       Primaria completa 15136 0.170055951\n   Secundaria incompleta  2974 0.033413478\n     Secundaria completa 23865 0.268127991\n Preparatoria incompleta  3029 0.034031414\n   Preparatoria completa 10550 0.118531335\n  Profesional incompleta  2535 0.028481226\n    Profesional completa  8474 0.095207065\n                Posgrado  1686 0.018942543\n\n\nPara que no nos salgan las categorías sin datos podemos poner una opción dentro del comando “tabyl()”\n\nconcentrado2020 %>% \n  mutate(educa_jefe=as_label(educa_jefe)) %>% \n  tabyl(educa_jefe, show_missing_levels=F ) %>% # esta opción elimina los valores con 0\n  adorn_totals()  \n\n              educa_jefe     n     percent\n         Sin instrucción  6160 0.069208817\n              Preescolar    20 0.000224704\n     Primaria incompleta 14577 0.163775476\n       Primaria completa 15136 0.170055951\n   Secundaria incompleta  2974 0.033413478\n     Secundaria completa 23865 0.268127991\n Preparatoria incompleta  3029 0.034031414\n   Preparatoria completa 10550 0.118531335\n  Profesional incompleta  2535 0.028481226\n    Profesional completa  8474 0.095207065\n                Posgrado  1686 0.018942543\n                   Total 89006 1.000000000"
  },
  {
    "objectID": "P3.html#bivariado-cualitativo",
    "href": "P3.html#bivariado-cualitativo",
    "title": "3  Análisis descriptivo básico",
    "section": "3.5 Bivariado cualitativo",
    "text": "3.5 Bivariado cualitativo\n\n3.5.1 Cálculo de frecuencias\nLas tablas de doble entrada tiene su nombre porque en las columnas entran los valores de una variable categórica, y en las filas de una segunda. Basicamente es como hacer un conteo de todas las combinaciones posibles entre los valores de una variable con la otra.\nPor ejemplo, si quisiéramos combinar las dos variables que ya estudiamos lo podemos hacer, con una tabla de doble entrada:\n\nconcentrado2020 %>% \n  mutate(clase_hog=as_label(clase_hog)) %>% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %>% # para que las lea como factor\n                tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %>% # incluimos aquí \n                adorn_totals()  \n\n    clase_hog Hombre Mujer\n  unipersonal   6010  4832\n      nuclear  43151 12188\n     ampliado  13410  8409\n    compuesto    477   240\n corresidente    182   107\n        Total  63230 25776\n\n\nObservamos que en cada celda confluyen los casos que comparten las mismas características:\n\nconcentrado2020 %>%   \n    count(clase_hog==1 & sexo_jefe==1) # nos da la segunda celda de la izquierda\n\n# A tibble: 2 × 2\n  `clase_hog == 1 & sexo_jefe == 1`     n\n  <lgl>                             <int>\n1 FALSE                             82996\n2 TRUE                               6010\n\n\n\n\n3.5.2 Totales y porcentajes\nDe esta manera se colocan todos los datos. Si observa al poner la función “adorn_totals()” lo agregó como una nueva fila de totales, pero también podemos pedirle que agregue una columna de totales.\n\nconcentrado2020 %>% \n  mutate(clase_hog=as_label(clase_hog)) %>% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %>% # para que las lea como factor\n  tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %>% # incluimos aquí dos variables\n  adorn_totals(\"col\")  \n\n    clase_hog Hombre Mujer Total\n  unipersonal   6010  4832 10842\n      nuclear  43151 12188 55339\n     ampliado  13410  8409 21819\n    compuesto    477   240   717\n corresidente    182   107   289\n\n\nO bien agregar los dos, introduciendo en el argumento “c(”col”, “row”)” un vector de caracteres de las dos opciones requeridas:\n\nconcentrado2020 %>% \n  mutate(clase_hog=as_label(clase_hog)) %>% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %>% # para que las lea como factor\n  tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %>% # incluimos aquí dos variable\n  adorn_totals(c(\"col\", \"row\")) \n\n    clase_hog Hombre Mujer Total\n  unipersonal   6010  4832 10842\n      nuclear  43151 12188 55339\n     ampliado  13410  8409 21819\n    compuesto    477   240   717\n corresidente    182   107   289\n        Total  63230 25776 89006\n\n\nDel mismo modo, podemos calcular los porcentajes. Pero los podemos calcular de tres formas. Uno es que lo calculemos para los totales calculados para las filas, para las columnas o para el gran total poblacional.\nPara columnas tenemos el siguiente código y los siguientes resultados:\n\nconcentrado2020 %>% \n  mutate(clase_hog=as_label(clase_hog)) %>% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %>% # para que las lea como factor\n  tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %>% # incluimos aquí dos variable\n  adorn_totals(c(\"col\", \"row\")) %>% \n  adorn_percentages(\"col\") %>% # Divide los valores entre el total de la columna\n  adorn_pct_formatting() # lo vuelve porcentaje\n\n    clase_hog Hombre  Mujer  Total\n  unipersonal   9.5%  18.7%  12.2%\n      nuclear  68.2%  47.3%  62.2%\n     ampliado  21.2%  32.6%  24.5%\n    compuesto   0.8%   0.9%   0.8%\n corresidente   0.3%   0.4%   0.3%\n        Total 100.0% 100.0% 100.0%\n\n\nCuando se hagan cuadros de distribuciones (que todas sus partes suman 100), los porcentajes pueden ser una gran ayuda para la interpretación, sobre todos cuando se comparar poblaciones de categorías de diferente tamaño. Por lo general, queremos que los cuadros nos den información de donde están los totales y su 100%, de esta manera el lector se puede guiar de porcentaje con respecto a qué está leyendo. En este caso, vemos que el 100% es común en la última fila.\nVeamos la diferencia de cómo podemos leer la misma celda, pero hoy, hemos calculado los porcentajes a nivel de fila:\n\nconcentrado2020 %>% \n  mutate(clase_hog=as_label(clase_hog)) %>% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %>% # para que las lea como factor\n  tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %>% # incluimos aquí dos variable\n  adorn_totals(c(\"col\", \"row\")) %>% \n  adorn_percentages(\"row\") %>% # Divide los valores entre el total de la fila\n  adorn_pct_formatting() # lo vuelve porcentaje\n\n    clase_hog Hombre Mujer  Total\n  unipersonal  55.4% 44.6% 100.0%\n      nuclear  78.0% 22.0% 100.0%\n     ampliado  61.5% 38.5% 100.0%\n    compuesto  66.5% 33.5% 100.0%\n corresidente  63.0% 37.0% 100.0%\n        Total  71.0% 29.0% 100.0%\n\n\nFinalmente, podemos calcular los porcentajes con referencia a la población total en análisis. Es decir la celda en la esquina inferior derecha de nuestra tabla original.\n\nconcentrado2020 %>% \n  mutate(clase_hog=as_label(clase_hog)) %>% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %>% # para que las lea como factor\n  tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %>% # incluimos aquí dos variable\n  adorn_totals(c(\"col\", \"row\")) %>% \n  adorn_percentages(\"all\") %>% # Divide los valores entre el total de la población\n  adorn_pct_formatting() # lo vuelve porcentaje\n\n    clase_hog Hombre Mujer  Total\n  unipersonal   6.8%  5.4%  12.2%\n      nuclear  48.5% 13.7%  62.2%\n     ampliado  15.1%  9.4%  24.5%\n    compuesto   0.5%  0.3%   0.8%\n corresidente   0.2%  0.1%   0.3%\n        Total  71.0% 29.0% 100.0%"
  },
  {
    "objectID": "P3.html#descriptivos-para-variables-cuantitativas",
    "href": "P3.html#descriptivos-para-variables-cuantitativas",
    "title": "3  Análisis descriptivo básico",
    "section": "3.6 Descriptivos para variables cuantitativas",
    "text": "3.6 Descriptivos para variables cuantitativas\nVamos a empezar a revisar los gráficos para variables cuantitativas.\n\n3.6.1 Medidas numéricas básicas\n5 números\n\nsummary(concentrado2020$ing_cor) ## ingresos\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n       0    21392    35172    47838    57640 10702107 \n\n\nCon pipes se pueden crear “indicadores” de nuestras variables es un tibble\n\nconcentrado2020 %>% \n  summarise(nombre_indicador=mean(ing_cor, na.rm=T))\n\n# A tibble: 1 × 1\n  nombre_indicador\n             <dbl>\n1           47838.\n\n\n\n\n3.6.2 Histograma básico\n\nhist(concentrado2020$ing_cor)\n\n\n\n\nLe podemos modificar el título del eje de las x y de las y\n\nhist(concentrado2020$ing_cor, \n     main=\"Histograma de los ingresos corrientes\", \n     xlab=\"pesos mexicanos\", ylab=\"Frecuencia\") \n\n\n\n\n¡A ponerle colorcitos! Aquí hay una lista http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf\n\nhist(concentrado2020$ing_cor, \n     main=\"Histograma de los ingresos corrientes\", \n     xlab=\"pesos mexicanos\", ylab=\"Frecuencia\",\n     col=\"deeppink1\") \n\n\n\n\nCon pipes:\n\nconcentrado2020 %>% \n    with(hist(ing_cor)) # con with, para que entienda\n\n\n\n\nCuando usamos pipes, se debe de recordar que no es necesario escribir el nombre del data.frame en el filtro porque es lo primero que colocamos en nuestro “pipe”.\nCheca que cualquier aditamiento debe ir en el pipe donde está el comando de hist(). Ten cuidado con los paréntesis.\n\nconcentrado2020 %>% \n  filter(!is.na(ing_cor)) %>% # la ventaja de esta forma es que podemos hacer más operaciones\n    with(hist(ing_cor, main= \"histograma\"))"
  },
  {
    "objectID": "P4.html",
    "href": "P4.html",
    "title": "4  Factores de expansión y algunas otras medidas",
    "section": "",
    "text": "if (!require(\"pacman\")) install.packages(\"pacman\")#instala pacman si se requiere\n\nLoading required package: pacman\n\npacman::p_load(tidyverse,\n               readxl,\n               writexl, \n               haven,\n               sjlabelled, \n               janitor,\n               magrittr,\n               GGally,\n               wesanderson,\n               gt,\n               srvyr,\n               dineq\n)"
  },
  {
    "objectID": "P4.html#cargando-los-datos",
    "href": "P4.html#cargando-los-datos",
    "title": "4  Factores de expansión y algunas otras medidas",
    "section": "4.2 Cargando los datos",
    "text": "4.2 Cargando los datos\nDesde STATA y haremos unos cambios…\n\nconcentrado2020 <- read_dta(\"datos/concentrado2020.dta\") %>% \n  mutate(across(c(sexo_jefe, clase_hog, educa_jefe), as.numeric)) %>% # ojo aquí\n  set_labels(sexo_jefe, labels=c(\"Hombre\", \"Mujer\")) %>% \n  set_labels(clase_hog, labels=c(\"unipersonal\",\"nuclear\", \"ampliado\",\n                                 \"compuesto\",\"corresidente\"))   %>% \n   set_labels(educa_jefe,\n             labels=c(\"Sin instrucción\", \n                      \"Preescolar\",\n                      \"Primaria incompleta\",\n                      \"Primaria completa\",\n                      \"Secundaria incompleta\",\n                      \"Secundaria completa\",\n                      \"Preparatoria incompleta\",\n                      \"Preparatoria completa\",\n                      \"Profesional incompleta\",\n                      \"Profesional completa\",\n                      \"Posgrado\"))"
  },
  {
    "objectID": "P4.html#la-función-tally",
    "href": "P4.html#la-función-tally",
    "title": "4  Factores de expansión y algunas otras medidas",
    "section": "4.3 La función tally",
    "text": "4.3 La función tally\nEl comando “tabyl()” del paquete “janitor” es muy útil pero no es compatible con los factores del expansión. En realidad, tabyl() nos ahorra un poco el hecho de tener que agrupar nuestra base en categorías y luego hacer un conteo para cada una de ellas. “tally()” es un comando que nos hace ese conteo y “group_by” nos agrupa las observaciones de nuestra base de datos para hacer cualquier operación.\n\nconcentrado2020 %>% \n group_by(as_label(sexo_jefe)) %>% \n  tally(factor) %>% #nombre del factor\n  adorn_totals()  # Agrega total\n\n as_label(sexo_jefe)        n\n              Hombre 25072652\n               Mujer 10677007\n               Total 35749659\n\n\nPodemos usar funciones de tabyl\n\nconcentrado2020 %>% \n group_by(as_label(sexo_jefe)) %>% \n  tally(factor) %>% #nombre del factor\n  adorn_totals() %>% # Agrega total\n  adorn_percentages(\"all\")  %>% \n  adorn_pct_formatting()\n\n as_label(sexo_jefe)      n\n              Hombre  70.1%\n               Mujer  29.9%\n               Total 100.0%"
  },
  {
    "objectID": "P4.html#otras-formas",
    "href": "P4.html#otras-formas",
    "title": "4  Factores de expansión y algunas otras medidas",
    "section": "4.4 Otras formas",
    "text": "4.4 Otras formas\nLa función “count()” también permite dar pesos\n\nconcentrado2020 %>% \n  count(sexo_jefe, clase_hog,  wt = factor) \n\n# A tibble: 10 × 3\n   sexo_jefe clase_hog        n\n       <dbl>     <dbl>    <dbl>\n 1         1         1  2288234\n 2         1         2 17103678\n 3         1         3  5408464\n 4         1         4   179580\n 5         1         5    92696\n 6         2         1  1944813\n 7         2         2  4989763\n 8         2         3  3591323\n 9         2         4    98773\n10         2         5    52335\n\n\nEs compatible con etiquetas\n\nconcentrado2020 %>% \n  count(as_label(sexo_jefe), as_label(clase_hog),  wt = factor) \n\n# A tibble: 10 × 3\n   `as_label(sexo_jefe)` `as_label(clase_hog)`        n\n   <fct>                 <fct>                    <dbl>\n 1 Hombre                unipersonal            2288234\n 2 Hombre                nuclear               17103678\n 3 Hombre                ampliado               5408464\n 4 Hombre                compuesto               179580\n 5 Hombre                corresidente             92696\n 6 Mujer                 unipersonal            1944813\n 7 Mujer                 nuclear                4989763\n 8 Mujer                 ampliado               3591323\n 9 Mujer                 compuesto                98773\n10 Mujer                 corresidente             52335\n\n\nPodemos mover un poquito con pivot_wider para que se vea más a lo que acostumbramos a una tabla de frecuencias\n\nconcentrado2020 %>% \n  mutate_at(vars(sexo_jefe, clase_hog), as_label) %>% \n  count(sexo_jefe, clase_hog,  wt = factor) %>% \n  tidyr::pivot_wider(names_from = sexo_jefe, \n              values_from = n)\n\n# A tibble: 5 × 3\n  clase_hog      Hombre   Mujer\n  <fct>           <dbl>   <dbl>\n1 unipersonal   2288234 1944813\n2 nuclear      17103678 4989763\n3 ampliado      5408464 3591323\n4 compuesto      179580   98773\n5 corresidente    92696   52335\n\n\n\nconcentrado2020 %>% \n  mutate_at(vars(sexo_jefe, clase_hog), as_label) %>% # otra forma de mutate y as_label\n  count(sexo_jefe, clase_hog,  wt = factor) %>% \n  pivot_wider(names_from = sexo_jefe, \n              values_from = n) %>%\n  adorn_totals() %>% # Agrega total\n  adorn_percentages(\"col\")  %>% \n  adorn_pct_formatting()\n\n    clase_hog Hombre  Mujer\n  unipersonal   9.1%  18.2%\n      nuclear  68.2%  46.7%\n     ampliado  21.6%  33.6%\n    compuesto   0.7%   0.9%\n corresidente   0.4%   0.5%\n        Total 100.0% 100.0%"
  },
  {
    "objectID": "P4.html#diseño-complejo",
    "href": "P4.html#diseño-complejo",
    "title": "4  Factores de expansión y algunas otras medidas",
    "section": "4.5 Diseño complejo",
    "text": "4.5 Diseño complejo\nHay muchos diseños muestrales, asumiremos el diseño simple, pero hay que revisar la documentación de la base\n\n# Muestreo aleatorio\nags_srvy <- concentrado2020 %>%\n  as_survey_design(weights = factor)\n\nSi revisamos las encuestas tiene un diseño complejo, hay estratos y unidades primarias de muestreo\n\n# Muestreo estratificado\nags_srvy <- concentrado2020 %>%\n  as_survey_design(\n    upm = upm,\n    strata = est_dis,\n    weights = factor,\n    nest = TRUE)\n\nComo vemos esto es un archivo bien grande, por lo que mejor vamos a seleccionar un par de variables:\n\n# simple random sample\nags_srvy <- concentrado2020 %>%\n  select(upm, est_dis, factor, clase_hog,\n         sexo_jefe, edad_jefe, educa_jefe,ing_cor, factor) %>% \n  as_survey_design(\n    upm=upm,\n    strata = est_dis,\n    weights = factor,\n    nest = TRUE)\n\nPara una media ponderada\n\nags_srvy %>%\n  filter(ing_cor>0) %>% # sólo con ingresos\n  summarise(\n    media_ponderada = survey_mean(ing_cor, na.rm=T))\n\n# A tibble: 1 × 2\n  media_ponderada media_ponderada_se\n            <dbl>              <dbl>\n1          50315.               341.\n\n\nSi queremos los intervalos de confianza (spoiler):\n\nags_srvy %>%\n  summarize(\n    media_ponderada = survey_mean(ing_cor,\n                                  vartype = \"ci\") )\n\n# A tibble: 1 × 3\n  media_ponderada media_ponderada_low media_ponderada_upp\n            <dbl>               <dbl>               <dbl>\n1          50309.              49640.              50979.\n\n\n\nags_srvy %>%\n  summarize(\n    mediana_ponderada = survey_median(ing_cor,\n                                  vartype = \"ci\") )\n\n# A tibble: 1 × 3\n  mediana_ponderada mediana_ponderada_low mediana_ponderada_upp\n              <dbl>                 <dbl>                 <dbl>\n1            36624.                36365.                36882.\n\n\n\nags_srvy %>%\n  mutate(sexo_jefe=as_label(sexo_jefe)) %>% \n  group_by(sexo_jefe) %>% #variables cuali\n  summarize(proportion = survey_mean(), # proporción\n            total = survey_total() ) # totales\n\n# A tibble: 2 × 5\n  sexo_jefe proportion proportion_se    total total_se\n  <fct>          <dbl>         <dbl>    <dbl>    <dbl>\n1 Hombre         0.701       0.00217 25072652   80320.\n2 Mujer          0.299       0.00217 10677007   77840."
  },
  {
    "objectID": "P4.html#creación-de-quintiles-y-otros-grupos",
    "href": "P4.html#creación-de-quintiles-y-otros-grupos",
    "title": "4  Factores de expansión y algunas otras medidas",
    "section": "4.6 Creación de quintiles y otros grupos",
    "text": "4.6 Creación de quintiles y otros grupos\nUno de los elementos más comunes es crear grupos. Por ejemplo, la función cut, nos ayuda a crear variables con ciertos cortes. Por ejemplo, para recodificar por grupos etarios\n\nconcentrado2020 %<>% \n  mutate(grupo=cut(edad_jefe,\n                   breaks=c(0, 25, 50, 75, 100)))\n  \n       \nconcentrado2020 %>% \n  tabyl(grupo)\n\n    grupo     n      percent valid_percent\n   (0,25]  3327 0.0373795025    0.03738328\n  (25,50] 42558 0.4781475406    0.47819589\n  (50,75] 36085 0.4054221064    0.40546311\n (75,100]  7027 0.0789497337    0.07895772\n     <NA>     9 0.0001011168            NA\n\n\nAlgunas opciones se pueden modificar dentro de la función cut\n\nconcentrado2020 %<>% \n  mutate(grupo=cut(edad_jefe,\n                   breaks=c(0, 25, 50, 75, 100),\n                   include.lowest=T,\n                   right= F))\n  \n       \nconcentrado2020 %>% \n  tabyl(grupo)\n\n    grupo     n      percent valid_percent\n   [0,25)  2502 0.0281104645    0.02811331\n  [25,50) 41068 0.4614070962    0.46145376\n  [50,75) 37488 0.4211850886    0.42122768\n [75,100]  7939 0.0891962340    0.08920525\n     <NA>     9 0.0001011168            NA\n\n\nEsto nos puede ayudar para hacer variables de rangos de cualquier tipo.\nOtro tipo de variables muy importante son los quintiles y demás.\n\nconcentrado2020 %<>%\n  mutate(quintil0=ntile(ing_cor, n=5))\n\nconcentrado2020 %>% \n  tabyl(quintil0)\n\n quintil0     n   percent\n        1 17802 0.2000090\n        2 17801 0.1999978\n        3 17801 0.1999978\n        4 17801 0.1999978\n        5 17801 0.1999978\n\n\nPero quizás nos interesa más los quintiles que toman en cuenta el factor de expansión\n\nconcentrado2020 %<>%\n  mutate(quintil1=dineq::ntiles.wtd(ing_cor, n=5, weights=factor))\n\nconcentrado2020 %>% \n  tabyl(quintil1)\n\n quintil1     n   percent\n        1 19133 0.2149630\n        2 18253 0.2050761\n        3 17803 0.2000202\n        4 17609 0.1978406\n        5 16208 0.1821001\n\nconcentrado2020 %>% \n  count(quintil1, wt=factor) %>% \n  mutate(p=n/sum(n)*100) %>%\n  adorn_totals()\n\n quintil1        n         p\n        1  7150004  20.00020\n        2  7150151  20.00061\n        3  7149344  19.99836\n        4  7150470  20.00151\n        5  7149690  19.99932\n    Total 35749659 100.00000\n\n\nPodemos también ver la diferencia en los máximos y minimos de ambas variables\n\nconcentrado2020 %>% \n  group_by(quintil0) %>% \n  summarise(min=min(ing_cor),\n            max=max(ing_cor))\n\n# A tibble: 5 × 3\n  quintil0    min       max\n     <int>  <dbl>     <dbl>\n1        1     0     18934.\n2        2 18935.    29188.\n3        3 29188.    42257.\n4        4 42257.    65267.\n5        5 65268. 10702107.\n\n\nVeamos con la ponderación:\n\nconcentrado2020 %>% \n  group_by(quintil1) %>% \n  summarise(min=min(ing_cor),\n            max=max(ing_cor))\n\n# A tibble: 5 × 3\n  quintil1    min       max\n     <dbl>  <dbl>     <dbl>\n1        1     0     19666.\n2        2 19668.    30326.\n3        3 30326.    44017.\n4        4 44017.    68533.\n5        5 68534. 10702107.\n\n\nLa flexibilidad de dplyr nos permite además hacer quintiles fácilmente adentro de grupos. Por ejemplo si quisiéramos hacer quintiles estatales… Claro para eso debemos tener la variable.\nLa variable “ubica_geo”, nos da esa información pero junta\n\nconcentrado2020 %>% \n  select(ubica_geo) %>% \n  head\n\n# A tibble: 6 × 1\n  ubica_geo\n  <chr>    \n1 01001    \n2 01001    \n3 01001    \n4 01001    \n5 01001    \n6 01001    \n\n\nVamos a crear dos variables, uan que nos diga la entidad y la otra el municipio\n\nconcentrado2020 %<>%\n  mutate(ent=stringr::str_sub(ubica_geo, start = 1, end = 2)) %>% \n  mutate(mun=stringr::str_sub(ubica_geo, start = 3, end = 5))\n\nconcentrado2020 %>% tabyl(ent)\n\n ent    n    percent\n  01 2669 0.02998674\n  02 4142 0.04653619\n  03 2717 0.03052603\n  04 2174 0.02442532\n  05 3922 0.04406445\n  06 3282 0.03687392\n  07 2123 0.02385232\n  08 4572 0.05136732\n  09 2570 0.02887446\n  10 2746 0.03085185\n  11 3083 0.03463811\n  12 2490 0.02797564\n  13 2213 0.02486349\n  14 2779 0.03122261\n  15 3568 0.04008719\n  16 2047 0.02299845\n  17 2564 0.02880705\n  18 2103 0.02362762\n  19 3502 0.03934566\n  20 2596 0.02916657\n  21 2141 0.02405456\n  22 3769 0.04234546\n  23 2196 0.02467249\n  24 2521 0.02832393\n  25 3429 0.03852549\n  26 2420 0.02718918\n  27 2088 0.02345909\n  28 2311 0.02596454\n  29 2159 0.02425679\n  30 2717 0.03052603\n  31 2889 0.03245849\n  32 2504 0.02813293\n\nconcentrado2020 %>% tabyl(mun)\n\n mun    n      percent\n 001 4929 5.537829e-02\n 002 4164 4.678336e-02\n 003 3196 3.590769e-02\n 004 3636 4.085118e-02\n 005 3578 4.019954e-02\n 006 3230 3.628969e-02\n 007 3069 3.448082e-02\n 008 2271 2.551513e-02\n 009 1779 1.998742e-02\n 010 2050 2.303216e-02\n 011 1819 2.043682e-02\n 012 1738 1.952677e-02\n 013 1317 1.479676e-02\n 014 2189 2.459385e-02\n 015  855 9.606094e-03\n 016 1022 1.148237e-02\n 017 2582 2.900928e-02\n 018 1436 1.613374e-02\n 019 1277 1.434735e-02\n 020 1733 1.947060e-02\n 021  963 1.081950e-02\n 022  601 6.752354e-03\n 023  355 3.988495e-03\n 024  569 6.392827e-03\n 025  716 8.044402e-03\n 026  606 6.808530e-03\n 027  925 1.039256e-02\n 028 1017 1.142620e-02\n 029  882 9.909444e-03\n 030 1851 2.079635e-02\n 031  853 9.583624e-03\n 032  889 9.988091e-03\n 033 1339 1.504393e-02\n 034  407 4.572725e-03\n 035 1637 1.839202e-02\n 036  467 5.246837e-03\n 037 1695 1.904366e-02\n 038  789 8.864571e-03\n 039 1434 1.611127e-02\n 040  309 3.471676e-03\n 041  756 8.493809e-03\n 042  402 4.516549e-03\n 043  445 4.999663e-03\n 044  337 3.786262e-03\n 045  269 3.022268e-03\n 046  524 5.887244e-03\n 047  259 2.909916e-03\n 048  634 7.123115e-03\n 049  234 2.629036e-03\n 050 1125 1.263960e-02\n 051  427 4.797429e-03\n 052  340 3.819967e-03\n 053  593 6.662472e-03\n 054  266 2.988563e-03\n 055  557 6.258005e-03\n 056  437 4.909781e-03\n 057  320 3.595263e-03\n 058  289 3.246972e-03\n 059  240 2.696447e-03\n 060  143 1.606633e-03\n 061  206 2.314451e-03\n 062  252 2.831270e-03\n 063  232 2.606566e-03\n 064  167 1.876278e-03\n 065  203 2.280745e-03\n 066  146 1.640339e-03\n 067  381 4.280610e-03\n 068   91 1.022403e-03\n 069  246 2.763859e-03\n 070   83 9.325214e-04\n 071  157 1.763926e-03\n 072   60 6.741119e-04\n 073  251 2.820035e-03\n 074  147 1.651574e-03\n 075   38 4.269375e-04\n 076  306 3.437970e-03\n 077  159 1.786396e-03\n 078  127 1.426870e-03\n 079  277 3.112150e-03\n 080   21 2.359392e-04\n 081   70 7.864638e-04\n 082  157 1.763926e-03\n 083  157 1.763926e-03\n 084   89 9.999326e-04\n 085  181 2.033571e-03\n 086   92 1.033638e-03\n 087  257 2.887446e-03\n 088   77 8.651102e-04\n 089  237 2.662742e-03\n 090   41 4.606431e-04\n 091  119 1.336989e-03\n 092   78 8.763454e-04\n 093   81 9.100510e-04\n 094   63 7.078175e-04\n 095   23 2.584095e-04\n 096  176 1.977395e-03\n 097  356 3.999730e-03\n 098  263 2.954857e-03\n 099  140 1.572928e-03\n 100   94 1.056109e-03\n 101  537 6.033301e-03\n 102  359 4.033436e-03\n 104  222 2.494214e-03\n 105  222 2.494214e-03\n 106  308 3.460441e-03\n 107  125 1.404400e-03\n 108  364 4.089612e-03\n 109  114 1.280813e-03\n 110   64 7.190526e-04\n 111   95 1.067344e-03\n 112   92 1.033638e-03\n 113   83 9.325214e-04\n 114  639 7.179291e-03\n 115  123 1.381929e-03\n 116   16 1.797632e-04\n 117   23 2.584095e-04\n 118   65 7.302878e-04\n 119   34 3.819967e-04\n 120  381 4.280610e-03\n 121  120 1.348224e-03\n 122   49 5.505247e-04\n 123   76 8.538750e-04\n 124  110 1.235872e-03\n 125   29 3.258207e-04\n 127   21 2.359392e-04\n 128   59 6.628767e-04\n 129   24 2.696447e-04\n 130   34 3.819967e-04\n 131   70 7.864638e-04\n 132   80 8.988158e-04\n 133   32 3.595263e-04\n 134   20 2.247040e-04\n 135    8 8.988158e-05\n 136   24 2.696447e-04\n 138   22 2.471743e-04\n 140   36 4.044671e-04\n 141  109 1.224637e-03\n 142   20 2.247040e-04\n 143   25 2.808799e-04\n 144   64 7.190526e-04\n 145   42 4.718783e-04\n 149   18 2.022336e-04\n 153   24 2.696447e-04\n 154   42 4.718783e-04\n 156   96 1.078579e-03\n 157    7 7.864638e-05\n 160   66 7.415230e-04\n 163   44 4.943487e-04\n 164   35 3.932319e-04\n 167   23 2.584095e-04\n 169   24 2.696447e-04\n 170   63 7.078175e-04\n 171   33 3.707615e-04\n 173   58 6.516415e-04\n 174   43 4.831135e-04\n 175   72 8.089342e-04\n 176   24 2.696447e-04\n 177   22 2.471743e-04\n 179   23 2.584095e-04\n 181   17 1.909984e-04\n 183   38 4.269375e-04\n 184  159 1.786396e-03\n 186   20 2.247040e-04\n 187   20 2.247040e-04\n 188   19 2.134688e-04\n 189   73 8.201694e-04\n 191   16 1.797632e-04\n 193  161 1.808867e-03\n 194   22 2.471743e-04\n 197   21 2.359392e-04\n 199   21 2.359392e-04\n 200   24 2.696447e-04\n 201   83 9.325214e-04\n 202   43 4.831135e-04\n 204   21 2.359392e-04\n 205   23 2.584095e-04\n 206   42 4.718783e-04\n 208   43 4.831135e-04\n 212   14 1.572928e-04\n 227    5 5.617599e-05\n 234   20 2.247040e-04\n 261   23 2.584095e-04\n 266   20 2.247040e-04\n 271   16 1.797632e-04\n 277   39 4.381727e-04\n 278   47 5.280543e-04\n 293   16 1.797632e-04\n 295   22 2.471743e-04\n 302   22 2.471743e-04\n 309   20 2.247040e-04\n 315   19 2.134688e-04\n 318   42 4.718783e-04\n 324  143 1.606633e-03\n 334   66 7.415230e-04\n 348   24 2.696447e-04\n 349   21 2.359392e-04\n 350   11 1.235872e-04\n 364   23 2.584095e-04\n 365   15 1.685280e-04\n 372   18 2.022336e-04\n 385   70 7.864638e-04\n 390   20 2.247040e-04\n 394   20 2.247040e-04\n 397   16 1.797632e-04\n 399   11 1.235872e-04\n 401   21 2.359392e-04\n 403    5 5.617599e-05\n 406   33 3.707615e-04\n 413   42 4.718783e-04\n 418   48 5.392895e-04\n 439   41 4.606431e-04\n 441   24 2.696447e-04\n 447   22 2.471743e-04\n 460   21 2.359392e-04\n 466   20 2.247040e-04\n 467   25 2.808799e-04\n 469   37 4.157023e-04\n 482   22 2.471743e-04\n 483   22 2.471743e-04\n 491   21 2.359392e-04\n 504   22 2.471743e-04\n 515   21 2.359392e-04\n 539   19 2.134688e-04\n 546   21 2.359392e-04\n 551   43 4.831135e-04\n 553    9 1.011168e-04\n 559   43 4.831135e-04\n 570   46 5.168191e-04\n\n\nHoy sí podemos hacer nuestras variables dentro de cada entidad federativa\n\nconcentrado2020 %<>%\n  group_by(ent) %>% \n  mutate(quintil2=dineq::ntiles.wtd(ing_cor, n=5, weights=factor)) %>% \n  ungroup()\n\n¿Discreparán muchos los hogares en sus distribuciones a nivel nacional y por entidad?\n\n\n\n\nconcentrado2020 %>% \n  tabyl(quintil1,quintil2) %>% \n  adorn_totals(c(\"row\", \"col\"))\n\n quintil1     1     2     3     4     5 Total\n        1 15878  3088   167     0     0 19133\n        2  4413 10071  3503   266     0 18253\n        3     0  5583  8917  3221    82 17803\n        4     0     0  5089 10301  2219 17609\n        5     0     0     0  2969 13239 16208\n    Total 20291 18742 17676 16757 15540 89006\n\n\nY si queremos este tabulado más bonito\n\nconcentrado2020 %>% \n  tabyl(quintil1,quintil2) %>% \n  adorn_totals(c(\"row\", \"col\")) %>% \n  gt()\n\n\n\n\n\n  \n  \n    \n      quintil1\n      1\n      2\n      3\n      4\n      5\n      Total\n    \n  \n  \n    1\n15878\n3088\n167\n0\n0\n19133\n    2\n4413\n10071\n3503\n266\n0\n18253\n    3\n0\n5583\n8917\n3221\n82\n17803\n    4\n0\n0\n5089\n10301\n2219\n17609\n    5\n0\n0\n0\n2969\n13239\n16208\n    Total\n20291\n18742\n17676\n16757\n15540\n89006\n  \n  \n  \n\n\n\n\nconcentrado2020 %>% tabyl(quintil1,quintil2) %>% adorn_totals(c(“row”, “col”)) %>% gt() %>% tab_header( title = md(“Distribución de los hogares en México”), subtitle = md(“Según quintiles y quintiles”)) %>% tab_footnote( footnote = paste(get_label(concentrado2020$ing_cor)) )"
  },
  {
    "objectID": "P4.html#recodificación-de-variables",
    "href": "P4.html#recodificación-de-variables",
    "title": "4  Factores de expansión y algunas otras medidas",
    "section": "4.7 Recodificación de variables",
    "text": "4.7 Recodificación de variables\nPor ejemplo, si quisiéramos hacer una variable que separara a los hogares de acuerdo al grupo etario del jefe\n\n4.7.1 if_else()\n\nconcentrado2020 %<>% \n  mutate(joven=dplyr::if_else(edad_jefe<30, 1, 0))\n\nconcentrado2020 %>% tabyl(edad_jefe,joven)\n\n edad_jefe    0    1\n        14    0    1\n        15    0    2\n        16    0   19\n        17    0   28\n        18    0   93\n        19    0  153\n        20    0  243\n        21    0  312\n        22    0  423\n        23    0  588\n        24    0  640\n        25    0  825\n        26    0  914\n        27    0 1028\n        28    0 1163\n        29    0 1193\n        30 1461    0\n        31 1221    0\n        32 1495    0\n        33 1426    0\n        34 1493    0\n        35 1627    0\n        36 1654    0\n        37 1619    0\n        38 1899    0\n        39 1769    0\n        40 2146    0\n        41 1590    0\n        42 2232    0\n        43 2029    0\n        44 1827    0\n        45 2163    0\n        46 1975    0\n        47 2138    0\n        48 2153    0\n        49 2028    0\n        50 2315    0\n        51 1672    0\n        52 2044    0\n        53 1859    0\n        54 1942    0\n        55 1900    0\n        56 1900    0\n        57 1644    0\n        58 1704    0\n        59 1589    0\n        60 1930    0\n        61 1283    0\n        62 1563    0\n        63 1545    0\n        64 1344    0\n        65 1514    0\n        66 1187    0\n        67 1216    0\n        68 1331    0\n        69 1003    0\n        70 1255    0\n        71  837    0\n        72 1027    0\n        73  965    0\n        74  919    0\n        75  912    0\n        76  754    0\n        77  655    0\n        78  764    0\n        79  532    0\n        80  695    0\n        81  404    0\n        82  463    0\n        83  406    0\n        84  430    0\n        85  402    0\n        86  317    0\n        87  250    0\n        88  215    0\n        89  144    0\n        90  171    0\n        91   72    0\n        92   85    0\n        93   76    0\n        94   54    0\n        95   45    0\n        96   33    0\n        97   29    0\n        98   19    0\n        99    7    0\n       100    5    0\n       101    2    0\n       102    2    0\n       103    1    0\n       104    2    0\n       105    1    0\n       107    1    0\n\n\n\n\n4.7.2 case_when()\nEsto nos ayuda para recodificación múltiple\n\nconcentrado2020 %<>% \n  mutate(grupo_edad2=dplyr::case_when(edad_jefe<30 ~ 1,\n                                      edad_jefe>29 & edad_jefe<45 ~ 2,\n                                      edad_jefe>44 & edad_jefe<65 ~ 3,\n                                      edad_jefe>64 ~ 4))\n\n#TRUE~ 4\n\nconcentrado2020 %>% tabyl(edad_jefe,grupo_edad2)\n\n edad_jefe    1    2    3    4\n        14    1    0    0    0\n        15    2    0    0    0\n        16   19    0    0    0\n        17   28    0    0    0\n        18   93    0    0    0\n        19  153    0    0    0\n        20  243    0    0    0\n        21  312    0    0    0\n        22  423    0    0    0\n        23  588    0    0    0\n        24  640    0    0    0\n        25  825    0    0    0\n        26  914    0    0    0\n        27 1028    0    0    0\n        28 1163    0    0    0\n        29 1193    0    0    0\n        30    0 1461    0    0\n        31    0 1221    0    0\n        32    0 1495    0    0\n        33    0 1426    0    0\n        34    0 1493    0    0\n        35    0 1627    0    0\n        36    0 1654    0    0\n        37    0 1619    0    0\n        38    0 1899    0    0\n        39    0 1769    0    0\n        40    0 2146    0    0\n        41    0 1590    0    0\n        42    0 2232    0    0\n        43    0 2029    0    0\n        44    0 1827    0    0\n        45    0    0 2163    0\n        46    0    0 1975    0\n        47    0    0 2138    0\n        48    0    0 2153    0\n        49    0    0 2028    0\n        50    0    0 2315    0\n        51    0    0 1672    0\n        52    0    0 2044    0\n        53    0    0 1859    0\n        54    0    0 1942    0\n        55    0    0 1900    0\n        56    0    0 1900    0\n        57    0    0 1644    0\n        58    0    0 1704    0\n        59    0    0 1589    0\n        60    0    0 1930    0\n        61    0    0 1283    0\n        62    0    0 1563    0\n        63    0    0 1545    0\n        64    0    0 1344    0\n        65    0    0    0 1514\n        66    0    0    0 1187\n        67    0    0    0 1216\n        68    0    0    0 1331\n        69    0    0    0 1003\n        70    0    0    0 1255\n        71    0    0    0  837\n        72    0    0    0 1027\n        73    0    0    0  965\n        74    0    0    0  919\n        75    0    0    0  912\n        76    0    0    0  754\n        77    0    0    0  655\n        78    0    0    0  764\n        79    0    0    0  532\n        80    0    0    0  695\n        81    0    0    0  404\n        82    0    0    0  463\n        83    0    0    0  406\n        84    0    0    0  430\n        85    0    0    0  402\n        86    0    0    0  317\n        87    0    0    0  250\n        88    0    0    0  215\n        89    0    0    0  144\n        90    0    0    0  171\n        91    0    0    0   72\n        92    0    0    0   85\n        93    0    0    0   76\n        94    0    0    0   54\n        95    0    0    0   45\n        96    0    0    0   33\n        97    0    0    0   29\n        98    0    0    0   19\n        99    0    0    0    7\n       100    0    0    0    5\n       101    0    0    0    2\n       102    0    0    0    2\n       103    0    0    0    1\n       104    0    0    0    2\n       105    0    0    0    1\n       107    0    0    0    1\n\n\n\n\n4.7.3 rename()\nPara cambiar los nombres de las variables podemos cambiarlos nombres\n\nconcentrado2020 %<>%\n  dplyr::rename(nuevo_nombre=grupo_edad2)\n\nEsto en base sería similar a\n\nnames(concentrado2020)[134]<-\"grupo_edad2\"\nnames(concentrado2020)\n\n  [1] \"folioviv\"    \"foliohog\"    \"ubica_geo\"   \"tam_loc\"     \"est_socio\"  \n  [6] \"est_dis\"     \"upm\"         \"factor\"      \"clase_hog\"   \"sexo_jefe\"  \n [11] \"edad_jefe\"   \"educa_jefe\"  \"tot_integ\"   \"hombres\"     \"mujeres\"    \n [16] \"mayores\"     \"menores\"     \"p12_64\"      \"p65mas\"      \"ocupados\"   \n [21] \"percep_ing\"  \"perc_ocupa\"  \"ing_cor\"     \"ingtrab\"     \"trabajo\"    \n [26] \"sueldos\"     \"horas_extr\"  \"comisiones\"  \"aguinaldo\"   \"indemtrab\"  \n [31] \"otra_rem\"    \"remu_espec\"  \"negocio\"     \"noagrop\"     \"industria\"  \n [36] \"comercio\"    \"servicios\"   \"agrope\"      \"agricolas\"   \"pecuarios\"  \n [41] \"reproducc\"   \"pesca\"       \"otros_trab\"  \"rentas\"      \"utilidad\"   \n [46] \"arrenda\"     \"transfer\"    \"jubilacion\"  \"becas\"       \"donativos\"  \n [51] \"remesas\"     \"bene_gob\"    \"transf_hog\"  \"trans_inst\"  \"estim_alqu\" \n [56] \"otros_ing\"   \"gasto_mon\"   \"alimentos\"   \"ali_dentro\"  \"cereales\"   \n [61] \"carnes\"      \"pescado\"     \"leche\"       \"huevo\"       \"aceites\"    \n [66] \"tuberculo\"   \"verduras\"    \"frutas\"      \"azucar\"      \"cafe\"       \n [71] \"especias\"    \"otros_alim\"  \"bebidas\"     \"ali_fuera\"   \"tabaco\"     \n [76] \"vesti_calz\"  \"vestido\"     \"calzado\"     \"vivienda\"    \"alquiler\"   \n [81] \"pred_cons\"   \"agua\"        \"energia\"     \"limpieza\"    \"cuidados\"   \n [86] \"utensilios\"  \"enseres\"     \"salud\"       \"atenc_ambu\"  \"hospital\"   \n [91] \"medicinas\"   \"transporte\"  \"publico\"     \"foraneo\"     \"adqui_vehi\" \n [96] \"mantenim\"    \"refaccion\"   \"combus\"      \"comunica\"    \"educa_espa\" \n[101] \"educacion\"   \"esparci\"     \"paq_turist\"  \"personales\"  \"cuida_pers\" \n[106] \"acces_pers\"  \"otros_gas\"   \"transf_gas\"  \"percep_tot\"  \"retiro_inv\" \n[111] \"prestamos\"   \"otras_perc\"  \"ero_nm_viv\"  \"ero_nm_hog\"  \"erogac_tot\" \n[116] \"cuota_viv\"   \"mater_serv\"  \"material\"    \"servicio\"    \"deposito\"   \n[121] \"prest_terc\"  \"pago_tarje\"  \"deudas\"      \"balance\"     \"otras_erog\" \n[126] \"smg\"         \"grupo\"       \"quintil0\"    \"quintil1\"    \"ent\"        \n[131] \"mun\"         \"quintil2\"    \"joven\"       \"grupo_edad2\""
  },
  {
    "objectID": "P4.html#práctica",
    "href": "P4.html#práctica",
    "title": "4  Factores de expansión y algunas otras medidas",
    "section": "4.8 Práctica",
    "text": "4.8 Práctica\n\nGenere una variable de deciles de ingresos dentro de cada tamaño de localidad tam_loc\nEtiquete los valores de los deciles con números romanos\nEncuentre el coeficiente de variación para las estimaciones dentro de esa variable, sexo del jefe y tamaño de localidad"
  },
  {
    "objectID": "P5.html",
    "href": "P5.html",
    "title": "5  Fusionado de conjuntos de datos",
    "section": "",
    "text": "Vamos a trabajar con esta base que tiene elementos separados.\n\nif (!require(\"pacman\")) install.packages(\"pacman\") # instala pacman si se requiere\n\nLoading required package: pacman\n\npacman::p_load(skimr,tidyverse, magrittr, # sobretodo para dplyr\n              haven, readxl, #importación\n              janitor, \n              sjlabelled) \n\nHoy cargamos la versión seccionada de la base\n\nviviendas <- haven::read_dta(\"datos/viviendas2020.dta\")\nhogares <- haven::read_dta(\"datos/hogares2020.dta\")\npoblacion<- haven::read_dta(\"datos/poblacion2020.dta\")"
  },
  {
    "objectID": "P5.html#juntando-bases",
    "href": "P5.html#juntando-bases",
    "title": "5  Fusionado de conjuntos de datos",
    "section": "5.2 Juntando bases",
    "text": "5.2 Juntando bases\nMuchas bases de datos están organizadas en varias tablas. La ventaja de la programación por objetos de R, nos permite tener las bases cargadas en nuestro ambiente y llamarlas y juntarlas cuando sea necesario.\n\ndim(viviendas)\n\n[1] 87754    64\n\nnames(viviendas[,1:15])\n\n [1] \"folioviv\"   \"tipo_viv\"   \"mat_pared\"  \"mat_techos\" \"mat_pisos\" \n [6] \"antiguedad\" \"antigua_ne\" \"cocina\"     \"cocina_dor\" \"cuart_dorm\"\n[11] \"num_cuarto\" \"disp_agua\"  \"dotac_agua\" \"excusado\"   \"uso_compar\"\n\ndim(hogares)\n\n[1] 89006   137\n\nnames(hogares[,1:15])\n\n [1] \"folioviv\"   \"foliohog\"   \"huespedes\"  \"huesp_come\" \"num_trab_d\"\n [6] \"trab_come\"  \"acc_alim1\"  \"acc_alim2\"  \"acc_alim3\"  \"acc_alim4\" \n[11] \"acc_alim5\"  \"acc_alim6\"  \"acc_alim7\"  \"acc_alim8\"  \"acc_alim9\" \n\ndim(poblacion)\n\n[1] 315743    184\n\nnames(poblacion[,1:15])\n\n [1] \"folioviv\"   \"foliohog\"   \"numren\"     \"parentesco\" \"sexo\"      \n [6] \"edad\"       \"madre_hog\"  \"madre_id\"   \"padre_hog\"  \"padre_id\"  \n[11] \"disc_camin\" \"disc_ver\"   \"disc_brazo\" \"disc_apren\" \"disc_oir\"  \n\n\nPara juntar bases usamos el comando “merge”\nEn “by” ponemos el id, correspondiente a la variable o variables que forman el id, entrecomillado. Cuando estamos mezclando bases del mismo nivel de análisis el id es igual en ambas bases. Cuando estamos incoporando información de bases de distinto nivel debemos escoger\nEn general ponemos el id de la base de mayor nivel. En este caso, sabemos que a una vivienda corresponde más de un hogar. Tal como revisamos nuestra documentación, sabemos que el id de la tabla “viviendas” es “folioviv”\n\nmerge_data<- merge(viviendas, hogares, by=\"folioviv\")\n\nRevisemos la base creada\n\nnames(merge_data)\n\n  [1] \"folioviv\"    \"tipo_viv\"    \"mat_pared\"   \"mat_techos\"  \"mat_pisos\"  \n  [6] \"antiguedad\"  \"antigua_ne\"  \"cocina\"      \"cocina_dor\"  \"cuart_dorm\" \n [11] \"num_cuarto\"  \"disp_agua\"   \"dotac_agua\"  \"excusado\"    \"uso_compar\" \n [16] \"sanit_agua\"  \"biodigest\"   \"bano_comp\"   \"bano_excus\"  \"bano_regad\" \n [21] \"drenaje\"     \"disp_elect\"  \"focos_inca\"  \"focos_ahor\"  \"combustible\"\n [26] \"estufa_chi\"  \"eli_basura\"  \"tenencia\"    \"renta\"       \"estim_pago\" \n [31] \"pago_viv\"    \"pago_mesp\"   \"tipo_adqui\"  \"viv_usada\"   \"tipo_finan\" \n [36] \"num_dueno1\"  \"hog_dueno1\"  \"num_dueno2\"  \"hog_dueno2\"  \"escrituras\" \n [41] \"lavadero\"    \"fregadero\"   \"regadera\"    \"tinaco_azo\"  \"cisterna\"   \n [46] \"pileta\"      \"calent_sol\"  \"calent_gas\"  \"medidor_luz\" \"bomba_agua\" \n [51] \"tanque_gas\"  \"aire_acond\"  \"calefacc\"    \"tot_resid\"   \"tot_hom\"    \n [56] \"tot_muj\"     \"tot_hog\"     \"ubica_geo\"   \"tam_loc\"     \"est_socio\"  \n [61] \"est_dis\"     \"upm\"         \"factor\"      \"procaptar\"   \"foliohog\"   \n [66] \"huespedes\"   \"huesp_come\"  \"num_trab_d\"  \"trab_come\"   \"acc_alim1\"  \n [71] \"acc_alim2\"   \"acc_alim3\"   \"acc_alim4\"   \"acc_alim5\"   \"acc_alim6\"  \n [76] \"acc_alim7\"   \"acc_alim8\"   \"acc_alim9\"   \"acc_alim10\"  \"acc_alim11\" \n [81] \"acc_alim12\"  \"acc_alim13\"  \"acc_alim14\"  \"acc_alim15\"  \"acc_alim16\" \n [86] \"alim17_1\"    \"alim17_2\"    \"alim17_3\"    \"alim17_4\"    \"alim17_5\"   \n [91] \"alim17_6\"    \"alim17_7\"    \"alim17_8\"    \"alim17_9\"    \"alim17_10\"  \n [96] \"alim17_11\"   \"alim17_12\"   \"acc_alim18\"  \"telefono\"    \"celular\"    \n[101] \"tv_paga\"     \"conex_inte\"  \"num_auto\"    \"anio_auto\"   \"num_van\"    \n[106] \"anio_van\"    \"num_pickup\"  \"anio_pickup\" \"num_moto\"    \"anio_moto\"  \n[111] \"num_bici\"    \"anio_bici\"   \"num_trici\"   \"anio_trici\"  \"num_carret\" \n[116] \"anio_carret\" \"num_canoa\"   \"anio_canoa\"  \"num_otro\"    \"anio_otro\"  \n[121] \"num_ester\"   \"anio_ester\"  \"num_grab\"    \"anio_grab\"   \"num_radio\"  \n[126] \"anio_radio\"  \"num_tva\"     \"anio_tva\"    \"num_tvd\"     \"anio_tvd\"   \n[131] \"num_dvd\"     \"anio_dvd\"    \"num_video\"   \"anio_video\"  \"num_licua\"  \n[136] \"anio_licua\"  \"num_tosta\"   \"anio_tosta\"  \"num_micro\"   \"anio_micro\" \n[141] \"num_refri\"   \"anio_refri\"  \"num_estuf\"   \"anio_estuf\"  \"num_lavad\"  \n[146] \"anio_lavad\"  \"num_planc\"   \"anio_planc\"  \"num_maqui\"   \"anio_maqui\" \n[151] \"num_venti\"   \"anio_venti\"  \"num_aspir\"   \"anio_aspir\"  \"num_compu\"  \n[156] \"anio_compu\"  \"num_impre\"   \"anio_impre\"  \"num_juego\"   \"anio_juego\" \n[161] \"esc_radio\"   \"er_aparato\"  \"er_celular\"  \"er_compu\"    \"er_aplicac\" \n[166] \"er_tv\"       \"er_otro\"     \"recib_tvd\"   \"tsalud1_h\"   \"tsalud1_m\"  \n[171] \"habito_1\"    \"habito_2\"    \"habito_3\"    \"habito_4\"    \"habito_5\"   \n[176] \"habito_6\"    \"consumo\"     \"nr_viv\"      \"tarjeta\"     \"pagotarjet\" \n[181] \"regalotar\"   \"regalodado\"  \"autocons\"    \"regalos\"     \"remunera\"   \n[186] \"transferen\"  \"parto_g\"     \"embarazo_g\"  \"negcua\"      \"est_alim\"   \n[191] \"est_trans\"   \"bene_licon\"  \"cond_licon\"  \"lts_licon\"   \"otros_lts\"  \n[196] \"diconsa\"     \"frec_dicon\"  \"cond_dicon\"  \"pago_dicon\"  \"otro_pago\"  \n\ndim(merge_data)\n\n[1] 89006   200\n\n\nAlgunos elementos\n\nEl orden de las variables corresponde al orden que pusimos las bases en las opciones.\nTambién vemos que las variables que se repetían en ambas bases se repiten en la nueva base, seguida de un un punto y una “x”, para lo que proviene de la primera base y con una “y”, lo que proviene de la segunda. R dejará las variables intactas y son coincidentes, en nuestro caso, porque las variables son iguales. R hace esto para precaver que por error tengamos alguna variable con un nombre igual y no sea la misma"
  },
  {
    "objectID": "P5.html#merge-con-id-compuesto",
    "href": "P5.html#merge-con-id-compuesto",
    "title": "5  Fusionado de conjuntos de datos",
    "section": "5.3 Merge con id compuesto",
    "text": "5.3 Merge con id compuesto\nLos identificadores pueden estar compuestos de más de una variable:\n\nViviendas {viviendas} es “folioviv”\n\n\nviviendas %>% \n  janitor::get_dupes(folioviv)\n\nNo duplicate combinations found of: folioviv\n\n\n# A tibble: 0 × 65\n# … with 65 variables: folioviv <chr>, dupe_count <int>, tipo_viv <chr>,\n#   mat_pared <chr>, mat_techos <chr>, mat_pisos <chr>, antiguedad <dbl>,\n#   antigua_ne <chr>, cocina <chr>, cocina_dor <chr>, cuart_dorm <dbl>,\n#   num_cuarto <dbl>, disp_agua <chr>, dotac_agua <chr>, excusado <chr>,\n#   uso_compar <chr>, sanit_agua <chr>, biodigest <chr>, bano_comp <dbl>,\n#   bano_excus <dbl>, bano_regad <dbl>, drenaje <chr>, disp_elect <chr>,\n#   focos_inca <dbl>, focos_ahor <dbl>, combustible <chr>, estufa_chi <chr>, …\n\n\n\nHogares {hogares} es “folioviv”, “foliohog”\n\n\nhogares %>% \n  janitor::get_dupes(c(folioviv, foliohog))\n\nNo duplicate combinations found of: folioviv, foliohog\n\n\n# A tibble: 0 × 138\n# … with 138 variables: folioviv <chr>, foliohog <chr>, dupe_count <int>,\n#   huespedes <dbl>, huesp_come <dbl>, num_trab_d <dbl>, trab_come <dbl>,\n#   acc_alim1 <chr>, acc_alim2 <chr>, acc_alim3 <chr>, acc_alim4 <chr>,\n#   acc_alim5 <chr>, acc_alim6 <chr>, acc_alim7 <chr>, acc_alim8 <chr>,\n#   acc_alim9 <chr>, acc_alim10 <chr>, acc_alim11 <chr>, acc_alim12 <chr>,\n#   acc_alim13 <chr>, acc_alim14 <chr>, acc_alim15 <chr>, acc_alim16 <chr>,\n#   alim17_1 <dbl>, alim17_2 <dbl>, alim17_3 <dbl>, alim17_4 <dbl>, …\n\n\n\nPoblacion {individuos} es “folioviv”, “foliohog”, “numren”\n\n\npoblacion %>% \n  janitor::get_dupes(c(folioviv, foliohog, numren))\n\nNo duplicate combinations found of: folioviv, foliohog, numren\n\n\n# A tibble: 0 × 185\n# … with 185 variables: folioviv <chr>, foliohog <chr>, numren <chr>,\n#   dupe_count <int>, parentesco <chr>, sexo <chr>, edad <dbl>,\n#   madre_hog <chr>, madre_id <chr>, padre_hog <chr>, padre_id <chr>,\n#   disc_camin <chr>, disc_ver <chr>, disc_brazo <chr>, disc_apren <chr>,\n#   disc_oir <chr>, disc_vest <chr>, disc_habla <chr>, disc_acti <chr>,\n#   cau_camin <chr>, cau_ver <chr>, cau_brazo <chr>, cau_apren <chr>,\n#   cau_oir <chr>, cau_vest <chr>, cau_habla <chr>, cau_acti <chr>, …\n\n\nEsto significa que tenemos un id compuesto. No es una sola variable. Para esto modificamos ligeramente cómo ponemos el “by”, pero siempre eligiendo el id de la base de mayor nivel. (Tené cuidado con los paréntesis)\n\nmerge_data2<- merge(hogares, poblacion, by=c(\"folioviv\", \"foliohog\"))\ndim(merge_data2)\n\n[1] 315743    319\n\n\nRevisemos la base\n\nmerge_data2 %>% \n  tail()\n\n         folioviv foliohog huespedes huesp_come num_trab_d trab_come acc_alim1\n315738 3260770717        1         0         NA          0        NA         2\n315739 3260770717        1         0         NA          0        NA         2\n315740 3260770717        1         0         NA          0        NA         2\n315741 3260770718        1         0         NA          0        NA         2\n315742 3260770718        1         0         NA          0        NA         2\n315743 3260770718        1         0         NA          0        NA         2\n       acc_alim2 acc_alim3 acc_alim4 acc_alim5 acc_alim6 acc_alim7 acc_alim8\n315738         2         2         2         2         2                    \n315739         2         2         2         2         2                    \n315740         2         2         2         2         2                    \n315741         2         2         2         2         2                    \n315742         2         2         2         2         2                    \n315743         2         2         2         2         2                    \n       acc_alim9 acc_alim10 acc_alim11 acc_alim12 acc_alim13 acc_alim14\n315738                                                                 \n315739                                                                 \n315740                                                                 \n315741                                                                 \n315742                                                                 \n315743                                                                 \n       acc_alim15 acc_alim16 alim17_1 alim17_2 alim17_3 alim17_4 alim17_5\n315738                              7        2        2        3        2\n315739                              7        2        2        3        2\n315740                              7        2        2        3        2\n315741                              7        2        3        4        2\n315742                              7        2        3        4        2\n315743                              7        2        3        4        2\n       alim17_6 alim17_7 alim17_8 alim17_9 alim17_10 alim17_11 alim17_12\n315738        7        0        7        2         7         2         2\n315739        7        0        7        2         7         2         2\n315740        7        0        7        2         7         2         2\n315741        4        0        7        3         7         3         7\n315742        4        0        7        3         7         3         7\n315743        4        0        7        3         7         3         7\n       acc_alim18 telefono celular tv_paga conex_inte num_auto anio_auto\n315738          1        2       1       2          1        0          \n315739          1        2       1       2          1        0          \n315740          1        2       1       2          1        0          \n315741          1        2       1       2          1        1        19\n315742          1        2       1       2          1        1        19\n315743          1        2       1       2          1        1        19\n       num_van anio_van num_pickup anio_pickup num_moto anio_moto num_bici\n315738       0                   1          97        0                  0\n315739       0                   1          97        0                  0\n315740       0                   1          97        0                  0\n315741       0                   0                    0                  0\n315742       0                   0                    0                  0\n315743       0                   0                    0                  0\n       anio_bici num_trici anio_trici num_carret anio_carret num_canoa\n315738                   0                     0                     0\n315739                   0                     0                     0\n315740                   0                     0                     0\n315741                   0                     0                     0\n315742                   0                     0                     0\n315743                   0                     0                     0\n       anio_canoa num_otro anio_otro num_ester anio_ester num_grab anio_grab\n315738                   0                   1         00        0          \n315739                   0                   1         00        0          \n315740                   0                   1         00        0          \n315741                   0                   0                   0          \n315742                   0                   0                   0          \n315743                   0                   0                   0          \n       num_radio anio_radio num_tva anio_tva num_tvd anio_tvd num_dvd anio_dvd\n315738         0                  0                1       10       1       16\n315739         0                  0                1       10       1       16\n315740         0                  0                1       10       1       16\n315741         0                  1       05       1       16       0         \n315742         0                  1       05       1       16       0         \n315743         0                  1       05       1       16       0         \n       num_video anio_video num_licua anio_licua num_tosta anio_tosta num_micro\n315738         0                    1         17         0                    1\n315739         0                    1         17         0                    1\n315740         0                    1         17         0                    1\n315741         0                    1         17         0                    0\n315742         0                    1         17         0                    0\n315743         0                    1         17         0                    0\n       anio_micro num_refri anio_refri num_estuf anio_estuf num_lavad\n315738         00         1         19         1         05         1\n315739         00         1         19         1         05         1\n315740         00         1         19         1         05         1\n315741                    1         06         1         10         1\n315742                    1         06         1         10         1\n315743                    1         06         1         10         1\n       anio_lavad num_planc anio_planc num_maqui anio_maqui num_venti\n315738         00         1         15         0                    0\n315739         00         1         15         0                    0\n315740         00         1         15         0                    0\n315741         10         1         05         0                    0\n315742         10         1         05         0                    0\n315743         10         1         05         0                    0\n       anio_venti num_aspir anio_aspir num_compu anio_compu num_impre\n315738                    0                    0                    0\n315739                    0                    0                    0\n315740                    0                    0                    0\n315741                    0                    0                    0\n315742                    0                    0                    0\n315743                    0                    0                    0\n       anio_impre num_juego anio_juego esc_radio er_aparato er_celular er_compu\n315738                    0                    1          1                    \n315739                    0                    1          1                    \n315740                    0                    1          1                    \n315741                    0                    2                               \n315742                    0                    2                               \n315743                    0                    2                               \n       er_aplicac er_tv er_otro recib_tvd tsalud1_h tsalud1_m habito_1 habito_2\n315738                                            2         0                  \n315739                                            2         0                  \n315740                                            2         0                  \n315741                                            1         0                  \n315742                                            1         0                  \n315743                                            1         0                  \n       habito_3 habito_4 habito_5 habito_6 consumo nr_viv tarjeta pagotarjet\n315738        3                                  1              2          2\n315739        3                                  1              2          2\n315740        3                                  1              2          2\n315741        3                 5                2              2          2\n315742        3                 5                2              2          2\n315743        3                 5                2              2          2\n       regalotar regalodado autocons regalos remunera transferen parto_g\n315738         2          2        2       1        2          2       2\n315739         2          2        2       1        2          2       2\n315740         2          2        2       1        2          2       2\n315741         2          2        2       1        2          1       2\n315742         2          2        2       1        2          1       2\n315743         2          2        2       1        2          1       2\n       embarazo_g negcua est_alim est_trans bene_licon cond_licon lts_licon\n315738          2      2     4000         0          2                     \n315739          2      2     4000         0          2                     \n315740          2      2     4000         0          2                     \n315741          2      2     3000         0          1          2         2\n315742          2      2     3000         0          1          2         2\n315743          2      2     3000         0          1          2         2\n       otros_lts diconsa frec_dicon cond_dicon pago_dicon otro_pago numren\n315738        NA       1          2          2          3        NA     05\n315739        NA       1          2          2          3        NA     06\n315740        NA       1          2          2          3        NA     07\n315741        NA       1          2          2          3        NA     01\n315742        NA       1          2          2          3        NA     02\n315743        NA       1          2          2          3        NA     03\n       parentesco sexo edad madre_hog madre_id padre_hog padre_id disc_camin\n315738        301    2   14         1       02         1       01          4\n315739        301    1   12         1       02         1       01          4\n315740        301    2    5         1       02         1       01          4\n315741        101    2   64         2                  2                   4\n315742        301    1   33         1       01         2                   4\n315743        301    1   31         1       01         2                   4\n       disc_ver disc_brazo disc_apren disc_oir disc_vest disc_habla disc_acti\n315738        4          4          4        4         4          4         4\n315739        4          4          4        4         4          4         4\n315740        4          4          4        4         4          4         4\n315741        4          3          4        4         4          4         3\n315742        4          4          4        4         4          4         4\n315743        4          4          4        4         4          4         4\n       cau_camin cau_ver cau_brazo cau_apren cau_oir cau_vest cau_habla\n315738                                                                 \n315739                                                                 \n315740                                                                 \n315741                           2                                     \n315742                                                                 \n315743                                                                 \n       cau_acti hablaind lenguaind hablaesp comprenind etnia alfabetism\n315738                 2                             2     2          1\n315739                 2                             2     2          1\n315740                 2                             2     2          2\n315741        1        2                             2     2          1\n315742                 2                             2     2          1\n315743                 2                             2     2          1\n       asis_esc nivel grado tipoesc tiene_b otorg_b forma_b tiene_c otorg_c\n315738        1    07     3       1       2                                \n315739        1    07     1       1       2                                \n315740        1    01     3       1       2                                \n315741        2                                                            \n315742        2                                                            \n315743        2                                                            \n       forma_c nivelaprob gradoaprob antec_esc residencia edo_conyug pareja_hog\n315738                  3          2                   32          6           \n315739                  2          6                   32          6           \n315740                  1          2                   32                      \n315741                  3          3                   32          5           \n315742                  3          3                   32          3           \n315743                  7          5         3         32          6           \n       conyuge_id segsoc ss_aa ss_mm redsoc_1 redsoc_2 redsoc_3 redsoc_4\n315738                 2    NA    NA        3        3        3        3\n315739                 2    NA    NA        3        3        2        3\n315740                      NA    NA                                    \n315741                 2    NA    NA        2        3        2        2\n315742                 1     2     0        2        2        2        2\n315743                 1     3     0        2        2        2        2\n       redsoc_5 redsoc_6 hor_1 min_1 usotiempo1 hor_2 min_2 usotiempo2 hor_3\n315738        3        3    NA    NA          9    30     0               NA\n315739        2        3    NA    NA          9    15     0                1\n315740                      NA    NA               NA    NA               NA\n315741        3             NA    NA          9    NA    NA          9     3\n315742        2             81     0               NA    NA          9    NA\n315743        2             35     0               NA    NA          9    NA\n       min_3 usotiempo3 hor_4 min_4 usotiempo4 hor_5 min_5 usotiempo5 hor_6\n315738    NA          9     3     0               NA    NA          9     3\n315739     0                2     0               NA    NA          9     2\n315740    NA               NA    NA               NA    NA               NA\n315741     0               NA    NA          9    NA    NA          9    56\n315742    NA          9    NA    NA          9    NA    NA          9    NA\n315743    NA          9    NA    NA          9    NA    NA          9    12\n       min_6 usotiempo6 hor_7 min_7 usotiempo7 hor_8 min_8 usotiempo8\n315738     0               NA    NA          9     7    00           \n315739     0                1     0               14    00           \n315740    NA               NA    NA               NA                 \n315741     0               NA    NA          9    14    00           \n315742    NA          9    NA    NA          9    17    00           \n315743     0               NA    NA          9    21    00           \n       pop_insabi atemed inst_1 inst_2 inst_3 inst_4 inst_5 inst_6 inscr_1\n315738          1      2                                                  \n315739          1      2                                                  \n315740          1      2                                                  \n315741          2      1             2                                    \n315742          2      2                                                  \n315743          2      2                                                  \n       inscr_2 inscr_3 inscr_4 inscr_5 inscr_6 inscr_7 inscr_8 prob_anio\n315738                                                              2019\n315739                                                              2019\n315740                                                              2020\n315741                                               7              2020\n315742                                                              2018\n315743                                                              2016\n       prob_mes prob_sal aten_sal servmed_1 servmed_2 servmed_3 servmed_4\n315738       08        1        1        01                              \n315739       12        1        1        01                              \n315740       04        1        1        01                              \n315741       08        1        1        01                              \n315742       08        2                                                 \n315743       01        1        1        01                              \n       servmed_5 servmed_6 servmed_7 servmed_8 servmed_9 servmed_10 servmed_11\n315738                                                                        \n315739                                                                        \n315740                                                                        \n315741                                                                        \n315742                                                                        \n315743                                                                        \n       servmed_12 hh_lug mm_lug hh_esp mm_esp pagoaten_1 pagoaten_2 pagoaten_3\n315738                 0     15      0     30                                 \n315739                 0     15      0     30                                 \n315740                 0     15      0     30                                 \n315741                 0     20      0     10                                 \n315742                NA     NA     NA     NA                                 \n315743                 0     50      0     30          1                      \n       pagoaten_4 pagoaten_5 pagoaten_6 pagoaten_7 noatenc_1 noatenc_2\n315738                                           7                    \n315739                                           7                    \n315740                                           7                    \n315741                                           7                    \n315742                                                                \n315743                                                                \n       noatenc_3 noatenc_4 noatenc_5 noatenc_6 noatenc_7 noatenc_8 noatenc_9\n315738                                                                      \n315739                                                                      \n315740                                                                      \n315741                                                                      \n315742                                                                      \n315743                                                                      \n       noatenc_10 noatenc_11 noatenc_12 noatenc_13 noatenc_14 noatenc_15\n315738                                                                  \n315739                                                                  \n315740                                                                  \n315741                                                                  \n315742                                                                  \n315743                                                                  \n       noatenc_16 norecib_1 norecib_2 norecib_3 norecib_4 norecib_5 norecib_6\n315738                                                                       \n315739                                                                       \n315740                                                                       \n315741                                                                       \n315742         16                                                            \n315743                                                                       \n       norecib_7 norecib_8 norecib_9 norecib_10 norecib_11 norecib_12 razon_1\n315738                                                                       \n315739                                                                       \n315740                                                                       \n315741                                                                       \n315742                                                                       \n315743                                                                       \n       razon_2 razon_3 razon_4 razon_5 razon_6 razon_7 razon_8 razon_9 razon_10\n315738                                                                         \n315739                                                                         \n315740                                                                         \n315741                                                                         \n315742                                                                         \n315743                                                                         \n       razon_11 diabetes pres_alta peso segvol_1 segvol_2 segvol_3 segvol_4\n315738                 1         1    1                                    \n315739                 2         1    1                                    \n315740                                1                                    \n315741                 1         1    1                                    \n315742                 2         2    2                                    \n315743                 2         2    2                                    \n       segvol_5 segvol_6 segvol_7 hijos_viv hijos_mue hijos_sob trabajo_mp\n315738                 6                  0        NA        NA          2\n315739                 6                 NA        NA        NA          2\n315740                                   NA        NA        NA           \n315741                 6                 10         2         8          2\n315742                 6                 NA        NA        NA          1\n315743                 6                 NA        NA        NA          1\n       motivo_aus act_pnea1 act_pnea2 num_trabaj c_futuro ct_futuro\n315738                    4                                        \n315739                    4                                        \n315740                                                             \n315741                    3                                        \n315742                                         1                   \n315743                                         1"
  },
  {
    "objectID": "P5.html#bases-de-distinto-tamaño",
    "href": "P5.html#bases-de-distinto-tamaño",
    "title": "5  Fusionado de conjuntos de datos",
    "section": "5.4 Bases de distinto tamaño",
    "text": "5.4 Bases de distinto tamaño\nHasta ahorita hemos hecho merge que son de unidades de distinto nivel y son incluyentes. A veces tenemos bases de datos que son de distinto tamaño y del mismo nivel. A veces las dos aportan casos y a veces aportan variables, y a veces, las dos aportan las dos cosas.\nVamos a revisar qué pasaría si quisiéramos incorporar la información los ingresos\n\nrm(merge_data, merge_data2) # botamos otros ejemplos\ningresos<- haven::read_dta(\"datos/ingresos2020.dta\")\n\nEsta base tiene otro ID\n\nIngresos {clave de ingreso} es “folioviv”, “foliohog”, “numren”, clave\n\n\ningresos %>% \n  janitor::get_dupes(c(folioviv, foliohog, numren, clave))\n\nNo duplicate combinations found of: folioviv, foliohog, numren, clave\n\n\n# A tibble: 0 × 18\n# … with 18 variables: folioviv <chr>, foliohog <chr>, numren <chr>,\n#   clave <chr>, dupe_count <int>, mes_1 <chr>, mes_2 <chr>, mes_3 <chr>,\n#   mes_4 <chr>, mes_5 <chr>, mes_6 <chr>, ing_1 <dbl>, ing_2 <dbl>,\n#   ing_3 <dbl>, ing_4 <dbl>, ing_5 <dbl>, ing_6 <dbl>, ing_tri <dbl>\n\n\n¿Cuántas claves de ingreso hay?\n\ningresos %>% \n  tabyl(clave)\n\n clave     n      percent\n  P001 99992 2.532007e-01\n  P002  2619 6.631857e-03\n  P003  6260 1.585163e-02\n  P004  5990 1.516794e-02\n  P005  3098 7.844786e-03\n  P006  7113 1.801161e-02\n  P007  6754 1.710254e-02\n  P008 16600 4.203468e-02\n  P009 48715 1.233566e-01\n  P011   258 6.533101e-04\n  P012  3282 8.310712e-03\n  P013     3 7.596629e-06\n  P014  5056 1.280285e-02\n  P015    67 1.696581e-04\n  P016   643 1.628211e-03\n  P018    11 2.785431e-05\n  P019   239 6.051981e-04\n  P021  1567 3.967973e-03\n  P022 19138 4.846143e-02\n  P023   872 2.208087e-03\n  P024  2541 6.434345e-03\n  P025   188 4.760554e-04\n  P026   233 5.900049e-04\n  P027   292 7.394052e-04\n  P028   116 2.937363e-04\n  P029    12 3.038652e-05\n  P030     5 1.266105e-05\n  P031   133 3.367839e-04\n  P032 16768 4.246009e-02\n  P033   679 1.719370e-03\n  P034    44 1.114172e-04\n  P035   152 3.848959e-04\n  P036  1538 3.894539e-03\n  P037   522 1.321813e-03\n  P038  3334 8.442387e-03\n  P039   603 1.526922e-03\n  P040 24129 6.109969e-02\n  P041  6323 1.601116e-02\n  P043  2275 5.760777e-03\n  P045   894 2.263795e-03\n  P048  1671 4.231322e-03\n  P049  2097 5.310044e-03\n  P050    36 9.115955e-05\n  P051 14683 3.718044e-02\n  P052  1326 3.357710e-03\n  P053  6920 1.752289e-02\n  P054   492 1.245847e-03\n  P055     8 2.025768e-05\n  P056     6 1.519326e-05\n  P057    78 1.975124e-04\n  P058   426 1.078721e-03\n  P059    48 1.215461e-04\n  P060   182 4.608622e-04\n  P061   338 8.558869e-04\n  P062  1129 2.858865e-03\n  P063  4868 1.232680e-02\n  P064    48 1.215461e-04\n  P065    62 1.569970e-04\n  P066   230 5.824082e-04\n  P067  1917 4.854246e-03\n  P068  5383 1.363088e-02\n  P069  7154 1.811543e-02\n  P070  7854 1.988798e-02\n  P071  5130 1.299024e-02\n  P072  4537 1.148864e-02\n  P073   193 4.887165e-04\n  P074   229 5.798760e-04\n  P075   892 2.258731e-03\n  P076  1176 2.977879e-03\n  P077  1460 3.697026e-03\n  P078  1290 3.266551e-03\n  P079  1280 3.241228e-03\n  P080   131 3.317195e-04\n  P081    61 1.544648e-04\n  P101  6411 1.623400e-02\n  P102  6044 1.530468e-02\n  P103   719 1.820659e-03\n  P104 17014 4.308302e-02\n  P105  1413 3.578012e-03\n  P106   200 5.064419e-04\n  P107    67 1.696581e-04\n  P108   651 1.648469e-03\n\n\n\ningresos_sueldos<-ingresos %>% \n    filter(clave==\"P001\") \ndim(ingresos_sueldos)\n\n[1] 99992    17\n\n\nVamos a hacer el primer tipo de merge\n\nmerge_data3<-merge(poblacion, ingresos_sueldos, by=c(\"folioviv\", \"foliohog\", \"numren\"))\ndim(merge_data3)\n\n[1] 99992   198\n\n\n¡La base nueva no tiene a todas las observaciones, solo la que tiene en la base más pequeña! Tenemos sólo 99,9992 individuos."
  },
  {
    "objectID": "P5.html#cuatro-formas-de-hacer-un-fusionado",
    "href": "P5.html#cuatro-formas-de-hacer-un-fusionado",
    "title": "5  Fusionado de conjuntos de datos",
    "section": "5.5 Cuatro formas de hacer un fusionado",
    "text": "5.5 Cuatro formas de hacer un fusionado\nEn realidad hay cuatro formas de hacer un “merge”\n\n5.5.1 Casos en ambas bases\nPor default, el comando tiene activado la opción “all = FALSE”, que nos deja los datos de ambas bases comunes. (tipo una intersección)\n\nmerge_data3<-merge(poblacion, \n                   ingresos_sueldos,\n                   by=c(\"folioviv\", \"foliohog\", \"numren\"), \n                   all = F)\ndim(merge_data3)\n\n[1] 99992   198\n\n\n\n\n5.5.2 Todos los casos\nSi cambiamos la opción “all = TRUE”, que nos deja los datos comunes a ambas bases. (como una unión)\n\nmerge_data3<-merge(poblacion,\n                   ingresos_sueldos, \n                   by=c(\"folioviv\", \"foliohog\", \"numren\"), \n                   all = T)\ndim(merge_data3)\n\n[1] 315743    198\n\n\n\n\n5.5.3 Casos en la base 1\nSi queremos quedarnos con todos los datos que hay en la primera base, x, vamos a usar a opción all.x = TRUE.\n\nmerge_data3<-merge(poblacion, \n                   ingresos_sueldos,\n                   by=c(\"folioviv\", \"foliohog\", \"numren\"), \n                   all.x  = TRUE)\ndim(merge_data3)\n\n[1] 315743    198\n\n\n\n\n5.5.4 Casos de la base 2\nNotamos que hoy sí tenemos los datos de toda la población y hay missings en las variables aportadas por la base de trabajo\nSi queremos lo contrario, quedarnos con los datos aportados por la segunda base, y, vamos a usar la opción all.y=TRUE\n\nmerge_data3<-merge(poblacion, \n                   ingresos_sueldos,\n                   by=c(\"folioviv\", \"foliohog\", \"numren\"),\n                   all.y  = TRUE)\ndim(merge_data3)\n\n[1] 99992   198"
  },
  {
    "objectID": "P5.html#las-cuatro-formas-en-dplyr",
    "href": "P5.html#las-cuatro-formas-en-dplyr",
    "title": "5  Fusionado de conjuntos de datos",
    "section": "5.6 Las cuatro formas en dplyr",
    "text": "5.6 Las cuatro formas en dplyr\nEl caso 1:\n\nmerge_data3<-dplyr::inner_join(poblacion,\n                               ingresos_sueldos,\n                               by=c(\"folioviv\", \"foliohog\", \"numren\"))\ndim(merge_data3)\n\n[1] 99992   198\n\n\nEl caso 2:\n\nmerge_data3<-dplyr::full_join(poblacion, \n                              ingresos_sueldos, \n                              by=c(\"folioviv\", \"foliohog\", \"numren\"))\ndim(merge_data3)\n\n[1] 315743    198\n\n\nEl caso 3:\n\nmerge_data3<-dplyr::left_join(poblacion,\n                              ingresos_sueldos, \n                              by=c(\"folioviv\", \"foliohog\", \"numren\"))\ndim(merge_data3)\n\n[1] 315743    198\n\n\nEl caso 4:\n\nmerge_data3<-dplyr::right_join(poblacion, \n                               ingresos_sueldos,\n                               by=c(\"folioviv\", \"foliohog\", \"numren\"))\ndim(merge_data3)\n\n[1] 99992   198\n\n\nTambién se puede usar con pipes, cualquier opción de dplyr\n\nmerge_data3<-poblacion %>% # pongo el conjunto que será la \"izquierda\n  dplyr::right_join(ingresos_sueldos, \n                    by=c(\"folioviv\", \"foliohog\", \"numren\"))\ndim(merge_data3)\n\n[1] 99992   198"
  },
  {
    "objectID": "P5.html#práctica",
    "href": "P5.html#práctica",
    "title": "5  Fusionado de conjuntos de datos",
    "section": "5.7 Práctica",
    "text": "5.7 Práctica\n\nPegue a la última base la información de los hogares y las viviendas."
  },
  {
    "objectID": "P6.html",
    "href": "P6.html",
    "title": "6  Funciones, condicionales, bucles y mapeos",
    "section": "",
    "text": "if (!require(\"pacman\")) install.packages(\"pacman\")#instala pacman si se requiere\n\nLoading required package: pacman\n\npacman::p_load(tidyverse,\n               readxl,\n               writexl, \n               haven,\n               sjlabelled, \n               janitor,\n               magrittr,\n               broom # para limpiar resultados de modelos\n)"
  },
  {
    "objectID": "P6.html#datos",
    "href": "P6.html#datos",
    "title": "6  Funciones, condicionales, bucles y mapeos",
    "section": "6.2 Datos",
    "text": "6.2 Datos\n\nconcentrado2020 <- read_dta(\"datos/concentrado2020.dta\") %>% \n  mutate(across(c(sexo_jefe, clase_hog, educa_jefe), as.numeric)) %>% # ojo aquí\n  set_labels(sexo_jefe, labels=c(\"Hombre\", \"Mujer\")) %>% \n  set_labels(clase_hog, labels=c(\"unipersonal\",\"nuclear\", \"ampliado\",\n                                 \"compuesto\",\"corresidente\"))   %>% \n  set_labels(educa_jefe,\n             labels=c(\"Sin instrucción\", \n                      \"Preescolar\",\n                      \"Primaria incompleta\",\n                      \"Primaria completa\",\n                      \"Secundaria incompleta\",\n                      \"Secundaria completa\",\n                      \"Preparatoria incompleta\",\n                      \"Preparatoria completa\",\n                      \"Profesional incompleta\",\n                      \"Profesional completa\",\n                      \"Posgrado\")) %>% \n  mutate(ent=stringr::str_sub(ubica_geo, start = 1, end = 2)) %>% \n  mutate(mun=stringr::str_sub(ubica_geo, start = 3, end = 5))"
  },
  {
    "objectID": "P6.html#mi-primera-función",
    "href": "P6.html#mi-primera-función",
    "title": "6  Funciones, condicionales, bucles y mapeos",
    "section": "6.3 Mi primera función",
    "text": "6.3 Mi primera función\nUnos de los elementos más poderosos de R es hacer nuestra propias funciones.\nLa lógica de las funciones es la siguiente:\nnombre_de_funcion(argumento1, argumento2, ...) {\n  operaciones\n  salida\n}\nPara ello haremos una función sencilla. Para sumarle un valor un 1\n\nmi_funcion<-function(x) {\n    resultado<-x+1\n    return(resultado)\n}\n\nmi_funcion(5)\n\n[1] 6\n\n\nVamos a agregar un argumento, podemos agregar un segundo número en lugar de 1\n\nmi_funcion<-function(x, a) {\n    resultado<-x+a\n    return(resultado)\n}\n\nmi_funcion(x=5, a=6)\n\n[1] 11\n\n\nLos argumentos no necesariamente deben ser un sólo valor\n\nmi_funcion(x=1:5, a=6:10)\n\n[1]  7  9 11 13 15\n\n\nE incluso podríamos llamar variables de nuestra base de concentrado\n\nresultado_mi_funcion<-mi_funcion(x=concentrado2020$frutas, a=concentrado2020$azucar)"
  },
  {
    "objectID": "P6.html#una-función-para-hacer-edades",
    "href": "P6.html#una-función-para-hacer-edades",
    "title": "6  Funciones, condicionales, bucles y mapeos",
    "section": "6.4 Una función para hacer edades",
    "text": "6.4 Una función para hacer edades\nPrimero un poquito de pretty() {base}, es un comando que calcula una secuencia de aproximadamente n+1 valores ‘redondos’ igualmente espaciados que cubran el rango de los valores en x. Los valores se eligen para que sean 1, 2 o 5 veces una potencia de 10.\n\ncortar <- function(x) {\n  cut(x,\n      breaks = pretty(x), \n      right = TRUE, \n      include.lowest = TRUE)\n}\n\n\n#cortar(concentrado2020$edad_jefe)\n\nPodemos utilizarla junto con mutate\n\nconcentrado2020 %>%\n  mutate(eda_cut=cortar(edad_jefe)) %>% \n  tabyl(eda_cut)\n\n   eda_cut     n      percent\n    [0,20]   539 0.0060557715\n   (20,40] 24896 0.2797114801\n   (40,60] 38634 0.4340606251\n   (60,80] 21301 0.2393209447\n  (80,100]  3627 0.0407500618\n (100,120]     9 0.0001011168"
  },
  {
    "objectID": "P6.html#bucles",
    "href": "P6.html#bucles",
    "title": "6  Funciones, condicionales, bucles y mapeos",
    "section": "6.5 Bucles",
    "text": "6.5 Bucles\n\n6.5.1 for\nSupongamos que quisiéramos repetir una operación a lo largo de una secuencia, se puede realizar\nfor (i in secuencia) {\n  operación 1\n  operación 2\n  ...\n  operación final\n}\n\nPor ejemplo si quisiéramos que por cada entidad federativa se imprimiera en pantalla el promedio de la edad de los jefes entrevistados\n\nunique(concentrado2020$ent) # Nos dan los valores únicos de un vector\n\n [1] \"01\" \"02\" \"03\" \"04\" \"05\" \"06\" \"07\" \"08\" \"09\" \"10\" \"11\" \"12\" \"13\" \"14\" \"15\"\n[16] \"16\" \"17\" \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"30\"\n[31] \"31\" \"32\"\n\nestados<-unique(concentrado2020$ent)\n\nHoy haremos nuestro bucle con “for”\n\nfor(i in estados){\n  \n  x<-concentrado2020 %>% \n    filter(ent==i) %>% # aquí ocupamos nuestro indice\n    summarise(media=mean(ing_cor))\n  \n  assign(paste0(\"ingreso\",i), x)\n}\n\nVamos a botar estos objetos\n\nrm(list = ls(, pattern = \"ingreso\")) \nrm(x)\n\n\n\n6.5.2 while()\nTambién tenemos while()\nwhile (expresión a probar) {\n  Operaciones\n}\n\n# variable que se cambia\nnumero = 1\n\n# variable donde se calcula la meida\nsum = 0\n\n# Calcular la suma consecutiva hasta que llegue a 30\n\nwhile(numero <= 30) {\n\n  # calculate sum\n  sum = sum + numero\n    \n  # increment number by 1\n  numero = numero + 1\n  \n}"
  },
  {
    "objectID": "P6.html#condicionales",
    "href": "P6.html#condicionales",
    "title": "6  Funciones, condicionales, bucles y mapeos",
    "section": "6.6 Condicionales",
    "text": "6.6 Condicionales\nLas operaciones están supeditadas a los elementos que cumplan una condición\nif (condicion) {\n  operación 1\n  operación 2\n  ...\n  operación final\n}\nSupongamos tenemos dos valores\n\na<-45 # un vector entero\nb<-5000 #numeros aleatorios que siguen una normal\n\nVeamos cómo podemos hacer un condicional muy simple\n\nif(a>18){\n  print(b)\n}\n\n[1] 5000\n\n\nTambién se puede combinar con else\n\nif(a>18){\n  print(\"Mayor que 18\")\n} else {\n  print(\"No cumple\")\n}\n\n[1] \"Mayor que 18\"\n\n\nEstos elementos funcionan cuando se programan procesos. Son útiles para cuando computamos modelos y se busca cierto nivel de tolerancia o se hacen procesos sucesivos."
  },
  {
    "objectID": "P6.html#purrrmap",
    "href": "P6.html#purrrmap",
    "title": "6  Funciones, condicionales, bucles y mapeos",
    "section": "6.7 purrr::map()",
    "text": "6.7 purrr::map()\nDentro de tidyverse existe el paquete {purrr}, es un paquete que tiene muchas funcionalidades parecidas a los for.\nPor ejemplo y siguiendo los ejemplos del for()\n\n1:10 %>%\n  map(~.x+1)\n\n[[1]]\n[1] 2\n\n[[2]]\n[1] 3\n\n[[3]]\n[1] 4\n\n[[4]]\n[1] 5\n\n[[5]]\n[1] 6\n\n[[6]]\n[1] 7\n\n[[7]]\n[1] 8\n\n[[8]]\n[1] 9\n\n[[9]]\n[1] 10\n\n[[10]]\n[1] 11\n\n\nSi guardamos esto en un objeto, vemos que nos da como resultado una lista\n\nmap1<-1:10 %>%\n  map(~.x+1)\n\nclass(map1)\n\n[1] \"list\"\n\n\nCompliquemos esto un poquito más…\n\nnames(concentrado2020) %>% \n  map_chr(~str_detect(.x,\"ing\")) # ojo a veces tenemos que hacer explícito el tipo de mapeo\n\n  [1] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\"\n [10] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\"\n [19] \"FALSE\" \"FALSE\" \"TRUE\"  \"FALSE\" \"TRUE\"  \"TRUE\"  \"FALSE\" \"FALSE\" \"FALSE\"\n [28] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\"\n [37] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\"\n [46] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\"\n [55] \"FALSE\" \"TRUE\"  \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\"\n [64] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\"\n [73] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\"\n [82] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\"\n [91] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\"\n[100] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\"\n[109] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\"\n[118] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\"\n[127] \"FALSE\" \"FALSE\"\n\n\nPor ejemplo, quizás queremos identificar esta base de datos con 2020\n\nnames(concentrado2020) %>% \n  map_chr(~paste0(.x,\"2020\"))\n\n  [1] \"folioviv2020\"   \"foliohog2020\"   \"ubica_geo2020\"  \"tam_loc2020\"   \n  [5] \"est_socio2020\"  \"est_dis2020\"    \"upm2020\"        \"factor2020\"    \n  [9] \"clase_hog2020\"  \"sexo_jefe2020\"  \"edad_jefe2020\"  \"educa_jefe2020\"\n [13] \"tot_integ2020\"  \"hombres2020\"    \"mujeres2020\"    \"mayores2020\"   \n [17] \"menores2020\"    \"p12_642020\"     \"p65mas2020\"     \"ocupados2020\"  \n [21] \"percep_ing2020\" \"perc_ocupa2020\" \"ing_cor2020\"    \"ingtrab2020\"   \n [25] \"trabajo2020\"    \"sueldos2020\"    \"horas_extr2020\" \"comisiones2020\"\n [29] \"aguinaldo2020\"  \"indemtrab2020\"  \"otra_rem2020\"   \"remu_espec2020\"\n [33] \"negocio2020\"    \"noagrop2020\"    \"industria2020\"  \"comercio2020\"  \n [37] \"servicios2020\"  \"agrope2020\"     \"agricolas2020\"  \"pecuarios2020\" \n [41] \"reproducc2020\"  \"pesca2020\"      \"otros_trab2020\" \"rentas2020\"    \n [45] \"utilidad2020\"   \"arrenda2020\"    \"transfer2020\"   \"jubilacion2020\"\n [49] \"becas2020\"      \"donativos2020\"  \"remesas2020\"    \"bene_gob2020\"  \n [53] \"transf_hog2020\" \"trans_inst2020\" \"estim_alqu2020\" \"otros_ing2020\" \n [57] \"gasto_mon2020\"  \"alimentos2020\"  \"ali_dentro2020\" \"cereales2020\"  \n [61] \"carnes2020\"     \"pescado2020\"    \"leche2020\"      \"huevo2020\"     \n [65] \"aceites2020\"    \"tuberculo2020\"  \"verduras2020\"   \"frutas2020\"    \n [69] \"azucar2020\"     \"cafe2020\"       \"especias2020\"   \"otros_alim2020\"\n [73] \"bebidas2020\"    \"ali_fuera2020\"  \"tabaco2020\"     \"vesti_calz2020\"\n [77] \"vestido2020\"    \"calzado2020\"    \"vivienda2020\"   \"alquiler2020\"  \n [81] \"pred_cons2020\"  \"agua2020\"       \"energia2020\"    \"limpieza2020\"  \n [85] \"cuidados2020\"   \"utensilios2020\" \"enseres2020\"    \"salud2020\"     \n [89] \"atenc_ambu2020\" \"hospital2020\"   \"medicinas2020\"  \"transporte2020\"\n [93] \"publico2020\"    \"foraneo2020\"    \"adqui_vehi2020\" \"mantenim2020\"  \n [97] \"refaccion2020\"  \"combus2020\"     \"comunica2020\"   \"educa_espa2020\"\n[101] \"educacion2020\"  \"esparci2020\"    \"paq_turist2020\" \"personales2020\"\n[105] \"cuida_pers2020\" \"acces_pers2020\" \"otros_gas2020\"  \"transf_gas2020\"\n[109] \"percep_tot2020\" \"retiro_inv2020\" \"prestamos2020\"  \"otras_perc2020\"\n[113] \"ero_nm_viv2020\" \"ero_nm_hog2020\" \"erogac_tot2020\" \"cuota_viv2020\" \n[117] \"mater_serv2020\" \"material2020\"   \"servicio2020\"   \"deposito2020\"  \n[121] \"prest_terc2020\" \"pago_tarje2020\" \"deudas2020\"     \"balance2020\"   \n[125] \"otras_erog2020\" \"smg2020\"        \"ent2020\"        \"mun2020\"       \n\n\nCon estos nuevos nombres podríamos rápidamente volver a declarar nuestros nombres de la base y todos tienen sufijos.\nCombinación con el comando split()\n\nconcentrado2020 %>% \n  split(.$ent) %>% \n  map(~ mean(.$ing_cor)) \n\n$`01`\n[1] 55597.85\n\n$`02`\n[1] 62025.77\n\n$`03`\n[1] 61035.48\n\n$`04`\n[1] 46077.36\n\n$`05`\n[1] 52229.66\n\n$`06`\n[1] 51344.63\n\n$`07`\n[1] 29010.53\n\n$`08`\n[1] 57482.27\n\n$`09`\n[1] 60073.04\n\n$`10`\n[1] 46701.09\n\n$`11`\n[1] 43968.91\n\n$`12`\n[1] 31403.23\n\n$`13`\n[1] 39114.3\n\n$`14`\n[1] 54199.69\n\n$`15`\n[1] 42418.68\n\n$`16`\n[1] 45058.28\n\n$`17`\n[1] 40308.1\n\n$`18`\n[1] 52299.53\n\n$`19`\n[1] 57441.94\n\n$`20`\n[1] 33983.13\n\n$`21`\n[1] 37504.67\n\n$`22`\n[1] 53929.64\n\n$`23`\n[1] 42746.02\n\n$`24`\n[1] 43422.68\n\n$`25`\n[1] 57210.55\n\n$`26`\n[1] 56762.87\n\n$`27`\n[1] 40997.84\n\n$`28`\n[1] 46989.76\n\n$`29`\n[1] 37484.91\n\n$`30`\n[1] 32470.97\n\n$`31`\n[1] 39977.85\n\n$`32`\n[1] 43811.06\n\n\nNos da una lista de valores… si hacemos algo más complejo\n\nconcentrado2020 %>% \n  split(.$ent) %>% \n  map(~ mean(.$ing_cor)) %>% \n  map_dfr(~as.data.frame(.x))\n\n         .x\n1  55597.85\n2  62025.77\n3  61035.48\n4  46077.36\n5  52229.66\n6  51344.63\n7  29010.53\n8  57482.27\n9  60073.04\n10 46701.09\n11 43968.91\n12 31403.23\n13 39114.30\n14 54199.69\n15 42418.68\n16 45058.28\n17 40308.10\n18 52299.53\n19 57441.94\n20 33983.13\n21 37504.67\n22 53929.64\n23 42746.02\n24 43422.68\n25 57210.55\n26 56762.87\n27 40997.84\n28 46989.76\n29 37484.91\n30 32470.97\n31 39977.85\n32 43811.06\n\n\n\nconcentrado2020 %>% \n  split(.$ent) %>% \n  map(~ mean(.$ing_cor)) %>% \n  map_dfc(~as.data.frame(.x)) %>% \n  clean_names()\n\nNew names:\n• `.x` -> `.x...1`\n• `.x` -> `.x...2`\n• `.x` -> `.x...3`\n• `.x` -> `.x...4`\n• `.x` -> `.x...5`\n• `.x` -> `.x...6`\n• `.x` -> `.x...7`\n• `.x` -> `.x...8`\n• `.x` -> `.x...9`\n• `.x` -> `.x...10`\n• `.x` -> `.x...11`\n• `.x` -> `.x...12`\n• `.x` -> `.x...13`\n• `.x` -> `.x...14`\n• `.x` -> `.x...15`\n• `.x` -> `.x...16`\n• `.x` -> `.x...17`\n• `.x` -> `.x...18`\n• `.x` -> `.x...19`\n• `.x` -> `.x...20`\n• `.x` -> `.x...21`\n• `.x` -> `.x...22`\n• `.x` -> `.x...23`\n• `.x` -> `.x...24`\n• `.x` -> `.x...25`\n• `.x` -> `.x...26`\n• `.x` -> `.x...27`\n• `.x` -> `.x...28`\n• `.x` -> `.x...29`\n• `.x` -> `.x...30`\n• `.x` -> `.x...31`\n• `.x` -> `.x...32`\n\n\n       x_1      x_2      x_3      x_4      x_5      x_6      x_7      x_8\n1 55597.85 62025.77 61035.48 46077.36 52229.66 51344.63 29010.53 57482.27\n       x_9     x_10     x_11     x_12    x_13     x_14     x_15     x_16\n1 60073.04 46701.09 43968.91 31403.23 39114.3 54199.69 42418.68 45058.28\n     x_17     x_18     x_19     x_20     x_21     x_22     x_23     x_24\n1 40308.1 52299.53 57441.94 33983.13 37504.67 53929.64 42746.02 43422.68\n      x_25     x_26     x_27     x_28     x_29     x_30     x_31     x_32\n1 57210.55 56762.87 40997.84 46989.76 37484.91 32470.97 39977.85 43811.06"
  },
  {
    "objectID": "P6.html#combinando-funciones-con-purrmap",
    "href": "P6.html#combinando-funciones-con-purrmap",
    "title": "6  Funciones, condicionales, bucles y mapeos",
    "section": "6.8 Combinando funciones con purr::map",
    "text": "6.8 Combinando funciones con purr::map\n\nmi_funcion_summ<-function(x){\n  mu<-mean(x, na.rm=T)\n  me<-median(x,na.rm=T)\n  sd<-sd(x,na.rm=T)\n  total<-as.data.frame(cbind(mu,me,sd))\n  return(total)\n}\n\nmi_funcion_summ(concentrado2020$ing_cor)\n\n        mu       me       sd\n1 47838.49 35172.01 71276.03\n\n\n\nconcentrado2020 %>% \n  split(.$ent) %>% \n  map(~ mi_funcion_summ(.$ing_cor)) \n\n$`01`\n        mu       me       sd\n1 55597.85 43010.77 47117.57\n\n$`02`\n        mu       me       sd\n1 62025.77 45830.24 88387.62\n\n$`03`\n        mu       me       sd\n1 61035.48 46770.46 53076.37\n\n$`04`\n        mu       me       sd\n1 46077.36 32571.64 44224.74\n\n$`05`\n        mu       me       sd\n1 52229.66 40902.97 43428.09\n\n$`06`\n        mu       me       sd\n1 51344.63 40101.63 45501.34\n\n$`07`\n        mu      me       sd\n1 29010.53 20903.2 28774.17\n\n$`08`\n        mu      me       sd\n1 57482.27 38987.7 192053.2\n\n$`09`\n        mu       me       sd\n1 60073.04 44900.21 57306.15\n\n$`10`\n        mu       me       sd\n1 46701.09 34080.83 129188.6\n\n$`11`\n        mu       me       sd\n1 43968.91 34721.14 34355.33\n\n$`12`\n        mu       me       sd\n1 31403.23 22612.42 29169.38\n\n$`13`\n       mu       me       sd\n1 39114.3 30099.82 32567.11\n\n$`14`\n        mu       me       sd\n1 54199.69 41576.07 65377.82\n\n$`15`\n        mu       me       sd\n1 42418.68 32016.39 53796.92\n\n$`16`\n        mu       me      sd\n1 45058.28 34874.98 42919.1\n\n$`17`\n       mu       me       sd\n1 40308.1 30620.45 37761.98\n\n$`18`\n        mu       me       sd\n1 52299.53 41207.48 47639.84\n\n$`19`\n        mu       me       sd\n1 57441.94 41690.93 82230.47\n\n$`20`\n        mu       me       sd\n1 33983.13 23870.17 35229.34\n\n$`21`\n        mu      me       sd\n1 37504.67 27817.3 43038.53\n\n$`22`\n        mu       me       sd\n1 53929.64 41330.98 50918.38\n\n$`23`\n        mu       me       sd\n1 42746.02 31730.53 50819.97\n\n$`24`\n        mu       me       sd\n1 43422.68 31982.96 44543.01\n\n$`25`\n        mu       me       sd\n1 57210.55 44418.12 49915.59\n\n$`26`\n        mu       me       sd\n1 56762.87 41258.91 58032.84\n\n$`27`\n        mu       me       sd\n1 40997.84 28915.12 40031.89\n\n$`28`\n        mu       me       sd\n1 46989.76 34504.18 71032.01\n\n$`29`\n        mu       me       sd\n1 37484.91 28347.77 31704.41\n\n$`30`\n        mu       me       sd\n1 32470.97 24270.49 28210.82\n\n$`31`\n        mu       me       sd\n1 39977.85 28836.27 48809.08\n\n$`32`\n        mu       me       sd\n1 43811.06 30948.86 87282.28\n\n\nLo interesante es que podemos hacer elementos más complejos\n\nconcentrado2020 %>% \n  split(.$ent) %>% \n  map(~ lm(ing_cor ~ edad_jefe, data = .))\n\n$`01`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n    50487.3        102.3  \n\n\n$`02`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n    50224.7        242.9  \n\n\n$`03`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n    47835.8        272.7  \n\n\n$`04`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n   43159.93        58.73  \n\n\n$`05`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n   54785.09       -49.81  \n\n\n$`06`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n   56096.00       -91.26  \n\n\n$`07`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n    20136.7        176.6  \n\n\n$`08`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n   61557.56       -80.51  \n\n\n$`09`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n    44275.9        298.1  \n\n\n$`10`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n  46293.749        7.807  \n\n\n$`11`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n   45856.40       -36.74  \n\n\n$`12`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n   27045.90        83.79  \n\n\n$`13`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n   42109.48       -57.72  \n\n\n$`14`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n    55515.6        -25.5  \n\n\n$`15`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n      34668          153  \n\n\n$`16`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n   48426.93       -65.55  \n\n\n$`17`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n    34578.9        108.6  \n\n\n$`18`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n   48185.84        79.67  \n\n\n$`19`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n   54543.93        54.53  \n\n\n$`20`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n  33477.567        9.767  \n\n\n$`21`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n    29022.5        165.9  \n\n\n$`22`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n    47429.7        132.4  \n\n\n$`23`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n   42180.99        11.98  \n\n\n$`24`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n    49118.0       -107.9  \n\n\n$`25`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n   61909.90       -89.92  \n\n\n$`26`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n   60217.11       -66.49  \n\n\n$`27`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n    34146.3        137.4  \n\n\n$`28`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n    53207.3       -122.3  \n\n\n$`29`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n    30845.1        129.9  \n\n\n$`30`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n    28875.7         68.8  \n\n\n$`31`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n   37261.74        53.66  \n\n\n$`32`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nCoefficients:\n(Intercept)    edad_jefe  \n   39369.04        84.65  \n\n\nY el mapeo se puede ir agregando…\n\nconcentrado2020 %>% \n  split(.$ent) %>% \n  map(~ lm(ing_cor ~ edad_jefe, data = .)) %>% # da solo los coeficientes\n  map(summary) # da la parte de inferencia\n\n$`01`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-53847 -27740 -12184  12656 641581 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 50487.33    3042.99   16.59   <2e-16 ***\nedad_jefe     102.33      58.13    1.76   0.0785 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 47100 on 2667 degrees of freedom\nMultiple R-squared:  0.00116,   Adjusted R-squared:  0.000786 \nF-statistic: 3.099 on 1 and 2667 DF,  p-value: 0.07847\n\n\n$`02`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n -62786  -32386  -15760   10565 3881875 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 50224.74    4607.58  10.900  < 2e-16 ***\nedad_jefe     242.91      90.54   2.683  0.00733 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 88320 on 4140 degrees of freedom\nMultiple R-squared:  0.001736,  Adjusted R-squared:  0.001495 \nF-statistic: 7.198 on 1 and 4140 DF,  p-value: 0.007326\n\n\n$`03`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-68291 -30773 -13592  13727 639588 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 47835.79    3375.53   14.17  < 2e-16 ***\nedad_jefe     272.73      66.52    4.10 4.25e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 52920 on 2715 degrees of freedom\nMultiple R-squared:  0.006154,  Adjusted R-squared:  0.005788 \nF-statistic: 16.81 on 1 and 2715 DF,  p-value: 4.248e-05\n\n\n$`04`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-45027 -26185 -13443  10044 536634 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 43159.93    3248.67  13.285   <2e-16 ***\nedad_jefe      58.73      62.55   0.939    0.348    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 44230 on 2172 degrees of freedom\nMultiple R-squared:  0.0004057, Adjusted R-squared:  -5.448e-05 \nF-statistic: 0.8816 on 1 and 2172 DF,  p-value: 0.3479\n\n\n$`05`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-50161 -27149 -11519  11967 527608 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 54785.09    2348.34  23.329   <2e-16 ***\nedad_jefe     -49.81      43.73  -1.139    0.255    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 43430 on 3920 degrees of freedom\nMultiple R-squared:  0.0003308, Adjusted R-squared:  7.581e-05 \nF-statistic: 1.297 on 1 and 3920 DF,  p-value: 0.2548\n\n\n$`06`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-50026 -26169 -11367  11829 673149 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 56096.00    2654.84  21.130   <2e-16 ***\nedad_jefe     -91.26      48.66  -1.876   0.0608 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 45480 on 3280 degrees of freedom\nMultiple R-squared:  0.001071,  Adjusted R-squared:  0.0007668 \nF-statistic: 3.518 on 1 and 3280 DF,  p-value: 0.06081\n\n\n$`07`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-30674 -15430  -7650   4600 358554 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 20136.69    2038.61   9.878  < 2e-16 ***\nedad_jefe     176.55      38.63   4.571 5.14e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 28640 on 2121 degrees of freedom\nMultiple R-squared:  0.009753,  Adjusted R-squared:  0.009286 \nF-statistic: 20.89 on 1 and 2121 DF,  p-value: 5.145e-06\n\n\n$`08`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n  -56304   -33730   -18662     6192 10645058 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 61557.56    9397.99   6.550 6.39e-11 ***\nedad_jefe     -80.51     176.98  -0.455    0.649    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 192100 on 4570 degrees of freedom\nMultiple R-squared:  4.528e-05, Adjusted R-squared:  -0.0001735 \nF-statistic: 0.2069 on 1 and 4570 DF,  p-value: 0.6492\n\n\n$`09`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n -65068  -31879  -15111   13622 1140796 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 44275.87    4045.96  10.943  < 2e-16 ***\nedad_jefe     298.14      73.34   4.065 4.94e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 57130 on 2568 degrees of freedom\nMultiple R-squared:  0.006395,  Adjusted R-squared:  0.006008 \nF-statistic: 16.53 on 1 and 2568 DF,  p-value: 4.941e-05\n\n\n$`10`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n -45690  -25672  -12659    7365 6360100 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 46293.749   8213.038   5.637 1.91e-08 ***\nedad_jefe       7.807    150.147   0.052    0.959    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 129200 on 2744 degrees of freedom\nMultiple R-squared:  9.852e-07, Adjusted R-squared:  -0.0003634 \nF-statistic: 0.002703 on 1 and 2744 DF,  p-value: 0.9585\n\n\n$`11`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-41277 -21865  -9269  10680 305297 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 45856.40    2038.40  22.496   <2e-16 ***\nedad_jefe     -36.74      37.80  -0.972    0.331    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 34360 on 3081 degrees of freedom\nMultiple R-squared:  0.0003064, Adjusted R-squared:  -1.803e-05 \nF-statistic: 0.9444 on 1 and 3081 DF,  p-value: 0.3312\n\n\n$`12`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-32748 -17449  -8748   7167 233275 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 27045.90    1905.72  14.192   <2e-16 ***\nedad_jefe      83.79      34.88   2.402   0.0164 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 29140 on 2488 degrees of freedom\nMultiple R-squared:  0.002314,  Adjusted R-squared:  0.001913 \nF-statistic:  5.77 on 1 and 2488 DF,  p-value: 0.01638\n\n\n$`13`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-38141 -19608  -9123   8407 380207 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 42109.48    2307.56  18.249   <2e-16 ***\nedad_jefe     -57.72      42.42  -1.361    0.174    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 32560 on 2211 degrees of freedom\nMultiple R-squared:  0.0008366, Adjusted R-squared:  0.0003847 \nF-statistic: 1.851 on 1 and 2211 DF,  p-value: 0.1738\n\n\n$`14`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n -51479  -26801  -12529   10973 1695965 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  55515.6     4069.4   13.64   <2e-16 ***\nedad_jefe      -25.5       75.1   -0.34    0.734    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 65390 on 2777 degrees of freedom\nMultiple R-squared:  4.151e-05, Adjusted R-squared:  -0.0003186 \nF-statistic: 0.1153 on 1 and 2777 DF,  p-value: 0.7342\n\n\n$`15`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n -44553  -21374  -10179    7495 2137811 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 34668.17    3179.52  10.904   <2e-16 ***\nedad_jefe     152.98      60.19   2.542   0.0111 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 53760 on 3566 degrees of freedom\nMultiple R-squared:  0.001808,  Adjusted R-squared:  0.001528 \nF-statistic:  6.46 on 1 and 3566 DF,  p-value: 0.01108\n\n\n$`16`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-45469 -23107 -10431   9913 699833 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 48426.93    3050.94  15.873   <2e-16 ***\nedad_jefe     -65.55      56.42  -1.162    0.245    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 42920 on 2045 degrees of freedom\nMultiple R-squared:  0.0006595, Adjusted R-squared:  0.0001708 \nF-statistic:  1.35 on 1 and 2045 DF,  p-value: 0.2455\n\n\n$`17`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-40444 -21067  -9525   8578 422100 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 34578.88    2498.64  13.839   <2e-16 ***\nedad_jefe     108.61      45.21   2.402   0.0164 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 37730 on 2562 degrees of freedom\nMultiple R-squared:  0.002247,  Adjusted R-squared:  0.001858 \nF-statistic: 5.771 on 1 and 2562 DF,  p-value: 0.01637\n\n\n$`18`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-51372 -26788 -11200  10938 906914 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 48185.84    3461.34  13.921   <2e-16 ***\nedad_jefe      79.67      63.95   1.246    0.213    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 47630 on 2101 degrees of freedom\nMultiple R-squared:  0.0007383, Adjusted R-squared:  0.0002626 \nF-statistic: 1.552 on 1 and 2101 DF,  p-value: 0.2129\n\n\n$`19`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n -56829  -31122  -15660    8669 3248057 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 54543.93    4696.75  11.613   <2e-16 ***\nedad_jefe      54.53      84.42   0.646    0.518    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 82240 on 3500 degrees of freedom\nMultiple R-squared:  0.0001192, Adjusted R-squared:  -0.0001665 \nF-statistic: 0.4172 on 1 and 3500 DF,  p-value: 0.5184\n\n\n$`20`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-32265 -19866 -10036   7954 618037 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 33477.567   2275.058  14.715   <2e-16 ***\nedad_jefe       9.767     41.872   0.233    0.816    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 35240 on 2594 degrees of freedom\nMultiple R-squared:  2.097e-05, Adjusted R-squared:  -0.0003645 \nF-statistic: 0.05441 on 1 and 2594 DF,  p-value: 0.8156\n\n\n$`21`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n -37459  -19716   -9087    6812 1298468 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 29022.51    3120.66   9.300  < 2e-16 ***\nedad_jefe     165.88      58.26   2.847  0.00446 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 42970 on 2139 degrees of freedom\nMultiple R-squared:  0.003775,  Adjusted R-squared:  0.003309 \nF-statistic: 8.106 on 1 and 2139 DF,  p-value: 0.004455\n\n\n$`22`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n -55242  -27383  -11991   11751 1049250 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 47429.67    2745.77  17.274   <2e-16 ***\nedad_jefe     132.41      53.32   2.483   0.0131 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 50880 on 3767 degrees of freedom\nMultiple R-squared:  0.001634,  Adjusted R-squared:  0.001369 \nF-statistic: 6.166 on 1 and 3767 DF,  p-value: 0.01307\n\n\n$`23`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n -42718  -23815  -10997    9207 1415545 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 42180.99    3707.87  11.376   <2e-16 ***\nedad_jefe      11.98      75.20   0.159    0.873    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 50830 on 2194 degrees of freedom\nMultiple R-squared:  1.157e-05, Adjusted R-squared:  -0.0004442 \nF-statistic: 0.0254 on 1 and 2194 DF,  p-value: 0.8734\n\n\n$`24`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-41965 -25250 -11448  10590 898064 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 49118.03    2980.85  16.478   <2e-16 ***\nedad_jefe    -107.90      53.92  -2.001   0.0455 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 44520 on 2519 degrees of freedom\nMultiple R-squared:  0.001587,  Adjusted R-squared:  0.001191 \nF-statistic: 4.005 on 1 and 2519 DF,  p-value: 0.04548\n\n\n$`25`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-55695 -28466 -12659  12536 923717 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 61909.90    2993.68  20.680   <2e-16 ***\nedad_jefe     -89.92      54.92  -1.638    0.102    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 49900 on 3427 degrees of freedom\nMultiple R-squared:  0.0007818, Adjusted R-squared:  0.0004903 \nF-statistic: 2.681 on 1 and 3427 DF,  p-value: 0.1016\n\n\n$`26`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-55392 -31717 -15980  11905 931996 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 60217.11    4011.12  15.013   <2e-16 ***\nedad_jefe     -66.49      73.80  -0.901    0.368    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 58040 on 2418 degrees of freedom\nMultiple R-squared:  0.0003356, Adjusted R-squared:  -7.779e-05 \nF-statistic: 0.8118 on 1 and 2418 DF,  p-value: 0.3677\n\n\n$`27`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-41568 -22640 -11534   8209 420041 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  34146.3     2993.3  11.407   <2e-16 ***\nedad_jefe      137.4       57.4   2.393   0.0168 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 39990 on 2086 degrees of freedom\nMultiple R-squared:  0.002739,  Adjusted R-squared:  0.002261 \nF-statistic: 5.729 on 1 and 2086 DF,  p-value: 0.01678\n\n\n$`28`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n -49294  -25381  -12421    7864 2384864 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  53207.3     4963.6  10.719   <2e-16 ***\nedad_jefe     -122.3       93.2  -1.312     0.19    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 71020 on 2309 degrees of freedom\nMultiple R-squared:  0.000745,  Adjusted R-squared:  0.0003123 \nF-statistic: 1.722 on 1 and 2309 DF,  p-value: 0.1896\n\n\n$`29`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-36585 -18878  -8947   9074 290867 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 30845.14    2334.54  13.213  < 2e-16 ***\nedad_jefe     129.93      43.69   2.974  0.00298 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 31650 on 2157 degrees of freedom\nMultiple R-squared:  0.004082,  Adjusted R-squared:  0.003621 \nF-statistic: 8.842 on 1 and 2157 DF,  p-value: 0.002977\n\n\n$`30`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-31570 -17104  -7854   6713 250230 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  28875.7     1842.2  15.675   <2e-16 ***\nedad_jefe       68.8       33.7   2.042   0.0413 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 28190 on 2715 degrees of freedom\nMultiple R-squared:  0.001533,  Adjusted R-squared:  0.001165 \nF-statistic: 4.168 on 1 and 2715 DF,  p-value: 0.04128\n\n\n$`31`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n -39137  -22567  -11025    6332 1454038 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 37261.74    3028.89   12.30   <2e-16 ***\nedad_jefe      53.66      57.08    0.94    0.347    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 48810 on 2887 degrees of freedom\nMultiple R-squared:  0.000306,  Adjusted R-squared:  -4.032e-05 \nF-statistic: 0.8836 on 1 and 2887 DF,  p-value: 0.3473\n\n\n$`32`\n\nCall:\nlm(formula = ing_cor ~ edad_jefe, data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n -42383  -24463  -12794    7267 3189966 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 39369.04    5738.28   6.861  8.6e-12 ***\nedad_jefe      84.65     104.17   0.813    0.417    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 87290 on 2502 degrees of freedom\nMultiple R-squared:  0.0002638, Adjusted R-squared:  -0.0001358 \nF-statistic: 0.6602 on 1 and 2502 DF,  p-value: 0.4166\n\n\nSi queremos esto en una sola base de datos\n\nconcentrado2020 %>% \n  split(.$ent) %>% \n  map(~ lm(ing_cor ~ edad_jefe, data = .)) %>% # da solo los coeficientes\n  map(~ broom::tidy(.x))\n\n$`01`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   50487.    3043.      16.6  6.53e-59\n2 edad_jefe       102.      58.1      1.76 7.85e- 2\n\n$`02`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   50225.    4608.      10.9  2.69e-27\n2 edad_jefe       243.      90.5      2.68 7.33e- 3\n\n$`03`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   47836.    3376.      14.2  4.92e-44\n2 edad_jefe       273.      66.5      4.10 4.25e- 5\n\n$`04`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  43160.     3249.     13.3   8.78e-39\n2 edad_jefe       58.7      62.6     0.939 3.48e- 1\n\n$`05`\n# A tibble: 2 × 5\n  term        estimate std.error statistic   p.value\n  <chr>          <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)  54785.     2348.      23.3  7.83e-113\n2 edad_jefe      -49.8      43.7     -1.14 2.55e-  1\n\n$`06`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  56096.     2655.      21.1  5.13e-93\n2 edad_jefe      -91.3      48.7     -1.88 6.08e- 2\n\n$`07`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   20137.    2039.       9.88 1.58e-22\n2 edad_jefe       177.      38.6      4.57 5.14e- 6\n\n$`08`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  61558.      9398.     6.55  6.39e-11\n2 edad_jefe      -80.5      177.    -0.455 6.49e- 1\n\n$`09`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   44276.    4046.      10.9  2.84e-27\n2 edad_jefe       298.      73.3      4.07 4.94e- 5\n\n$`10`\n# A tibble: 2 × 5\n  term        estimate std.error statistic      p.value\n  <chr>          <dbl>     <dbl>     <dbl>        <dbl>\n1 (Intercept) 46294.       8213.    5.64   0.0000000191\n2 edad_jefe       7.81      150.    0.0520 0.959       \n\n$`11`\n# A tibble: 2 × 5\n  term        estimate std.error statistic   p.value\n  <chr>          <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)  45856.     2038.     22.5   6.80e-104\n2 edad_jefe      -36.7      37.8    -0.972 3.31e-  1\n\n$`12`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  27046.     1906.      14.2  5.12e-44\n2 edad_jefe       83.8      34.9      2.40 1.64e- 2\n\n$`13`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  42109.     2308.      18.2  2.05e-69\n2 edad_jefe      -57.7      42.4     -1.36 1.74e- 1\n\n$`14`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  55516.     4069.     13.6   4.59e-41\n2 edad_jefe      -25.5      75.1    -0.340 7.34e- 1\n\n$`15`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   34668.    3180.      10.9  2.97e-27\n2 edad_jefe       153.      60.2      2.54 1.11e- 2\n\n$`16`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  48427.     3051.      15.9  1.36e-53\n2 edad_jefe      -65.5      56.4     -1.16 2.45e- 1\n\n$`17`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   34579.    2499.      13.8  4.65e-42\n2 edad_jefe       109.      45.2      2.40 1.64e- 2\n\n$`18`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  48186.     3461.      13.9  3.32e-42\n2 edad_jefe       79.7      63.9      1.25 2.13e- 1\n\n$`19`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  54544.     4697.     11.6   1.28e-30\n2 edad_jefe       54.5      84.4     0.646 5.18e- 1\n\n$`20`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept) 33478.      2275.     14.7   3.89e-47\n2 edad_jefe       9.77      41.9     0.233 8.16e- 1\n\n$`21`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   29023.    3121.       9.30 3.35e-20\n2 edad_jefe       166.      58.3      2.85 4.46e- 3\n\n$`22`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   47430.    2746.      17.3  2.11e-64\n2 edad_jefe       132.      53.3      2.48 1.31e- 2\n\n$`23`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  42181.     3708.     11.4   3.55e-29\n2 edad_jefe       12.0      75.2     0.159 8.73e- 1\n\n$`24`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   49118.    2981.      16.5  5.16e-58\n2 edad_jefe      -108.      53.9     -2.00 4.55e- 2\n\n$`25`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  61910.     2994.      20.7  1.25e-89\n2 edad_jefe      -89.9      54.9     -1.64 1.02e- 1\n\n$`26`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  60217.     4011.     15.0   8.94e-49\n2 edad_jefe      -66.5      73.8    -0.901 3.68e- 1\n\n$`27`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   34146.    2993.      11.4  2.78e-29\n2 edad_jefe       137.      57.4      2.39 1.68e- 2\n\n$`28`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   53207.    4964.      10.7  3.37e-26\n2 edad_jefe      -122.      93.2     -1.31 1.90e- 1\n\n$`29`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   30845.    2335.      13.2  2.21e-38\n2 edad_jefe       130.      43.7      2.97 2.98e- 3\n\n$`30`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  28876.     1842.      15.7  4.44e-53\n2 edad_jefe       68.8      33.7      2.04 4.13e- 2\n\n$`31`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  37262.     3029.     12.3   6.15e-34\n2 edad_jefe       53.7      57.1     0.940 3.47e- 1\n\n$`32`\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  39369.      5738.     6.86  8.60e-12\n2 edad_jefe       84.6      104.     0.813 4.17e- 1\n\n\nComo broom::tidy los volvio tibble, lo podemos guardar en un excelito\n\nconcentrado2020 %>% \n  split(.$ent) %>% \n  map(~ lm(ing_cor ~ edad_jefe, data = .)) %>% # da solo los coeficientes\n  map(~ broom::tidy(.x)) %>% \n  write_xlsx(path=\"modelos.xlsx\")"
  },
  {
    "objectID": "P6.html#una-aplicación-para-exportar-los-resultados-de-una-base",
    "href": "P6.html#una-aplicación-para-exportar-los-resultados-de-una-base",
    "title": "6  Funciones, condicionales, bucles y mapeos",
    "section": "6.9 Una aplicación para exportar los resultados de una base",
    "text": "6.9 Una aplicación para exportar los resultados de una base\nVeamos…\n\nnames(concentrado2020)\n\n  [1] \"folioviv\"   \"foliohog\"   \"ubica_geo\"  \"tam_loc\"    \"est_socio\" \n  [6] \"est_dis\"    \"upm\"        \"factor\"     \"clase_hog\"  \"sexo_jefe\" \n [11] \"edad_jefe\"  \"educa_jefe\" \"tot_integ\"  \"hombres\"    \"mujeres\"   \n [16] \"mayores\"    \"menores\"    \"p12_64\"     \"p65mas\"     \"ocupados\"  \n [21] \"percep_ing\" \"perc_ocupa\" \"ing_cor\"    \"ingtrab\"    \"trabajo\"   \n [26] \"sueldos\"    \"horas_extr\" \"comisiones\" \"aguinaldo\"  \"indemtrab\" \n [31] \"otra_rem\"   \"remu_espec\" \"negocio\"    \"noagrop\"    \"industria\" \n [36] \"comercio\"   \"servicios\"  \"agrope\"     \"agricolas\"  \"pecuarios\" \n [41] \"reproducc\"  \"pesca\"      \"otros_trab\" \"rentas\"     \"utilidad\"  \n [46] \"arrenda\"    \"transfer\"   \"jubilacion\" \"becas\"      \"donativos\" \n [51] \"remesas\"    \"bene_gob\"   \"transf_hog\" \"trans_inst\" \"estim_alqu\"\n [56] \"otros_ing\"  \"gasto_mon\"  \"alimentos\"  \"ali_dentro\" \"cereales\"  \n [61] \"carnes\"     \"pescado\"    \"leche\"      \"huevo\"      \"aceites\"   \n [66] \"tuberculo\"  \"verduras\"   \"frutas\"     \"azucar\"     \"cafe\"      \n [71] \"especias\"   \"otros_alim\" \"bebidas\"    \"ali_fuera\"  \"tabaco\"    \n [76] \"vesti_calz\" \"vestido\"    \"calzado\"    \"vivienda\"   \"alquiler\"  \n [81] \"pred_cons\"  \"agua\"       \"energia\"    \"limpieza\"   \"cuidados\"  \n [86] \"utensilios\" \"enseres\"    \"salud\"      \"atenc_ambu\" \"hospital\"  \n [91] \"medicinas\"  \"transporte\" \"publico\"    \"foraneo\"    \"adqui_vehi\"\n [96] \"mantenim\"   \"refaccion\"  \"combus\"     \"comunica\"   \"educa_espa\"\n[101] \"educacion\"  \"esparci\"    \"paq_turist\" \"personales\" \"cuida_pers\"\n[106] \"acces_pers\" \"otros_gas\"  \"transf_gas\" \"percep_tot\" \"retiro_inv\"\n[111] \"prestamos\"  \"otras_perc\" \"ero_nm_viv\" \"ero_nm_hog\" \"erogac_tot\"\n[116] \"cuota_viv\"  \"mater_serv\" \"material\"   \"servicio\"   \"deposito\"  \n[121] \"prest_terc\" \"pago_tarje\" \"deudas\"     \"balance\"    \"otras_erog\"\n[126] \"smg\"        \"ent\"        \"mun\"       \n\n\n\nvars<-c(\"clase_hog\",  \"sexo_jefe\",  \"edad_jefe\" , \"educa_jefe\")\n\ntabs<- vars %>%\n  map(~ count(x=concentrado2020,\n              !!as.name(.x), # para que ponga la variable a tabular\n              wt=factor) %>% # para que use el pes\n        mutate(pct = round((n / sum(n) * 100), 2)) %>% # Para que ponga el %\n        adorn_totals()\n    )\n\ntabs # tabulados expandidos para mandar a un excel\n\n[[1]]\n clase_hog        n    pct\n         1  4233047  11.84\n         2 22093441  61.80\n         3  8999787  25.17\n         4   278353   0.78\n         5   145031   0.41\n     Total 35749659 100.00\n\n[[2]]\n sexo_jefe        n    pct\n         1 25072652  70.13\n         2 10677007  29.87\n     Total 35749659 100.00\n\n[[3]]\n edad_jefe        n    pct\n        14      206   0.00\n        15      801   0.00\n        16     7563   0.02\n        17     9373   0.03\n        18    32313   0.09\n        19    49173   0.14\n        20    87861   0.25\n        21   119741   0.33\n        22   160659   0.45\n        23   234934   0.66\n        24   245194   0.69\n        25   302740   0.85\n        26   358181   1.00\n        27   393797   1.10\n        28   453394   1.27\n        29   480245   1.34\n        30   595832   1.67\n        31   477389   1.34\n        32   594044   1.66\n        33   538747   1.51\n        34   585142   1.64\n        35   679411   1.90\n        36   640705   1.79\n        37   623343   1.74\n        38   771090   2.16\n        39   676548   1.89\n        40   850750   2.38\n        41   633938   1.77\n        42   910197   2.55\n        43   811414   2.27\n        44   743078   2.08\n        45   858338   2.40\n        46   793630   2.22\n        47   839846   2.35\n        48   895754   2.51\n        49   802282   2.24\n        50   955486   2.67\n        51   633909   1.77\n        52   873950   2.44\n        53   791650   2.21\n        54   763664   2.14\n        55   792306   2.22\n        56   789150   2.21\n        57   689864   1.93\n        58   699728   1.96\n        59   633661   1.77\n        60   815146   2.28\n        61   531612   1.49\n        62   638709   1.79\n        63   657153   1.84\n        64   566999   1.59\n        65   606264   1.70\n        66   459693   1.29\n        67   488873   1.37\n        68   554800   1.55\n        69   427911   1.20\n        70   519709   1.45\n        71   348224   0.97\n        72   438795   1.23\n        73   369007   1.03\n        74   362156   1.01\n        75   371473   1.04\n        76   279436   0.78\n        77   259322   0.73\n        78   296529   0.83\n        79   199962   0.56\n        80   287766   0.80\n        81   138220   0.39\n        82   176749   0.49\n        83   165610   0.46\n        84   177493   0.50\n        85   173183   0.48\n        86   117048   0.33\n        87    93482   0.26\n        88    75593   0.21\n        89    54120   0.15\n        90    63175   0.18\n        91    27289   0.08\n        92    33386   0.09\n        93    24338   0.07\n        94    22829   0.06\n        95    14664   0.04\n        96     9677   0.03\n        97     9276   0.03\n        98     4954   0.01\n        99     3278   0.01\n       100     1057   0.00\n       101     1296   0.00\n       102      863   0.00\n       103      607   0.00\n       104      621   0.00\n       105      146   0.00\n       107      145   0.00\n     Total 35749659 100.01\n\n[[4]]\n educa_jefe        n    pct\n          1  2287415   6.40\n          2     4946   0.01\n          3  5111202  14.30\n          4  5743095  16.06\n          5  1175737   3.29\n          6  9244410  25.86\n          7  1321912   3.70\n          8  4598279  12.86\n          9  1228591   3.44\n         10  4144117  11.59\n         11   889955   2.49\n      Total 35749659 100.00\n\n\n\nnames(tabs)<-vars # para que las hojas del excel se llamen como la variables\n\nwrite_xlsx(tabs, path=\"tabs.xlsx\")"
  },
  {
    "objectID": "P7.html",
    "href": "P7.html",
    "title": "7  Visualización de datos (I)",
    "section": "",
    "text": "Ahora cargaremos nuestros paquetes para hoy.\n\nif(!require(\"pacman\")) install.packages(\"pacman\")\n\nLoading required package: pacman\n\npacman::p_load(tidyverse, readxl, writexl, haven, sjlabelled, foreign, janitor, \n               esquisse, RColorBrewer, wesanderson)\n\nY cargaremos la base de datos de concentrado.\n\nconcentrado2020 <- haven::read_dta(\"datos/concentrado2020.dta\")"
  },
  {
    "objectID": "P7.html#visualización-de-datos-introducción",
    "href": "P7.html#visualización-de-datos-introducción",
    "title": "7  Visualización de datos (I)",
    "section": "7.2 Visualización de datos: introducción",
    "text": "7.2 Visualización de datos: introducción\nCheatsheet en español: https://diegokoz.github.io/intro_ds/fuentes/ggplot2-cheatsheet-2.1-Spanish.pdf\nEl ggplot2 se basa en la construcción de gráficos a partir de tres componentes:\n\nDatos,\nCoordenadas y\nObjetos geométricos\n\nEsto será nuestra “gramática de gráficas”\nPara visualizar los resultados, nosotres asignamos variables a las propiedades visuales o estéticas\nPor ejemplo: los tamaños, colores y posiciones.\nDe manera genérica, podríamos pensar que el código para el ggplot será de la siguiente manera:\nggplot(datos) + (geometria) + (esteticas)\nEsta semana, haremos gráficas para una sola variable, cuantitativa o cualitativa.\nLa próxima semana haremos gráficas para dos variables."
  },
  {
    "objectID": "P7.html#variables-cuantitativas",
    "href": "P7.html#variables-cuantitativas",
    "title": "7  Visualización de datos (I)",
    "section": "7.3 Variables cuantitativas",
    "text": "7.3 Variables cuantitativas\nPara las variables cuantitativas, las gráficas más utilizadas son los histogramas, gráficos de densidad.\nMenos utilizados: de área y polígonos de frecuencias (ver https://r-graph-gallery.com/)\nBueno, en series de tiempo también se utilizan los gráficos de líneas.\nVeamos primero los componentes de nuestra gramática. En los datos incluimos la variable que queremos y la base de datos que ocuparemos. En este caso es la edad del jefe del hogar.\n\nconcentrado2020 %>% \n  ggplot(aes(x=edad_jefe))\n\n\n\n\nAhora agregaremos la geometría.\n\nconcentrado2020 %>% \n  ggplot(aes(x=edad_jefe)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nVemos que el software nos avisa cuántas clases/intervalos está utilizando. Podemos cambiarlas.\n\nconcentrado2020 %>% \n  ggplot(aes(x=edad_jefe)) +\n  geom_histogram(bins=12)\n\n\n\n\nUna vez que tenemos nuestros datos y geometría, vamos a editar: primero le cambiamos el color y le quitamos el fondo gris\n\nconcentrado2020 %>% \n  ggplot(aes(x=edad_jefe)) +\n  geom_histogram(bins=12, color=\"#000000\", fill=\"darkblue\")+\n  theme_classic()\n\n\n\n\n\n7.3.1 Sobre los colores en R:\nPodemos agregar manualmente los colores, como lo hicimos anteriormente.\nSin embargo, existen paquetes que ya traen paletas cargadas y que se pueden utilizar dependiendo de los datos.\nUna paleta es la de RColorBrewer: https://www.geeksforgeeks.org/introduction-to-color-palettes-in-r-with-rcolorbrewer/\nEsta paleta de colores distingue si los datos son secuenciales, divergentes o cualitativos.\nPor ejemplo:\n\ndisplay.brewer.all(type=\"seq\") #secuenciales\n\n\n\ndisplay.brewer.all(type=\"div\") #divergentes\n\n\n\ndisplay.brewer.all(type=\"qual\") #datos cualitativos\n\n\n\nbrewer.pal.info #Podemos enlistar todos los colores\n\n         maxcolors category colorblind\nBrBG            11      div       TRUE\nPiYG            11      div       TRUE\nPRGn            11      div       TRUE\nPuOr            11      div       TRUE\nRdBu            11      div       TRUE\nRdGy            11      div      FALSE\nRdYlBu          11      div       TRUE\nRdYlGn          11      div      FALSE\nSpectral        11      div      FALSE\nAccent           8     qual      FALSE\nDark2            8     qual       TRUE\nPaired          12     qual       TRUE\nPastel1          9     qual      FALSE\nPastel2          8     qual      FALSE\nSet1             9     qual      FALSE\nSet2             8     qual       TRUE\nSet3            12     qual      FALSE\nBlues            9      seq       TRUE\nBuGn             9      seq       TRUE\nBuPu             9      seq       TRUE\nGnBu             9      seq       TRUE\nGreens           9      seq       TRUE\nGreys            9      seq       TRUE\nOranges          9      seq       TRUE\nOrRd             9      seq       TRUE\nPuBu             9      seq       TRUE\nPuBuGn           9      seq       TRUE\nPuRd             9      seq       TRUE\nPurples          9      seq       TRUE\nRdPu             9      seq       TRUE\nReds             9      seq       TRUE\nYlGn             9      seq       TRUE\nYlGnBu           9      seq       TRUE\nYlOrBr           9      seq       TRUE\nYlOrRd           9      seq       TRUE\n\ndisplay.brewer.all(colorblindFriendly=T) #La última columna nos dice si alguien con problemas para distinguir colores, los puede ver o no.\n\n\n\n\nOtra paleta es la de Wesanderson, se inspira en sus peliculas: https://rforpoliticalscience.com/2020/07/26/make-wes-anderson-themed-graphs-with-wesanderson-package-in-r/ Debes escoger el nombre de la paleta y cuántos colores vas a usar.\n\nwes_palette(\"Royal1\")\n\n\n\nwes_palette(\"GrandBudapest1\")\n\n\n\nwes_palette(\"Cavalcanti1\")\n\n\n\nwes_palette(\"Cavalcanti1\", 3)\n\n\n\n\nLa lógica de estos paquetes es crear nuestra paleta de colores pensando en cuántos vamos a tener que utilizar. Entonces, haremos la nuestra.\n\npal <- wes_palette(12, name = \"Royal1\", type = \"continuous\")\n\nEntonces, podemos volver a hacer nuestro gráfico escogiendo alguno de ellos.\n\nconcentrado2020 %>% \n  ggplot(aes(x=edad_jefe)) +\n  geom_histogram(bins=12, color=\"#000000\", fill=pal)+\n  theme_classic()\n\n\n\n\nPodemos agregarle el valor mínimo, máximo y la media, pero para eso tenemos que hacer un pequeño dataframe\n\nanotaciones <- data.frame(\n  x = c(round(min(concentrado2020$edad_jefe), 2), round(mean(concentrado2020$edad_jefe), 2), round(max(concentrado2020$edad_jefe), 2)),\n  y = c(2500, 17000, 2000),\n  label = c(\"Min:\", \"Media:\", \"Max:\")\n) \n\nconcentrado2020 %>% \n  ggplot(aes(x=edad_jefe)) +\n  geom_histogram(bins=12, color=\"#000000\", fill=\"darkblue\")+\n  theme_classic()+\n  geom_text(data = anotaciones, aes(x = x, y = y, label = paste(label, x)), size = 3.5, fontface = \"bold\")\n\n\n\n\nTambién le vamos a agregar el título, subtítulo y fuente\n\nconcentrado2020 %>% \n  ggplot(aes(x=edad_jefe)) +\n  geom_histogram(bins=12, color=\"#000000\", fill=\"darkblue\")+\n  theme_classic()+\n  geom_text(data = anotaciones, aes(x = x, y = y, label = paste(label, x)), size = 3.5, fontface = \"bold\")+\n  labs(\n    x = \"Edad del jefe del hogar\",\n    y = \"Frecuencia\",\n    title = \"Edades de los jefes y jefas de hogar en México, 2020\",\n    caption = \"Fuente: elaboración propia con base en ENIGH 2020\"\n  ) \n\n\n\n\nAl título y fuente también podemos agregarle los tipos de letra\n\nconcentrado2020 %>% \n  ggplot(aes(x=edad_jefe)) +\n  geom_histogram(bins=12, color=\"#000000\", fill=\"darkblue\")+\n  theme_classic()+\n  geom_text(data = anotaciones, aes(x = x, y = y, label = paste(label, x)), size = 3.5, fontface = \"bold\")+\n  labs(\n    x = \"Edad del jefe del hogar\",\n    y = \"Frecuencia\",\n    title = \"Edades de los jefes y jefas de hogar en México, 2020\",\n    caption = \"Fuente: elaboración propia con base en ENIGH 2020\"\n  )+ \ntheme(\n  plot.title = element_text(color = \"darkgreen\", size = 14, face = \"bold\"),\n  plot.caption = element_text(face = \"italic\")\n)\n\n\n\n\nPodemos cambiar el histograma por un gráfico de densidad, para ello cambiamos nuestra base pequeña de anotaciones.\n\nanotaciones <- data.frame(\n  x = c(round(min(concentrado2020$edad_jefe), 2), round(mean(concentrado2020$edad_jefe), 2), round(max(concentrado2020$edad_jefe), 2)),\n  y = c(0.0025, 0.025, 0.0025),\n  label = c(\"Min:\", \"Media:\", \"Max:\")\n) \n\nconcentrado2020 %>% \n  ggplot(aes(x=edad_jefe)) +\n  geom_density(adjust = 1L, color=\"#000000\", fill=\"darkblue\")+\n  theme_classic()+\n  geom_text(data = anotaciones, aes(x = x, y = y, label = paste(label, x)), size = 3.5, fontface = \"bold\")+\n  labs(\n    x = \"Edad del jefe del hogar\",\n    y = \"Densidad\",\n    title = \"Edades de los jefes y jefas de hogar en México, 2020\",\n    caption = \"Fuente: elaboración propia con base en ENIGH 2020\"\n  )+ \n  theme(\n    plot.title = element_text(color = \"darkgreen\", size = 14, face = \"bold\"),\n    plot.caption = element_text(face = \"italic\")\n  )\n\n\n\n\nPor último, también podemos hacer un boxplot\n\nanotaciones <- data.frame(\n  x = c(round(min(concentrado2020$edad_jefe), 2), round(mean(concentrado2020$edad_jefe), 2), round(max(concentrado2020$edad_jefe), 2)),\n  y = c(-0.37, 0.4, -0.37),\n  label = c(\"Min:\", \"Media:\", \"Max:\")\n) \n\nconcentrado2020 %>% \n  ggplot(aes(x=edad_jefe)) +\n  geom_boxplot(color=\"#000000\", fill=\"darkblue\") +\n  theme_classic()+\n  geom_text(data = anotaciones, aes(x = x, y = y, label = paste(label, x)), size = 3.5, fontface = \"bold\")+\n  labs(\n    x = \"Edad del jefe del hogar\",\n    y = \"\",\n    title = \"Edades de los jefes y jefas de hogar en México, 2020\",\n    caption = \"Fuente: elaboración propia con base en ENIGH 2020\"\n  )+ \n  theme(\n    plot.title = element_text(color = \"darkgreen\", size = 14, face = \"bold\"),\n    plot.caption = element_text(face = \"italic\")\n  )\n\n\n\n\nEl paquete {esquisse} es una forma de graficar de forma más sencilla"
  },
  {
    "objectID": "P7.html#práctica-en-clase",
    "href": "P7.html#práctica-en-clase",
    "title": "7  Visualización de datos (I)",
    "section": "7.4 Práctica en clase:",
    "text": "7.4 Práctica en clase:\nelaboren un histograma, diagrama de caja y brazos o un diagrama de densidad con una variable cuantitativa que seleccionen. Modifica los colores, etiquetas, eje y, eje x, título, fuente, etc."
  },
  {
    "objectID": "P8.html",
    "href": "P8.html",
    "title": "8  Visualización de datos (II)",
    "section": "",
    "text": "#Paquetería #\nif(!require(\"pacman\")) install.packages(\"pacman\")\n\nLoading required package: pacman\n\npacman::p_load(tidyverse, readxl, writexl, haven, sjlabelled, foreign, janitor, esquisse, RColorBrewer, wesanderson)\n\n\n#Importar #\nconcentrado2020 <- haven::read_dta(\"datos/concentrado2020.dta\")"
  },
  {
    "objectID": "P8.html#variables-cualitativas",
    "href": "P8.html#variables-cualitativas",
    "title": "8  Visualización de datos (II)",
    "section": "8.2 Variables cualitativas",
    "text": "8.2 Variables cualitativas\nLos gráficos más utilizados son los gráficos de barras. Primero vamos a hacer nuestro primer gráfico de barras o columnas.\nAl igual que en la sesión anterior, vamos agregando capas a nuestros gráficos.\nEn los datos incluiremos la variable que queremos graficar, en este caso la jefatura de hogar. Lo guardaremos como un objeto.\n\ng<- concentrado2020 %>% \n  ggplot(aes(x=sexo_jefe))\ng\n\n\n\n\nVemos que graficamos nuestra variable, sin embargo, todavía no hemos especificado la geometría así que la vamos a agregar.\n\ng+geom_bar()\n\n\n\n\nTambién podemos voltear nuestras barras.\n\n  g +\n  geom_bar()+\n  coord_flip()\n\n\n\n\nAunque, se ve mejor como estaba antes.\nPara hacer nuestra gráfica de barras y que se vean las etiquetas con facilidad, vamos a etiquetar nuestra variable.\n\netiqueta_sex<-c(\"Hombre\", \"Mujer\")\n\nconcentrado2020<-concentrado2020 %>% \n  mutate(sexo_jefe=as_numeric(sexo_jefe)) %>% # para quitar el \"string\"\n  sjlabelled::set_labels(sexo_jefe, labels=etiqueta_sex) \n\nAhora sí podemos ver las etiquetas en nuestro gráfico\n\ng<-concentrado2020 %>% \n  ggplot(aes(x=as_label(sexo_jefe))) +\n  geom_bar()\ng\n\n\n\n\nVamos a ponerle un color a hombre y otro a mujer y a quitar el fondo gris.\nOpción 1. Ponerle color manualmente\n\ng<- concentrado2020 %>% \n  ggplot(aes(x = as_label(sexo_jefe), fill = as.factor(sexo_jefe))) + #debo rellenar como as.factor, ya que si no hubiera tratado a la variable como continua.\n  geom_bar()\ng\n\n\n\n\nEsos son los colores por default. Ahora especificamos los colores.\n\ng + scale_fill_manual(\n    values = c(\"1\" = \"cadetblue4\",\n               \"2\" = \"chartreuse4\")\n  ) +\n  theme_minimal()\n\n\n\n\n\nOpción 2, rellenamos el gráfico con RColorBrewer\n\n\ng + \n  scale_fill_brewer(palette=\"Set2\") +\n  theme_minimal()\n\n\n\n\nOpción 3. Ponerle color con Wesanderson.\n\npal <- wes_palette(2, name = \"Royal1\", type = \"discrete\")\n\ng + \n  scale_fill_manual(values=pal) +\n  theme_minimal()\n\n\n\n\nPero, no queremos el conteo, sino los porcentajes\n\ng<- concentrado2020 %>% \n  ggplot(aes(as_label(sexo_jefe), fill = as.factor(sexo_jefe))) +\n  geom_bar(aes(y = (..count..)/sum(..count..))) + \n  scale_y_continuous(labels=scales::percent) +\n  theme_minimal()\ng\n\n\n\n\nAl gráfico de porcentajes, le agregaremos el color.\n\ng + \n  scale_fill_brewer(palette=\"Set2\") \n\n\n\n\nAhora, le agregamos los títulos\n\ng + \n  scale_fill_brewer(palette=\"Set2\") +\n   labs(\n    x = \"Sexo del jefe del hogar\",\n    y = \"Porcentaje\",\n    title = \"Sexo de los jefes y jefas de hogar en México, 2020\",\n    caption = \"Fuente: elaboración propia con base en ENIGH 2020\",\n    fill = \"Sexo del jefe del hogar\"\n  )\n\n\n\n\nY detalles en la fuente de los títulos.\n\nconcentrado2020 %>% \n  ggplot(aes(as_label(sexo_jefe), fill = as.factor(sexo_jefe))) +\n  geom_bar(aes(y = (..count..)/sum(..count..))) + \n  scale_y_continuous(labels=scales::percent) +\n  scale_fill_brewer(palette=\"Set2\") +\n   labs(x = \"Sexo del jefe del hogar\",\n    y = \"Porcentaje\",\n    title = \"Sexo de los jefes y jefas de hogar en México, 2020\",\n    caption = \"Fuente: elaboración propia con base en ENIGH 2020\",\n    fill = \"Sexo del jefe del hogar\") +\n  theme_minimal()+\n  theme(plot.title = element_text(color = \"black\", size = 14, face = \"bold\"),\n    plot.caption = element_text(face = \"italic\"))\n\n\n\n\nPor último, agregaremos las etiquetas de nuestros datos.\n\nconcentrado2020 %>% \n  count(sexo_jefe) %>% \n  mutate(pct = prop.table(n)) %>% \n  ggplot(aes(x = as_label(sexo_jefe), y = pct, fill = as.factor(sexo_jefe))) +\n  geom_col(position = 'dodge') + \n  scale_y_continuous(labels = scales::percent) +\n  scale_fill_brewer(palette=\"Set2\") +\n  theme_classic()+\n  geom_text(aes(label = round(pct*100)), \n            vjust = -0.2,\n            size = 3,\n            colour = \"black\") +\n  labs(\n    x = \"Sexo del jefe del hogar\",\n    y = \"Porcentaje\",\n    title = \"Sexo de los jefes y jefas de hogar en México, 2020\",\n    caption = \"Fuente: elaboración propia con base en ENIGH 2020\",\n    fill = \"Sexo del jefe del hogar\"\n  ) +\n  theme(\n    plot.title = element_text(color = \"black\", size = 14, face = \"bold\"),\n    plot.caption = element_text(face = \"italic\")\n  )"
  },
  {
    "objectID": "P8.html#práctica",
    "href": "P8.html#práctica",
    "title": "8  Visualización de datos (II)",
    "section": "8.3 Práctica",
    "text": "8.3 Práctica\nEscoge una variable cualitativa y elabora tu gráfico."
  },
  {
    "objectID": "P9.html",
    "href": "P9.html",
    "title": "9  Visualización de datos (III)",
    "section": "",
    "text": "Cargaremos nuestros paquetes para hoy.\n\nif(!require(\"pacman\")) install.packages(\"pacman\")\n\nLoading required package: pacman\n\npacman::p_load(tidyverse, readxl, writexl, haven, sjlabelled, foreign, janitor, esquisse, RColorBrewer, wesanderson)\n\nY cargaremos las bases de datos.\n\nconcentrado2020 <- haven::read_dta(\"datos/concentrado2020.dta\")\n\nEsta semana veremos gráficos con dos o tres variables.\nNo queremos nuestros datos con notación científica.\n\noptions(scipen=999)\n\n#Fuente: https://www.iteramos.com/pregunta/41897/como-desactivar-la-notacion-cientifica-en-r\n\nEmpezaremos relacionando dos variables cuantitativas."
  },
  {
    "objectID": "P9.html#diagramas-de-dispersión",
    "href": "P9.html#diagramas-de-dispersión",
    "title": "9  Visualización de datos (III)",
    "section": "9.2 Diagramas de dispersión",
    "text": "9.2 Diagramas de dispersión\nLos diagramas de dispersión utilizan el eje horizontal x y el eje vertical y, para mostrar los valores de dos variables cuantitativas. Los datos se muestran como un conjunto de puntos donde vamos a tener las posiciones (x,y)\nPara obtener nuestro gráfico, utilizaremos la geometría: geom_point()\n\nconcentrado2020 %>% \n  ggplot(aes(edad_jefe, bene_gob)) + \n  geom_point()+\n  theme_minimal()\n\n\n\n\nDentro de la opción geom_point, podemos modificar el tamaño, color y forma de nuestros puntos.\n\nconcentrado2020 %>% \n  ggplot(aes(edad_jefe, bene_gob)) + \n  geom_point(shape = 20, colour = \"black\", size = 2)+\n  theme_minimal() #también se puede \"fill\" y \"stroke\"\n\n\n\n\nVemos que nuestra distribución de beneficios gubernamentales tiene un sesgo positivo. Es decir, muy pocas unidades reciben un monto de beneficios mucho más alto. ¿Será que la edad sí tiene relación con el monto que recibes como beneficios gubernamentales?\nVeamos los datos atípicos de beneficios gubernamentales de manera gráfica.\n\nconcentrado2020 %>% \n  ggplot(aes(x=bene_gob)) +\n  geom_boxplot()+\n  theme_minimal()\n\n\n\n\n\nsummary(concentrado2020$bene_gob)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      0       0       0    1271    1574  122283 \n\n\n\nconcentrado2020 %>% \n  select(bene_gob) %>% \n  arrange(bene_gob) %>% \n  tail()\n\n# A tibble: 6 × 1\n  bene_gob\n     <dbl>\n1   39620.\n2   44022.\n3   46478.\n4   62164.\n5   66560.\n6  122283.\n\n\nConvertiremos nuestra variable bene_gob. Calcularemos el logaritmo natural.\n\nconcentrado2020$ln_bene_gob<-log(concentrado2020$bene_gob)\n\n\nconcentrado2020 %>% \n  filter(ln_bene_gob>0) %>% #agregamos un filtro para incluir los datos donde el logaritmo es mayor a 0\n  ggplot(aes(edad_jefe, ln_bene_gob)) + \n  geom_point(shape = 20, colour = \"black\", size = 2)+\n  theme_minimal()\n\n\n\n\nPodemos agregar la tendencia de los datos con geom_smooth.\n\nconcentrado2020 %>% \n    filter(ln_bene_gob>0) %>% \n  ggplot(aes(edad_jefe, ln_bene_gob)) + \n  geom_point(shape = 20, colour = \"black\", size = 2)+\n  geom_smooth()+\n  theme_minimal()\n\n`geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\nAdemás le podemos especificar el método. Geom_smooth también tiene diversas opciones.\n\nconcentrado2020 %>% \n  filter(ln_bene_gob>0) %>% \n  ggplot(aes(edad_jefe, ln_bene_gob)) + \n  geom_point(shape = 20, colour = \"black\", size = 2)+\ngeom_smooth(method = \"lm\", se = FALSE) + #linear method y no incluir error est.\n  theme_minimal()\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\nAhora a lo mejor se ve un poquito más clara la relación.\nPodemos también variar la geometría: en lugar de geom_point, podemos usar geom_jitter().\n\nconcentrado2020 %>% \n  filter(ln_bene_gob>0) %>% \n  ggplot(aes(edad_jefe, ln_bene_gob)) + \n  geom_jitter(width = 0.25, shape = 20, colour = \"black\", size = 2) +\n  theme_minimal()\n\n\n\n\nPodemos colorear las observaciones con base en una variable\n\nconcentrado2020 %>% \n  filter(ln_bene_gob>0) %>% \n  ggplot(aes(x= edad_jefe, y= ln_bene_gob, color=edad_jefe)) + \n  geom_point(shape = 20, size = 2)+\ngeom_smooth(method = \"lm\", se = FALSE)\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n  theme_minimal\n\nfunction (base_size = 11, base_family = \"\", base_line_size = base_size/22, \n    base_rect_size = base_size/22) \n{\n    theme_bw(base_size = base_size, base_family = base_family, \n        base_line_size = base_line_size, base_rect_size = base_rect_size) %+replace% \n        theme(axis.ticks = element_blank(), legend.background = element_blank(), \n            legend.key = element_blank(), panel.background = element_blank(), \n            panel.border = element_blank(), strip.background = element_blank(), \n            plot.background = element_blank(), complete = TRUE)\n}\n<bytecode: 0x7fe1c4360000>\n<environment: namespace:ggplot2>\n\n\nO bien, podemos cambiar la transparencia.\n\nconcentrado2020 %>% \n  filter(ln_bene_gob>0) %>% \n  ggplot(aes(x= edad_jefe, y= ln_bene_gob, alpha=edad_jefe)) + \n  geom_point(colour=2, shape = 20, size = 2)+\n  geom_smooth(method = \"lm\", se = FALSE)+\n  theme_minimal()\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\nAhora sí, podemos enchular nuestro gráfico\n\nconcentrado2020 %>% \n  filter(ln_bene_gob>0) %>% \n  ggplot(aes(x= edad_jefe, y= ln_bene_gob, alpha=edad_jefe)) + \n  geom_point(colour=2, shape = 20, size = 2)+\n  geom_smooth(method = \"lm\", se = FALSE, color=\"grey\", size=0.1)+\n  labs(\n    x = \"Edad del jefe del hogar\",\n    y = \"Ingreso por beneficios del gobierno (en logaritmo)\",\n    title = \"Relación entre la edad del jefe del hogar e ingreso proveniente de beneficios del gobierno\",\n    subtitle = \"2020\",\n    caption = \"Fuente: elaboración propia con datos de ENIGH\",\n    alpha = \"Edad\"\n  ) +\n theme_minimal()+\n  theme(\n    plot.title = element_text(color = \"black\", size = 12, face = \"bold\", hjust=0.5),\n    plot.subtitle = element_text(color = \"black\", size =12, hjust=0.5),\n    plot.caption = element_text(face = \"italic\", size = 8, hjust=0.5)\n  )\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\nIntentemos hacer el gráfico sin el logaritmo, pero filtrando nuestros datos\n\nconcentrado2020 %>% \n  filter(bene_gob>0 & bene_gob<=35000) %>% \nggplot(aes(x = edad_jefe, y = bene_gob, alpha=bene_gob)) +\n  geom_point(\n    shape = \"circle small\",\n    size = 1.65,\n    colour = \"#010901\"\n  ) +\n  geom_smooth()+\n  labs(\n    x = \"Edad del jefe del hogar\",\n    y = \"Ingresos por beneficios del gobierno\",\n    title = \"Relación entre la edad del jefe del hogar e ingreso proveniente de beneficios del gobierno\",\n    subtitle = \"2020\",\n    caption = \"Fuente: elaboración propia con datos de ENIGH\",\n    alpha = \"Beneficios\"\n  ) +\n  theme_minimal()\n\n`geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = \"cs\")'"
  },
  {
    "objectID": "P9.html#gráficos-de-barras-entre-dos-variables-cualitativas",
    "href": "P9.html#gráficos-de-barras-entre-dos-variables-cualitativas",
    "title": "9  Visualización de datos (III)",
    "section": "9.3 Gráficos de barras entre dos variables cualitativas",
    "text": "9.3 Gráficos de barras entre dos variables cualitativas\nTambién podemos graficar la relación entre dos variables cualitativas.\nVamos a etiquetar nuestras variables y a convertir el estrato socioeconómico en factor.\n\netiqueta_sex<-c(\"Hombre\", \"Mujer\")\n\nconcentrado2020<-concentrado2020 %>% \n  mutate(sexo_jefe=as_numeric(sexo_jefe)) %>% # para quitar el \"string\"\n  sjlabelled::set_labels(sexo_jefe, labels=etiqueta_sex) \n\n\nconcentrado2020 <- concentrado2020 %>% \n  mutate(estrato=case_when(est_socio==1~\"Bajo\",\n                           est_socio==2~\"Medio Bajo\",\n                           est_socio==3~\"Medio Alto\",\n                           est_socio==4~\"Alto\"),\n         estrato = factor(estrato, \n                          levels=c(\"Alto\", \"Medio Alto\", \"Medio Bajo\", \"Bajo\")))\ntable(concentrado2020$estrato)\n\n\n      Alto Medio Alto Medio Bajo       Bajo \n      5778      15466      47018      20744 \n\n\nAhora vamos a hacer nuestros gráficos de barras. Una opción es hacer las gráficas apiladas.\n\nconcentrado2020 %>% \nggplot(aes(x=as_label(sexo_jefe), fill = estrato))+\n  geom_bar() +\n  scale_fill_hue(direction = 1) + #esta especifica la dirección de los colores\n  theme_minimal()\n\n\n\n\nPero, no queremos las frecuencias absolutas, sino los porcentajes.\nPodemos agregar unas líneas de código.\n\nconcentrado2020 %>% \n  group_by(sexo_jefe) %>% #agrupa por sexo\n  count(estrato) %>% #calcula el n de cada estrato por sexo\n  mutate(pct = prop.table(n)) %>% #calcula la proporción\n  ggplot(aes(x = as_label(sexo_jefe), y = pct, fill = estrato)) +\n  geom_col() +\n  scale_y_continuous(labels = scales::percent) +\n  scale_fill_hue(direction = 1) +\n  theme_minimal()\n\n\n\n\nOtra forma es colocar las barras a la par, en lugar de apilarlas. El geom_col, tiene diversas opciones\n\nconcentrado2020 %>% \n  group_by(sexo_jefe) %>% #agrupa por sexo\n  count(estrato) %>% #calcula el n de cada estrato por sexo\n  mutate(pct = prop.table(n)) %>% #calcula la proporción\n  ggplot(aes(x = as_label(sexo_jefe), y = pct, fill = estrato)) +\n  geom_col(position=\"dodge\") +\n  scale_y_continuous(labels = scales::percent) +\n  scale_fill_hue(direction = 1) +\n  theme_minimal()\n\n\n\n\nSin embargo, ahí vemos que tenemos que ajustar los niveles.\n\nconcentrado2020 <- concentrado2020 %>% \n  mutate(estrato=case_when(est_socio==1~\"Bajo\",\n                           est_socio==2~\"Medio Bajo\",\n                           est_socio==3~\"Medio Alto\",\n                           est_socio==4~\"Alto\"),\n         estrato = factor(estrato, \n                          levels=c(\"Bajo\", \"Medio Bajo\", \"Medio Alto\", \"Alto\")))\n\nconcentrado2020 %>% \n  group_by(sexo_jefe) %>% #agrupa por sexo\n  count(estrato) %>% #calcula el n de cada estrato por sexo\n  mutate(pct = prop.table(n)) %>% #calcula la proporción\n  ggplot(aes(x = as_label(sexo_jefe), y = pct, fill = estrato)) +\n  geom_col(position=\"dodge\") +\n  scale_y_continuous(labels = scales::percent) +\n  scale_fill_hue(direction = 1) +\n  theme_minimal()\n\n\n\n\nPodemos también hacer pequeñas gráficas de forma separada.\n\nconcentrado2020 %>% \n  group_by(sexo_jefe) %>% \n  count(estrato) %>% \n  mutate(pct = prop.table(n)) %>%\n  ggplot(aes(x = as_label(sexo_jefe) , y = pct, fill = as.factor(sexo_jefe))) +\n  geom_col() +\n  scale_fill_brewer(palette = \"Set2\", direction = -1) +\n  theme_minimal() +\n  scale_y_continuous(labels = scales::percent) +\n  facet_wrap(vars(estrato)) +\n  theme_minimal()\n\n\n\n\nVamos a escoger el gráfico “position dodge” y agregarle los títulos y etiquetas y colorcito.\n\nconcentrado2020 %>% \n  group_by(sexo_jefe) %>% #agrupa por sexo\n  count(estrato) %>% #calcula el n de cada estrato por sexo\n  mutate(pct = prop.table(n)*100) %>% #calcula el porcentaje\n  mutate_if(is.numeric, round, digits = 0) %>%  #redondea a 0\n  ggplot(aes(x = as_label(sexo_jefe), y = pct, fill = estrato)) +\n  geom_col(position=\"dodge\") +\n  scale_fill_brewer(palette = \"BuPu\")+\n  geom_text(aes(sexo_jefe, label=paste0(pct, \"%\")),\n            position = position_dodge(width = .9),    \n            vjust = -0.5,    \n            size = 3,\n            colour = \"black\") +\n  labs(\n    x = \"Jefatura del hogar\",\n    y = \"Porcentaje\",\n    title = \"Estrato socioeconómico, según el sexo del jefe del hogar en México 2020\",\n    caption = \"Fuente: elaboración propia con base en ENIGH 2020\",\n    fill = \"Estrato socioeconómico\"\n  ) +\n theme_minimal() +\n  theme(\n    plot.title = element_text(color = \"black\", size = 12, face = \"bold\", hjust=0.5),\n    plot.caption = element_text(face = \"italic\", size = 8, hjust=0.5)\n  )\n\n`mutate_if()` ignored the following grouping variables:\n• Column `sexo_jefe`"
  },
  {
    "objectID": "P10.html",
    "href": "P10.html",
    "title": "10  Visualización de datos (IV)",
    "section": "",
    "text": "Ahora cargaremos nuestros paquetes para hoy.\n\nif(!require(\"pacman\")) install.packages(\"pacman\")\n\nLoading required package: pacman\n\npacman::p_load(tidyverse, readxl, writexl, haven, sjlabelled, foreign, janitor, esquisse, RColorBrewer, wesanderson)\n\nY cargaremos las bases de datos.\n\nconcentrado2020 <- haven::read_dta(\"datos/concentrado2020.dta\")"
  },
  {
    "objectID": "P10.html#gráficos-de-dos-variables-cuantitativa-y-cualitativa",
    "href": "P10.html#gráficos-de-dos-variables-cuantitativa-y-cualitativa",
    "title": "10  Visualización de datos (IV)",
    "section": "10.2 Gráficos de dos variables: cuantitativa y cualitativa",
    "text": "10.2 Gráficos de dos variables: cuantitativa y cualitativa\nPrimero vamos a convertir nuestras variables.\n\nconcentrado2020 <- concentrado2020 %>% \n  mutate(sexo_factor = factor(concentrado2020$sexo_jefe, labels = c(\"Hombre\", \"Mujer\")))\n\netiqueta_sex<-c(\"Hombre\", \"Mujer\")\n\nconcentrado2020<-concentrado2020 %>% \n  mutate(sexo_jefe=as_numeric(sexo_jefe)) %>% # para quitar el \"string\"\n  sjlabelled::set_labels(sexo_jefe, labels=etiqueta_sex) \n\n\nconcentrado2020 <- concentrado2020 %>% \n  mutate(estrato=case_when(est_socio==1~\"Bajo\",\n                           est_socio==2~\"Medio Bajo\",\n                           est_socio==3~\"Medio Alto\",\n                           est_socio==4~\"Alto\"),\n         estrato = factor(estrato, \n                          levels=c(\"Bajo\", \"Medio Bajo\", \"Medio Alto\", \"Alto\")))\n\nPodemos hacer un boxplot\n\nconcentrado2020 %>% \nggplot(aes(x = edad_jefe, y = as_label(sexo_jefe), fill = as.factor(sexo_jefe))) +\n  geom_boxplot() +\n  theme_minimal()\n\n\n\n\nPodemos voltear la geometría.\n\nconcentrado2020 %>% \nggplot(aes(x = edad_jefe, y = as_label(sexo_jefe), fill = as.factor(sexo_jefe))) +\n  geom_boxplot() +\n  coord_flip()+\n  theme_minimal()\n\n\n\n\nTambién un histograma, diferenciando por sexo.\n\nconcentrado2020 %>% \nggplot(aes(x = edad_jefe, fill = as.factor(sexo_jefe))) +\n  geom_histogram(bins = 30L) +\n  scale_fill_brewer(palette = \"RdYlBu\", direction = -1) +\n  theme_minimal()\n\n\n\n\nTambién podemos hacer los histogramas por separado.\n\nconcentrado2020 %>% \nggplot(aes(x = edad_jefe, fill = as.factor(sexo_jefe))) +\n  geom_histogram(bins = 30L) +\n  scale_fill_brewer(palette = \"RdYlBu\", direction = 1) +\n  theme_minimal() +\n  facet_wrap(vars(as_label(sexo_jefe)))\n\n\n\n\nO gráficos de densidad.\n\nconcentrado2020 %>% \nggplot(aes(x = edad_jefe, fill = as.factor(sexo_jefe))) +\n  geom_density() +\n  scale_fill_brewer(palette = \"RdYlBu\", direction = -1) +\n  theme_minimal()\n\n\n\n\nPor separado también\n\nconcentrado2020 %>% \nggplot(aes(x = edad_jefe, fill = as.factor(sexo_jefe))) +\n  geom_density() +\n  scale_fill_brewer(palette = \"RdYlBu\", direction = -1) +\n  facet_wrap(vars(as_label(sexo_jefe)))+\n  theme_minimal()\n\n\n\n\nTambién podemos relacionar una variable cuantitativa con dos variables cualitativas.\n\nconcentrado2020 %>% \nggplot(aes(x = edad_jefe, y = as_label(est_socio), fill = as.factor(est_socio))) +\n  geom_boxplot() +\n  theme_minimal() +\n  facet_wrap(vars(as_label(sexo_jefe)))\n\n\n\n\nO bien, un gráfico con dos variables cuantitativas y una cualitativa. En este caso el tamaño de los puntos, indica la diferencia entre hombres y mujeres.\n\nconcentrado2020$ln_bene_gob<-log(concentrado2020$bene_gob)\n\nconcentrado2020 %>% \n  filter(ln_bene_gob>0) %>% \n  ggplot(aes(x= edad_jefe, y= ln_bene_gob, size=as.factor(sexo_jefe))) + \n  geom_point(colour=2, shape = 20)+\n theme_minimal()\n\nWarning: Using size for a discrete variable is not advised.\n\n\n\n\n\nPodemos indicar la diferencia entre hombres y mujeres no por tamaño, sino por color.\n\nconcentrado2020 %>% \n  filter(ln_bene_gob>0) %>% \n  ggplot(aes(x= edad_jefe, y= ln_bene_gob, colour=as.factor(sexo_jefe))) + \n  geom_point(size=2, shape = 20)+\n  scale_fill_hue(direction=1)+\n theme_minimal()\n\n\n\n\nAhora queremos ese mismo gráfico, sin embargo vamos a separarlo por estrato.\n\nconcentrado2020 %>% \n  filter(ln_bene_gob>0) %>% \n  ggplot(aes(x= edad_jefe, y= ln_bene_gob, colour=as.factor(sexo_jefe))) + \n  geom_point(size=2, shape = 20)+\n  scale_fill_hue(direction=1)+\n  facet_wrap(vars(as_label(est_socio)))+\n theme_minimal()\n\n\n\n\n\nconcentrado2020 %>% \n  filter(ln_bene_gob>0) %>% \n  ggplot(aes(x= edad_jefe, y= ln_bene_gob, colour=as.factor((sexo_jefe)))) + \n  geom_point(size=2, shape = 20)+\n  scale_fill_hue(direction=1)+\n  facet_wrap(vars(as_label(est_socio)))+\n theme_minimal()+\n scale_color_manual(\n    values = c(\"1\" = \"#0B0B33\",\n    \"2\" = \"#E7E98C\")\n  )+\n  labs(\n    x = \"Edad del jefe del hogar\",\n    y = \"Ingresos por beneficios del gobierno (en logartimo)\",\n    title = \"Relación entre la edad del jefe del hogar e ingreso proveniente de beneficios del gobierno 2020\",\n    subtitle = \"Según la jefatura de hogar y el estrato socioeconómico\",\n    caption = \"Fuente: elaboración propia con datos de ENIGH\",\n    colour = \"Jefatura de hogar\"\n  ) +\n  theme_minimal()+\n  theme(\n    plot.title = element_text(color = \"black\", size = 12, face = \"bold\", hjust=0.5),\n    plot.subtitle = element_text(color = \"black\", size =12, hjust=0.5),\n    plot.caption = element_text(face = \"italic\", size = 8, hjust=0.5)\n  )"
  },
  {
    "objectID": "P11.html",
    "href": "P11.html",
    "title": "11  API INEGI e intro a {plotly}",
    "section": "",
    "text": "En esta breve práctica revisaremos un poco de los gráficos de series de tiempo, y con esa excusa, bajaremos datos del INEGI directamente a nuestro ambiente.\nHay un paquete especializado (que antes funcionaba mejor) que nos permite descargar algunos indicadores del INEGI {inegiR}, específicamente los del Banco de Información Económica (BIE)"
  },
  {
    "objectID": "P11.html#token",
    "href": "P11.html#token",
    "title": "11  API INEGI e intro a {plotly}",
    "section": "11.1 Token",
    "text": "11.1 Token\nNecesitamos crear un objeto donde esté nuestro token\n\n\n\ntoken<-\"aquí va tu token\"\nEl token está ligado a tu cuenta de correo, no lo compartas porque si alguien lo utiliza mal, tu cuenta puede ser bloqueada."
  },
  {
    "objectID": "P11.html#paquetes",
    "href": "P11.html#paquetes",
    "title": "11  API INEGI e intro a {plotly}",
    "section": "11.2 Paquetes",
    "text": "11.2 Paquetes\n\nif(!require('pacman')) install.packages('pacman')\n\nLoading required package: pacman\n\npacman::p_load(tidyverse, # ya lo conocemos\n               inegiR, # para consultas en el BIE\n               httr, jsonlite, # Para consultas en todo el banco\n               plotly, # gráficos interactivos\n               lubridate) # para manejo de fechas"
  },
  {
    "objectID": "P11.html#consulta-con-inegir",
    "href": "P11.html#consulta-con-inegir",
    "title": "11  API INEGI e intro a {plotly}",
    "section": "11.3 Consulta con {inegiR}",
    "text": "11.3 Consulta con {inegiR}\nEsto sólo sirve para los indicadores del BIE: https://www.inegi.org.mx/servicios/api_indicadores.html\n\ninegiR::inegi_series(serie=628194,# este número está en el sitio este el IPC\n                     token = token)\n\n          date date_shortcut       values notes\n1   2022-09-01            M9 124.57100000    NA\n2   2022-08-01            M8 123.80300000    NA\n3   2022-07-01            M7 122.94800000    NA\n4   2022-06-01            M6 122.04400000    NA\n5   2022-05-01            M5 121.02200000    NA\n6   2022-04-01            M4 120.80900000    NA\n7   2022-03-01            M3 120.15900000    NA\n8   2022-02-01            M2 118.98100000    NA\n9   2022-01-01            M1 118.00200000    NA\n10  2021-12-01           M12 117.30800000    NA\n11  2021-11-01           M11 116.88400000    NA\n12  2021-10-01           M10 115.56100000    NA\n13  2021-09-01            M9 114.60100000    NA\n14  2021-08-01            M8 113.89900000    NA\n15  2021-07-01            M7 113.68200000    NA\n16  2021-06-01            M6 113.01800000    NA\n17  2021-05-01            M5 112.41900000    NA\n18  2021-04-01            M4 112.19000000    NA\n19  2021-03-01            M3 111.82400000    NA\n20  2021-02-01            M2 110.90700000    NA\n21  2021-01-01            M1 110.21000000    NA\n22  2020-12-01           M12 109.27100000    NA\n23  2020-11-01           M11 108.85600000    NA\n24  2020-10-01           M10 108.77400000    NA\n25  2020-09-01            M9 108.11400000    NA\n26  2020-08-01            M8 107.86700000    NA\n27  2020-07-01            M7 107.44400000    NA\n28  2020-06-01            M6 106.74300000    NA\n29  2020-05-01            M5 106.16200000    NA\n30  2020-04-01            M4 105.75500000    NA\n31  2020-03-01            M3 106.83800000    NA\n32  2020-02-01            M2 106.88900000    NA\n33  2020-01-01            M1 106.44700000    NA\n34  2019-12-01           M12 105.93400000    NA\n35  2019-11-01           M11 105.34600000    NA\n36  2019-10-01           M10 104.50300000    NA\n37  2019-09-01            M9 103.94200000    NA\n38  2019-08-01            M8 103.67000000    NA\n39  2019-07-01            M7 103.68700000    NA\n40  2019-06-01            M6 103.29900000    NA\n41  2019-05-01            M5 103.23300000    NA\n42  2019-04-01            M4 103.53100000    NA\n43  2019-03-01            M3 103.47600000    NA\n44  2019-02-01            M2 103.07900000    NA\n45  2019-01-01            M1 103.10800000    NA\n46  2018-12-01           M12 103.02000000    NA\n47  2018-11-01           M11 102.30300000    NA\n48  2018-10-01           M10 101.44000000    NA\n49  2018-09-01            M9 100.91700000    NA\n50  2018-08-01            M8 100.49200000    NA\n51  2018-07-01            M7  99.90909910    NA\n52  2018-06-01            M6  99.37646493    NA\n53  2018-05-01            M5  98.99408017    NA\n54  2018-04-01            M4  99.15484705    NA\n55  2018-03-01            M3  99.49215698    NA\n56  2018-02-01            M2  99.17137448    NA\n57  2018-01-01            M1  98.79499970    NA\n58  2017-12-01           M12  98.27288299    NA\n59  2017-11-01           M11  97.69517399    NA\n60  2017-10-01           M10  96.69826913    NA\n61  2017-09-01            M9  96.09351524    NA\n62  2017-08-01            M8  95.79376765    NA\n63  2017-07-01            M7  95.32273574    NA\n64  2017-06-01            M6  94.96363964    NA\n65  2017-05-01            M5  94.72549432    NA\n66  2017-04-01            M4  94.83893263    NA\n67  2017-03-01            M3  94.72248933    NA\n68  2017-02-01            M2  94.14478034    NA\n69  2017-01-01            M1  93.60388244    NA\n70  2016-12-01           M12  92.03903480    NA\n71  2016-11-01           M11  91.61683394    NA\n72  2016-10-01           M10  90.90615422    NA\n73  2016-09-01            M9  90.35774385    NA\n74  2016-08-01            M8  89.80933349    NA\n75  2016-07-01            M7  89.55691448    NA\n76  2016-06-01            M6  89.32402789    NA\n77  2016-05-01            M5  89.22561452    NA\n78  2016-04-01            M4  89.62527796    NA\n79  2016-03-01            M3  89.91000060    NA\n80  2016-02-01            M2  89.77778112    NA\n81  2016-01-01            M1  89.38638139    NA\n82  2015-12-01           M12  89.04681772    NA\n83  2015-11-01           M11  88.68546788    NA\n84  2015-10-01           M10  88.20391850    NA\n85  2015-09-01            M9  87.75241902    NA\n86  2015-08-01            M8  87.42487529    NA\n87  2015-07-01            M7  87.24081976    NA\n88  2015-06-01            M6  87.11310776    NA\n89  2015-05-01            M5  86.96736583    NA\n90  2015-04-01            M4  87.40384038    NA\n91  2015-03-01            M3  87.63071699    NA\n92  2015-02-01            M2  87.27537713    NA\n93  2015-01-01            M1  87.11010277    NA\n94  2014-12-01           M12  87.18898371    NA\n95  2014-11-01           M11  86.76377787    NA\n96  2014-10-01           M10  86.06962558    NA\n97  2014-09-01            M9  85.59633992    NA\n98  2014-08-01            M8  85.21996514    NA\n99  2014-07-01            M7  84.91495883    NA\n100 2014-06-01            M6  84.68207224    NA\n101 2014-05-01            M5  84.53557906    NA\n102 2014-04-01            M4  84.80677925    NA\n103 2014-03-01            M3  84.96529239    NA\n104 2014-02-01            M2  84.73315704    NA\n105 2014-01-01            M1  84.51905163    NA\n106 2013-12-01           M12  83.77005830    NA\n107 2013-11-01           M11  83.29226516    NA\n108 2013-10-01           M10  82.52298816    NA\n109 2013-09-01            M9  82.13233968    NA\n110 2013-08-01            M8  81.82432839    NA\n111 2013-07-01            M7  81.59219304    NA\n112 2013-06-01            M6  81.61923793    NA\n113 2013-05-01            M5  81.66882024    NA\n114 2013-04-01            M4  81.94152293    NA\n115 2013-03-01            M3  81.88743314    NA\n116 2013-02-01            M2  81.29094297    NA\n117 2013-01-01            M1  80.89278202    NA\n118 2012-12-01           M12  80.56824328    NA\n119 2012-11-01           M11  80.38343650    NA\n120 2012-10-01           M10  79.84103612    NA\n121 2012-09-01            M9  79.43911894    NA\n122 2012-08-01            M8  79.09054030    NA\n123 2012-07-01            M7  78.85389747    NA\n124 2012-06-01            M6  78.41366669    NA\n125 2012-05-01            M5  78.05381934    NA\n126 2012-04-01            M4  78.30097963    NA\n127 2012-03-01            M3  78.54738867    NA\n128 2012-02-01            M2  78.50231384    NA\n129 2012-01-01            M1  78.34304946    NA\n130 2011-12-01           M12  77.79238536    NA\n131 2011-11-01           M11  77.15833283    NA\n132 2011-10-01           M10  76.33271230    NA\n133 2011-09-01            M9  75.82111305    NA\n134 2011-08-01            M8  75.63555502    NA\n135 2011-07-01            M7  75.51610674    NA\n136 2011-06-01            M6  75.15550814    NA\n137 2011-05-01            M5  75.15926438    NA\n138 2011-04-01            M4  75.71744095    NA\n139 2011-03-01            M3  75.72345093    NA\n140 2011-02-01            M2  75.57846024    NA\n141 2011-01-01            M1  75.29599135    NA\n142 2010-12-01           M12  74.93095445    NA\n143 2010-11-01           M11  74.56158125    NA\n144 2010-10-01           M10  73.96892635    NA\n145 2010-09-01            M9  73.51511019    NA\n146 2010-08-01            M8  73.13174950    NA\n147 2010-07-01            M7  72.92919000    NA\n148 2010-06-01            M6  72.77118323    NA\n149 2010-05-01            M5  72.79397765    NA\n150 2010-04-01            M4  73.25556464    NA\n151 2010-03-01            M3  73.48972549    NA\n152 2010-02-01            M2  72.97167051    NA\n153 2010-01-01            M1  72.55204598    NA\n154 2009-12-01           M12  71.77185517    NA\n155 2009-11-01           M11  71.47604578    NA\n156 2009-10-01           M10  71.10719063    NA\n157 2009-09-01            M9  70.89271587    NA\n158 2009-08-01            M8  70.53888432    NA\n159 2009-07-01            M7  70.37051645    NA\n160 2009-06-01            M6  70.17935416    NA\n161 2009-05-01            M5  70.05035847    NA\n162 2009-04-01            M4  70.25499019    NA\n163 2009-03-01            M3  70.00995018    NA\n164 2009-02-01            M2  69.60949368    NA\n165 2009-01-01            M1  69.45614941    NA\n166 2008-12-01           M12  69.29555236    NA\n167 2008-11-01           M11  68.81894178    NA\n168 2008-10-01           M10  68.04548569    NA\n169 2008-09-01            M9  67.58493481    NA\n170 2008-08-01            M8  67.12749227    NA\n171 2008-07-01            M7  66.74205936    NA\n172 2008-06-01            M6  66.37216810    NA\n173 2008-05-01            M5  66.09863507    NA\n174 2008-04-01            M4  66.17012666    NA\n175 2008-03-01            M3  66.01989072    NA\n176 2008-02-01            M2  65.54483430    NA\n177 2008-01-01            M1  65.35056368    NA\n178 2007-12-01           M12  65.04905568    NA\n179 2007-11-01           M11  64.78122126    NA\n180 2007-10-01           M10  64.32740509    NA\n181 2007-09-01            M9  64.07770259    NA\n182 2007-08-01            M8  63.58399619    NA\n183 2007-07-01            M7  63.32600481    NA\n184 2007-06-01            M6  63.05817039    NA\n185 2007-05-01            M5  62.98253436    NA\n186 2007-04-01            M4  63.29129513    NA\n187 2007-03-01            M3  63.32911314    NA\n188 2007-02-01            M2  63.19234663    NA\n189 2007-01-01            M1  63.01620793    NA\n190 2006-12-01           M12  62.69242357    NA\n191 2006-11-01           M11  62.33185730    NA\n192 2006-10-01           M10  62.00651878    NA\n193 2006-09-01            M9  61.73661213    NA\n194 2006-08-01            M8  61.11960865    NA\n195 2006-07-01            M7  60.80929371    NA\n196 2006-06-01            M6  60.64299806    NA\n197 2006-05-01            M5  60.59067451    NA\n198 2006-04-01            M4  60.86161727    NA\n199 2006-03-01            M3  60.77251181    NA\n200 2006-02-01            M2  60.69635773    NA\n201 2006-01-01            M1  60.60362589    NA\n202 2005-12-01           M12  60.25031239    NA\n203 2005-11-01           M11  59.88249335    NA\n204 2005-10-01           M10  59.45457994    NA\n205 2005-09-01            M9  59.30900649    NA\n206 2005-08-01            M8  59.07225536    NA\n207 2005-07-01            M7  59.00179988    NA\n208 2005-06-01            M6  58.77178347    NA\n209 2005-05-01            M5  58.82825146    NA\n210 2005-04-01            M4  58.97641519    NA\n211 2005-03-01            M3  58.76712098    NA\n212 2005-02-01            M2  58.50343099    NA\n213 2005-01-01            M1  58.30916037    NA\n214 2004-12-01           M12  58.30708815    NA\n215 2004-11-01           M11  58.18689940    NA\n216 2004-10-01           M10  57.69474717    NA\n217 2004-09-01            M9  57.29791705    NA\n218 2004-08-01            M8  56.82804118    NA\n219 2004-07-01            M7  56.47939018    NA\n220 2004-06-01            M6  56.33174451    NA\n221 2004-05-01            M5  56.24160294    NA\n222 2004-04-01            M4  56.38303195    NA\n223 2004-03-01            M3  56.29807094    NA\n224 2004-02-01            M2  56.10794476    NA\n225 2004-01-01            M1  55.77431735    NA\n226 2003-12-01           M12  55.42981079    NA\n227 2003-11-01           M11  55.19254161    NA\n228 2003-10-01           M10  54.73820739    NA\n229 2003-09-01            M9  54.53823816    NA\n230 2003-08-01            M8  54.21548991    NA\n231 2003-07-01            M7  54.05333870    NA\n232 2003-06-01            M6  53.97511240    NA\n233 2003-05-01            M5  53.93055967    NA\n234 2003-04-01            M4  54.10514420    NA\n235 2003-03-01            M3  54.01293041    NA\n236 2003-02-01            M2  53.67412245    NA\n237 2003-01-01            M1  53.52544068    NA\n238 2002-12-01           M12  53.30992980    NA\n239 2002-11-01           M11  53.07887728    NA\n240 2002-10-01           M10  52.65303609    NA\n241 2002-09-01            M9  52.42198356    NA\n242 2002-08-01            M8  52.10856030    NA\n243 2002-07-01            M7  51.91118135    NA\n244 2002-06-01            M6  51.76258618    NA\n245 2002-05-01            M5  51.51142923    NA\n246 2002-04-01            M4  51.40723497    NA\n247 2002-03-01            M3  51.12794844    NA\n248 2002-02-01            M2  50.86774985    NA\n249 2002-01-01            M1  50.90047201    NA\n250 2001-12-01           M12  50.43489879    NA\n251 2001-11-01           M11  50.36514891    NA\n252 2001-10-01           M10  50.17613537    NA\n253 2001-09-01            M9  49.95038115    NA\n254 2001-08-01            M8  49.48968755    NA\n255 2001-07-01            M7  49.19820196    NA\n256 2001-06-01            M6  49.32636377    NA\n257 2001-05-01            M5  49.20997046    NA\n258 2001-04-01            M4  49.09730863    NA\n259 2001-03-01            M3  48.85088778    NA\n260 2001-02-01            M2  48.54332816    NA\n261 2001-01-01            M1  48.57547625    NA\n262 2000-12-01           M12  48.30767118    NA\n263 2000-11-01           M11  47.79028786    NA\n264 2000-10-01           M10  47.38513583    NA\n265 2000-09-01            M9  47.06107160    NA\n266 2000-08-01            M8  46.71978519    NA\n267 2000-07-01            M7  46.46446621    NA\n268 2000-06-01            M6  46.28392024    NA\n269 2000-05-01            M5  46.01137907    NA\n270 2000-04-01            M4  45.84001827    NA\n271 2000-03-01            M3  45.58068078    NA\n272 2000-02-01            M2  45.32938031    NA\n273 2000-01-01            M1  44.93083012    NA\n274 1999-12-01           M12  44.33551639    NA\n275 1999-11-01           M11  43.89577645    NA\n276 1999-10-01           M10  43.50885123    NA\n277 1999-09-01            M9  43.23501839    NA\n278 1999-08-01            M8  42.82125526    NA\n279 1999-07-01            M7  42.58157977    NA\n280 1999-06-01            M6  42.30200620    NA\n281 1999-05-01            M5  42.02587708    NA\n282 1999-04-01            M4  41.77457661    NA\n283 1999-03-01            M3  41.39468378    NA\n284 1999-02-01            M2  41.01364281    NA\n285 1999-01-01            M1  40.46977028    NA\n286 1998-12-01           M12  39.47297432    NA\n287 1998-11-01           M11  38.53278623    NA\n288 1998-10-01           M10  37.86226893    NA\n289 1998-09-01            M9  37.32737639    NA\n290 1998-08-01            M8  36.73163210    NA\n291 1998-07-01            M7  36.38187811    NA\n292 1998-06-01            M6  36.03442041    NA\n293 1998-05-01            M5  35.61348136    NA\n294 1998-04-01            M4  35.33204206    NA\n295 1998-03-01            M3  35.00453340    NA\n296 1998-02-01            M2  34.59923784    NA\n297 1998-01-01            M1  34.00392411    NA\n298 1997-12-01           M12  33.27987451    NA\n299 1997-11-01           M11  32.82004201    NA\n300 1997-10-01           M10  32.45694082    NA\n301 1997-09-01            M9  32.19961259    NA\n302 1997-08-01            M8  31.80350220    NA\n303 1997-07-01            M7  31.52321104    NA\n304 1997-06-01            M6  31.25095691    NA\n305 1997-05-01            M5  30.97611945    NA\n306 1997-04-01            M4  30.69597181    NA\n307 1997-03-01            M3  30.36788907    NA\n308 1997-02-01            M2  29.99459809    NA\n309 1997-01-01            M1  29.49888603    NA\n310 1996-12-01           M12  28.75933645    NA\n311 1996-11-01           M11  27.86708345    NA\n312 1996-10-01           M10  27.45116754    NA\n313 1996-09-01            M9  27.11275149    NA\n314 1996-08-01            M8  26.68607171    NA\n315 1996-07-01            M7  26.33603069    NA\n316 1996-06-01            M6  25.96690173    NA\n317 1996-05-01            M5  25.55084230    NA\n318 1996-04-01            M4  25.09344962    NA\n319 1996-03-01            M3  24.39982588    NA\n320 1996-02-01            M2  23.87426203    NA\n321 1996-01-01            M1  23.32975376    NA\n322 1995-12-01           M12  22.52016727    NA\n323 1995-11-01           M11  21.80960838    NA\n324 1995-10-01           M10  21.28476212    NA\n325 1995-09-01            M9  20.85564253    NA\n326 1995-08-01            M8  20.43298127    NA\n327 1995-07-01            M7  20.09958836    NA\n328 1995-06-01            M6  19.69802427    NA\n329 1995-05-01            M5  19.09209019    NA\n330 1995-04-01            M4  18.32613326    NA\n331 1995-03-01            M3  16.97361720    NA\n332 1995-02-01            M2  16.02870735    NA\n333 1995-01-01            M1  15.37699094    NA\n334 1994-12-01           M12  14.81920437    NA\n335 1994-11-01           M11  14.69036086    NA\n336 1994-10-01           M10  14.61224530    NA\n337 1994-09-01            M9  14.53593664    NA\n338 1994-08-01            M8  14.43328665    NA\n339 1994-07-01            M7  14.36632677    NA\n340 1994-06-01            M6  14.30289457    NA\n341 1994-05-01            M5  14.23168224    NA\n342 1994-04-01            M4  14.16325130    NA\n343 1994-03-01            M3  14.09422476    NA\n344 1994-02-01            M2  14.02212406    NA\n345 1994-01-01            M1  13.95037498    NA\n346 1993-12-01           M12  13.84305490    NA\n347 1993-11-01           M11  13.73830236    NA\n348 1993-10-01           M10  13.67797303    NA\n349 1993-09-01            M9  13.62226067    NA\n350 1993-08-01            M8  13.52211219    NA\n351 1993-07-01            M7  13.45012344    NA\n352 1993-06-01            M6  13.38579712    NA\n353 1993-05-01            M5  13.31113749    NA\n354 1993-04-01            M4  13.23548040    NA\n355 1993-03-01            M3  13.15959369    NA\n356 1993-02-01            M2  13.08334531    NA\n357 1993-01-01            M1  12.97731976    NA\n358 1992-12-01           M12  12.81655348    NA\n359 1992-11-01           M11  12.63662034    NA\n360 1992-10-01           M10  12.53249354    NA\n361 1992-09-01            M9  12.44289652    NA\n362 1992-08-01            M8  12.33559223    NA\n363 1992-07-01            M7  12.26027241    NA\n364 1992-06-01            M6  12.18334519    NA\n365 1992-05-01            M5  12.10143789    NA\n366 1992-04-01            M4  12.02217132    NA\n367 1992-03-01            M3  11.91594772    NA\n368 1992-02-01            M2  11.79590044    NA\n369 1992-01-01            M1  11.65777847    NA\n370 1991-12-01           M12  11.44967987    NA\n371 1991-11-01           M11  11.18637410    NA\n372 1991-10-01           M10  10.91534274    NA\n373 1991-09-01            M9  10.78985037    NA\n374 1991-08-01            M8  10.68342298    NA\n375 1991-07-01            M7  10.60958427    NA\n376 1991-06-01            M6  10.51664758    NA\n377 1991-05-01            M5  10.40744167    NA\n378 1991-04-01            M4  10.30668755    NA\n379 1991-03-01            M3  10.19983964    NA\n380 1991-02-01            M2  10.05642472    NA\n381 1991-01-01            M1   9.88387989    NA\n382 1990-12-01           M12   9.63821395    NA\n383 1990-11-01           M11   9.34372310    NA\n384 1990-10-01           M10   9.10205989    NA\n385 1990-09-01            M9   8.97306137    NA\n386 1990-08-01            M8   8.84695044    NA\n387 1990-07-01            M7   8.69873483    NA\n388 1990-06-01            M6   8.54293859    NA\n389 1990-05-01            M5   8.35883768    NA\n390 1990-04-01            M4   8.21547155    NA\n391 1990-03-01            M3   8.09230992    NA\n392 1990-02-01            M2   7.95211985    NA\n393 1990-01-01            M1   7.77603730    NA\n394 1989-12-01           M12   7.41802958    NA\n395 1989-11-01           M11   7.17585544    NA\n396 1989-10-01           M10   7.07652502    NA\n397 1989-09-01            M9   6.97339280    NA\n398 1989-08-01            M8   6.90733278    NA\n399 1989-07-01            M7   6.84214822    NA\n400 1989-06-01            M6   6.77438464    NA\n401 1989-05-01            M5   6.69309877    NA\n402 1989-04-01            M4   6.60222444    NA\n403 1989-03-01            M3   6.50494490    NA\n404 1989-02-01            M2   6.43518354    NA\n405 1989-01-01            M1   6.34902379    NA\n406 1988-12-01           M12   6.19731639    NA\n407 1988-11-01           M11   6.07065435    NA\n408 1988-10-01           M10   5.99048648    NA\n409 1988-09-01            M9   5.94513902    NA\n410 1988-08-01            M8   5.91134334    NA\n411 1988-07-01            M7   5.85745654    NA\n412 1988-06-01            M6   5.76129214    NA\n413 1988-05-01            M5   5.64610869    NA\n414 1988-04-01            M4   5.53894074    NA\n415 1988-03-01            M3   5.37354743    NA\n416 1988-02-01            M2   5.11178304    NA\n417 1988-01-01            M1   4.71824594    NA\n418 1987-12-01           M12   4.08639246    NA\n419 1987-11-01           M11   3.56051142    NA\n420 1987-10-01           M10   3.29884463    NA\n421 1987-09-01            M9   3.04508139    NA\n422 1987-08-01            M8   2.85687155    NA\n423 1987-07-01            M7   2.64102153    NA\n424 1987-06-01            M6   2.44314573    NA\n425 1987-05-01            M5   2.27832506    NA\n426 1987-04-01            M4   2.11860646    NA\n427 1987-03-01            M3   1.94815270    NA\n428 1987-02-01            M2   1.82738639    NA\n429 1987-01-01            M1   1.70440129    NA\n430 1986-12-01           M12   1.57673463    NA\n431 1986-11-01           M11   1.46130432    NA\n432 1986-10-01           M10   1.36882403    NA\n433 1986-09-01            M9   1.29481167    NA\n434 1986-08-01            M8   1.22153124    NA\n435 1986-07-01            M7   1.13133289    NA\n436 1986-06-01            M6   1.07756664    NA\n437 1986-05-01            M5   1.01257010    NA\n438 1986-04-01            M4   0.95926311    NA\n439 1986-03-01            M3   0.91166672    NA\n440 1986-02-01            M2   0.87117448    NA\n441 1986-01-01            M1   0.83409223    NA\n442 1985-12-01           M12   0.76634013    NA\n443 1985-11-01           M11   0.71749512    NA\n444 1985-10-01           M10   0.68585222    NA\n445 1985-09-01            M9   0.66075231    NA\n446 1985-08-01            M8   0.63537685    NA\n447 1985-07-01            M7   0.60876282    NA\n448 1985-06-01            M6   0.58827559    NA\n449 1985-05-01            M5   0.57390224    NA\n450 1985-04-01            M4   0.56062106    NA\n451 1985-03-01            M3   0.54388540    NA\n452 1985-02-01            M2   0.52359622    NA\n453 1985-01-01            M1   0.50271145    NA\n454 1984-12-01           M12   0.46799582    NA\n455 1984-11-01           M11   0.44892941    NA\n456 1984-10-01           M10   0.43403365    NA\n457 1984-09-01            M9   0.41938044    NA\n458 1984-08-01            M8   0.40724884    NA\n459 1984-07-01            M7   0.39599271    NA\n460 1984-06-01            M6   0.38342338    NA\n461 1984-05-01            M5   0.37003169    NA\n462 1984-04-01            M4   0.35815555    NA\n463 1984-03-01            M3   0.34330428    NA\n464 1984-02-01            M2   0.32923232    NA\n465 1984-01-01            M1   0.31272772    NA\n466 1983-12-01           M12   0.29404738    NA\n467 1983-11-01           M11   0.28198324    NA\n468 1983-10-01           M10   0.26634118    NA\n469 1983-09-01            M9   0.25778750    NA\n470 1983-08-01            M8   0.25009061    NA\n471 1983-07-01            M7   0.24074613    NA\n472 1983-06-01            M6   0.22940389    NA\n473 1983-05-01            M5   0.22103390    NA\n474 1983-04-01            M4   0.21184586    NA\n475 1983-03-01            M3   0.19923205    NA\n476 1983-02-01            M2   0.19003396    NA\n477 1983-01-01            M1   0.18035509    NA\n478 1982-12-01           M12   0.16265642    NA\n479 1982-11-01           M11   0.14696270    NA\n480 1982-10-01           M10   0.13989012    NA\n481 1982-09-01            M9   0.13299550    NA\n482 1982-08-01            M8   0.12625588    NA\n483 1982-07-01            M7   0.11351720    NA\n484 1982-06-01            M6   0.10795443    NA\n485 1982-05-01            M5   0.10299301    NA\n486 1982-04-01            M4   0.09751204    NA\n487 1982-03-01            M3   0.09249895    NA\n488 1982-02-01            M2   0.08923965    NA\n489 1982-01-01            M1   0.08586554    NA\n490 1981-12-01           M12   0.08180110    NA\n491 1981-11-01           M11   0.07965694    NA\n492 1981-10-01           M10   0.07815287    NA\n493 1981-09-01            M9   0.07645648    NA\n494 1981-08-01            M8   0.07506005    NA\n495 1981-07-01            M7   0.07354449    NA\n496 1981-06-01            M6   0.07227149    NA\n497 1981-05-01            M5   0.07127547    NA\n498 1981-04-01            M4   0.07021344    NA\n499 1981-03-01            M3   0.06866487    NA\n500 1981-02-01            M2   0.06722682    NA\n501 1981-01-01            M1   0.06561511    NA\n502 1980-12-01           M12   0.06356711    NA\n503 1980-11-01           M11   0.06194248    NA\n504 1980-10-01           M10   0.06088618    NA\n505 1980-09-01            M9   0.05997772    NA\n506 1980-08-01            M8   0.05931896    NA\n507 1980-07-01            M7   0.05811485    NA\n508 1980-06-01            M6   0.05653615    NA\n509 1980-05-01            M5   0.05543680    NA\n510 1980-04-01            M4   0.05454698    NA\n511 1980-03-01            M3   0.05360981    NA\n512 1980-02-01            M2   0.05252912    NA\n513 1980-01-01            M1   0.05134222    NA\n514 1979-12-01           M12   0.04895551    NA\n515 1979-11-01           M11   0.04810445    NA\n516 1979-10-01           M10   0.04749306    NA\n517 1979-09-01            M9   0.04667788    NA\n518 1979-08-01            M8   0.04611242    NA\n519 1979-07-01            M7   0.04542496    NA\n520 1979-06-01            M6   0.04488103    NA\n521 1979-05-01            M5   0.04438876    NA\n522 1979-04-01            M4   0.04381469    NA\n523 1979-03-01            M3   0.04342575    NA\n524 1979-02-01            M2   0.04284450    NA\n525 1979-01-01            M1   0.04223742    NA\n526 1978-12-01           M12   0.04078932    NA\n527 1978-11-01           M11   0.04044631    NA\n528 1978-10-01           M10   0.04003442    NA\n529 1978-09-01            M9   0.03955507    NA\n530 1978-08-01            M8   0.03910873    NA\n531 1978-07-01            M7   0.03872266    NA\n532 1978-06-01            M6   0.03807683    NA\n533 1978-05-01            M5   0.03756016    NA\n534 1978-04-01            M4   0.03719563    NA\n535 1978-03-01            M3   0.03678660    NA\n536 1978-02-01            M2   0.03640771    NA\n537 1978-01-01            M1   0.03589248    NA\n538 1977-12-01           M12   0.03511174    NA\n539 1977-11-01           M11   0.03463239    NA\n540 1977-10-01           M10   0.03425781    NA\n541 1977-09-01            M9   0.03399804    NA\n542 1977-08-01            M8   0.03340531    NA\n543 1977-07-01            M7   0.03273365    NA\n544 1977-06-01            M6   0.03236767    NA\n545 1977-05-01            M5   0.03197587    NA\n546 1977-04-01            M4   0.03169744    NA\n547 1977-03-01            M3   0.03122527    NA\n548 1977-02-01            M2   0.03068994    NA\n549 1977-01-01            M1   0.03002689    NA\n550 1976-12-01           M12   0.02909976    NA\n551 1976-11-01           M11   0.02838791    NA\n552 1976-10-01           M10   0.02716083    NA\n553 1976-09-01            M9   0.02571273    NA\n554 1976-08-01            M8   0.02486454    NA\n555 1976-07-01            M7   0.02462917    NA\n556 1976-06-01            M6   0.02442250    NA\n557 1976-05-01            M5   0.02432491    NA\n558 1976-04-01            M4   0.02415556    NA\n559 1976-03-01            M3   0.02398764    NA\n560 1976-02-01            M2   0.02375514    NA\n561 1976-01-01            M1   0.02331885    NA\n562 1975-12-01           M12   0.02287681    NA\n563 1975-11-01           M11   0.02269167    NA\n564 1975-10-01           M10   0.02253380    NA\n565 1975-09-01            M9   0.02241898    NA\n566 1975-08-01            M8   0.02225681    NA\n567 1975-07-01            M7   0.02206593    NA\n568 1975-06-01            M6   0.02189084    NA\n569 1975-05-01            M5   0.02152487    NA\n570 1975-04-01            M4   0.02124070    NA\n571 1975-03-01            M3   0.02106274    NA\n572 1975-02-01            M2   0.02093070    NA\n573 1975-01-01            M1   0.02081589    NA\n574 1974-12-01           M12   0.02055325    NA\n575 1974-11-01           M11   0.02039394    NA\n576 1974-10-01           M10   0.01984283    NA\n577 1974-09-01            M9   0.01945677    NA\n578 1974-08-01            M8   0.01923862    NA\n579 1974-07-01            M7   0.01903770    NA\n580 1974-06-01            M6   0.01876645    NA\n581 1974-05-01            M5   0.01858275    NA\n582 1974-04-01            M4   0.01843779    NA\n583 1974-03-01            M3   0.01819094    NA\n584 1974-02-01            M2   0.01805172    NA\n585 1974-01-01            M1   0.01765274    NA\n586 1973-12-01           M12   0.01704279    NA\n587 1973-11-01           M11   0.01640557    NA\n588 1973-10-01           M10   0.01620608    NA\n589 1973-09-01            M9   0.01600085    NA\n590 1973-08-01            M8   0.01562914    NA\n591 1973-07-01            M7   0.01538229    NA\n592 1973-06-01            M6   0.01499766    NA\n593 1973-05-01            M5   0.01487567    NA\n594 1973-04-01            M4   0.01471923    NA\n595 1973-03-01            M3   0.01448960    NA\n596 1973-02-01            M2   0.01436331    NA\n597 1973-01-01            M1   0.01424562    NA\n598 1972-12-01           M12   0.01404183    NA\n599 1972-11-01           M11   0.01399446    NA\n600 1972-10-01           M10   0.01390405    NA\n601 1972-09-01            M9   0.01389400    NA\n602 1972-08-01            M8   0.01383086    NA\n603 1972-07-01            M7   0.01374044    NA\n604 1972-06-01            M6   0.01368877    NA\n605 1972-05-01            M5   0.01358831    NA\n606 1972-04-01            M4   0.01356104    NA\n607 1972-03-01            M3   0.01347637    NA\n608 1972-02-01            M2   0.01340317    NA\n609 1972-01-01            M1   0.01336155    NA\n610 1971-12-01           M12   0.01330271    NA\n611 1971-11-01           M11   0.01323956    NA\n612 1971-10-01           M10   0.01321803    NA\n613 1971-09-01            M9   0.01320511    NA\n614 1971-08-01            M8   0.01316206    NA\n615 1971-07-01            M7   0.01304294    NA\n616 1971-06-01            M6   0.01305299    NA\n617 1971-05-01            M5   0.01299415    NA\n618 1971-04-01            M4   0.01296687    NA\n619 1971-03-01            M3   0.01290085    NA\n620 1971-02-01            M2   0.01285206    NA\n621 1971-01-01            M1   0.01279896    NA\n622 1970-12-01           M12   0.01267410    NA\n623 1970-11-01           M11   0.01256789    NA\n624 1970-10-01           M10   0.01250044    NA\n625 1970-09-01            M9   0.01249613    NA\n626 1970-08-01            M8   0.01246599    NA\n627 1970-07-01            M7   0.01240859    NA\n628 1970-06-01            M6   0.01234831    NA\n629 1970-05-01            M5   0.01227368    NA\n630 1970-04-01            M4   0.01224785    NA\n631 1970-03-01            M3   0.01223206    NA\n632 1970-02-01            M2   0.01219618    NA\n633 1970-01-01            M1   0.01219761    NA\n634 1969-12-01           M12   0.01210576    NA\n635 1969-11-01           M11   0.01201535    NA\n636 1969-10-01           M10   0.01201391    NA\n637 1969-09-01            M9   0.01188905    NA\n638 1969-08-01            M8   0.01177854    NA\n639 1969-07-01            M7   0.01176562    NA\n640 1969-06-01            M6   0.01172113    NA\n641 1969-05-01            M5   0.01167951    NA\n642 1969-04-01            M4   0.01167951    NA\n643 1969-03-01            M3   0.01164794    NA\n644 1969-02-01            M2   0.01163646    NA\n645 1969-01-01            M1   0.01159484    NA\n\n\nPodemos guardar esta consulta en un objeto y luego graficar\n\nconsulta1<-inegi_series(serie=628194, # IPC mensual\n                        token = token)\n\nHacemos un gráfico:\n\nconsulta1 %>% \n  ggplot()+\n  aes(x=as_date(date),\n      y=values) +\n  geom_line()"
  },
  {
    "objectID": "P11.html#consulta-general",
    "href": "P11.html#consulta-general",
    "title": "11  API INEGI e intro a {plotly}",
    "section": "11.4 Consulta general",
    "text": "11.4 Consulta general\nPara poder bajar los otros indicadores tenemos un codigo un poco más complicado\n[Este código fue inspirado por este de acá https://github.com/claudiodanielpc/medium/blob/main/api_inegi_bie.R]\nVamos a hacer una función que nos haga la consulta:\n\nurl1 <-\"https://www.inegi.org.mx/app/api/indicadores/desarrolladores/jsonxml/INDICATOR/\"\nurl2 <-\"/es/0700/false/BISE/2.0/\"\nurl3<- \"?type=json\"\n\n#funcion\n\nconsulta_api<- function(token,indicador){\n  url<-paste0(url1,indicador,url2,token, url3)\n  res=GET(url)\n  resultado <-content(res, as = 'text')%>%\n  fromJSON()%>%\n  #Se extrae elemento \"Series\"\n  pluck(\"Series\")%>%\n  #Se extraen el elemento \"OBSERVATIONS\" que es aquel que contiene los datos\n  pluck(\"OBSERVATIONS\")%>%\n  #Se transforma a dataframe y se limpian los nombres\n  as.data.frame()%>%\n  janitor::clean_names() %>% \n  #Se seleccionan las variables requeridas\n  select(time_period, obs_value)%>%\n  #Se transforman a numérico \n  mutate_all(as.numeric)\n  \n  return(resultado)\n}\n\nCheca que dejo url que se pueda cambiar por si cambia el sistema de consulta.\nVamos a ver si funciona:\n\nconsulta_api(token=token,\n             indicador = \"1002000001\") # este es población en general\n\n   time_period obs_value\n1         1910  15160369\n2         1921  14334780\n3         1930  16552722\n4         1940  19653552\n5         1950  25791017\n6         1960  34923129\n7         1970  48225238\n8         1980  66846833\n9         1990  81249645\n10        1995  91158290\n11        2000  97483412\n12        2005 103263388\n13        2010 112336538\n14        2015 119938473\n15        2020 126014024\n\n\nguardamos nuestra consulta en un objeto y graficamos\n\nconsulta2<-consulta_api(token=token,\n             indicador = \"1002000001\") # este es población en general\n\n\ngploba<-consulta2 %>% \n  ggplot(aes(x=time_period, y=obs_value/1000000))+\n  geom_line() + \n  theme_light()+\n  labs(x=\"Año censal\",\n       y=\"Millones de personas\",\n       title=\"Población en México\") \n\ngploba"
  },
  {
    "objectID": "P11.html#plotly",
    "href": "P11.html#plotly",
    "title": "11  API INEGI e intro a {plotly}",
    "section": "11.5 {plotly}",
    "text": "11.5 {plotly}\nVamos a hacerlo interactivo con {plotly} Este paquete vuelve interactivo cualquier grafico, pero lo exporta como html\n\ninteractivo<-ggplotly(gploba)\ninteractivo"
  },
  {
    "objectID": "P12.html",
    "href": "P12.html",
    "title": "12  Visualización espacial - Mapas (I)",
    "section": "",
    "text": "Hoy vamos a replicar los mapas de Diego Valle para nuestros datos de carencias sociales a nivel estatal y municipal.\nDiego Valle Jones tiene varios proyectos, entre ellos el paquete “mxmaps” (https://www.diegovalle.net/mxmaps/ y https://github.com/diegovalle/mxmaps/#what-does-it-do).\nEste se basa en el paquete {cholorplethr} e incluye funciones para crear mapas con base en datos del INEGI. Las bases de datos incluidas en el paquete hacen “match” con los códigos estatales y municipales del INEGI.\nLa idea central del “choroplethr” es la de colorear regiones, estados, municipios, con con colores de acuerdo con alguna métrica. Por ejemplo, el número de personas o el porcentaje de asegurados.\nEntonces, lo primero que vamos a hacer es instalarlo.\n\nif (!require(\"remotes\")) {\n  install.packages(\"remotes\")\n}\n\nLoading required package: remotes\n\nremotes::install_github(\"diegovalle/mxmaps\")\n\nSkipping install of 'mxmaps' from a github remote, the SHA1 (e72c932d) has not changed since last install.\n  Use `force = TRUE` to force installation\n\n\nPosteriormente, cargaremos nuestros paquetes de siempre y agregamos mxmaps.\n\nif(!require(\"pacman\")) install.packages(\"pacman\")\n\nLoading required package: pacman\n\npacman::p_load(tidyverse, readxl, writexl, haven, sjlabelled, foreign, janitor, esquisse, RColorBrewer, wesanderson, mxmaps, knitr)"
  },
  {
    "objectID": "P12.html#nivel-estatal",
    "href": "P12.html#nivel-estatal",
    "title": "12  Visualización espacial - Mapas (I)",
    "section": "12.2 Nivel estatal",
    "text": "12.2 Nivel estatal\nEl primer ejemplo, es con los datos a nivel estatal de población.\n\ndata(\"df_mexstate_2020\")\n\nWarning in data(\"df_mexstate_2020\"): data set 'df_mexstate_2020' not found\n\ndf_mxstate_2020$value <- df_mxstate_2020$pop\n\nmxstate_choropleth(df_mxstate_2020,\n                   title = \"Población total, por estado 2020\")\n\n\n\n\nLas dos funciones básicas del paquete son mxstate_choropleth() y mxmunicipio_choropleth()\nLos datos que vayamos a utilizar deben tener una columna que se llame region con el código del INEGI para estados o municipios y otra columna que se llame value, con la variable que vamos a graficar.\nLas funciones str_mxstate y str_mxmunicipio los provee el paquete para homologar los códigos. Las bases de datos que vienen en el paquete, contienen variables demográficas del censo 2020.\nSe puede especificar el título y el número de colores con num_color. Si se requiere una escala continua, ponemos num_color=1.\nVeamos la base.\n\nhead(df_mxstate_2020)\n\n  region          state_name  state_name_official state_abbr\n1     01      Aguascalientes       Aguascalientes        AGS\n2     02     Baja California      Baja California         BC\n3     03 Baja California Sur  Baja California Sur        BCS\n4     04            Campeche             Campeche       CAMP\n5     05            Coahuila Coahuila de Zaragoza       COAH\n6     06              Colima               Colima        COL\n  state_abbr_official year     pop pop_male pop_female afromexican\n1                Ags. 2020 1425607   696683     728924       22425\n2                  BC 2020 3769020  1900589    1868431       64362\n3                 BCS 2020  798447   405879     392568       26330\n4               Camp. 2020  928363   456939     471424       19319\n5               Coah. 2020 3146771  1563669    1583102       45976\n6                Col. 2020  731391   360622     370769       13574\n  indigenous_language   value\n1                2539 1425607\n2               49130 3769020\n3               13581  798447\n4               91801  928363\n5                5527 3146771\n6                5210  731391\n\n\nTambién podemos hacer un mapa con el porcentaje de personas hablantes de lenguas indígenas.\n\ndf_mxstate_2020$value <-  df_mxstate_2020$indigenous_language / df_mxstate_2020$pop * 100\n\nmxstate_choropleth(df_mxstate_2020, \n                   num_colors = 1,\n                   title = \"Porcentaje de la población hablante de lengua indígena, 2020\",\n                   legend = \"%\")\n\n\n\n\nLo podemos hacer con nuestros datos.\n\ncarencias_2020_estatal <- read_excel(\"datos/carencias_2020_estatal.xlsx\")\n\n\ncarencias_2020_estatal$value<- round(carencias_2020_estatal$rezago_educativo)\n\nmxstate_choropleth(carencias_2020_estatal,\n                   num_colors = 1,\n                   title = \"Porcentaje de personas con carencias por rezago educativo, 2020\",\n                   legend = \"%\")"
  },
  {
    "objectID": "P12.html#nivel-municipal",
    "href": "P12.html#nivel-municipal",
    "title": "12  Visualización espacial - Mapas (I)",
    "section": "12.3 Nivel Municipal",
    "text": "12.3 Nivel Municipal\nAhora veamos la base de datos municipal.\n\ndata(\"df_mxmunicipio_2020\")\nhead(df_mxmunicipio_2020)\n\n# A tibble: 6 × 17\n  state_code munic…¹ region state…² state…³ state…⁴ state…⁵ munic…⁶  year    pop\n  <chr>      <chr>   <chr>  <chr>   <chr>   <chr>   <chr>   <chr>   <dbl>  <int>\n1 01         001     01001  Aguasc… Aguasc… AGS     Ags.    Aguasc…  2020 948990\n2 01         002     01002  Aguasc… Aguasc… AGS     Ags.    Asient…  2020  51536\n3 01         003     01003  Aguasc… Aguasc… AGS     Ags.    Calvil…  2020  58250\n4 01         004     01004  Aguasc… Aguasc… AGS     Ags.    Cosío    2020  17000\n5 01         005     01005  Aguasc… Aguasc… AGS     Ags.    Jesús …  2020 129929\n6 01         006     01006  Aguasc… Aguasc… AGS     Ags.    Pabell…  2020  47646\n# … with 7 more variables: pop_male <int>, pop_female <int>, afromexican <int>,\n#   indigenous_language <int>, metro_area <chr>, long <dbl>, lat <dbl>, and\n#   abbreviated variable names ¹​municipio_code, ²​state_name,\n#   ³​state_name_official, ⁴​state_abbr, ⁵​state_abbr_official, ⁶​municipio_name\n\n\nHacemos el ejemplo del paquete.\n\ndf_mxmunicipio_2020$value <-  df_mxmunicipio_2020$indigenous_language / \n  df_mxmunicipio_2020$pop * 100\nmxmunicipio_choropleth(df_mxmunicipio_2020, \n                       num_colors = 1,\n                       title = \"Porcentaje de la población hablante de lengua indígena, 2020\",\n                       legend = \"%\")\n\n\n\n\nCon nuestros datos:\n\ncarencias_2020_municipal<- read_excel(\"datos/carencias_2020_municipal.xlsx\")\n\n\ncarencias_2020_municipal$rezago_educativo <- as.numeric(carencias_2020_municipal$rezago_educativo)\n\nWarning: NAs introducidos por coerción\n\ncarencias_2020_municipal$value<- round(carencias_2020_municipal$rezago_educativo)\n\nmxmunicipio_choropleth(carencias_2020_municipal, \n                       num_colors = 1,\n                       title = \"Porcentaje de la población con carencias por rezago educativo, 2020\",\n                       legend = \"%\")\n\nWarning in self$bind(): The following regions were missing and are being set to\nNA: 04012, 07125, 29048\n\n\n\n\n\nPodemos hacer un subset de algunos municipios.\n\nmxmunicipio_choropleth(carencias_2020_municipal, num_colors = 1,\n                       zoom = subset(carencias_2020_municipal, municipio_name %in% \n                                       c(\"Tecate\",\n                                         \"Tijuana\",\n                                         \"Mexicali\"))$region,\n                       title = \"Porcentaje de la población con carencias por rezago educativo, 2020\",\n                       legend = \"%\") \n\n\n\n\nO bien utilizar el parámetro show_states.\n\nmxmunicipio_choropleth(carencias_2020_municipal, num_colors = 1,\n                       zoom = subset(carencias_2020_municipal, state_name %in% \n                                       c(\"Yucatán\", \"Veracruz\"))$region,\n                       title = \"Porcentaje de la población con carencias por rezago educativo en Yucatán y Veracruz, 2020\",\n                       show_states = FALSE,\n                       legend = \"%\")"
  },
  {
    "objectID": "P12.html#práctica.",
    "href": "P12.html#práctica.",
    "title": "12  Visualización espacial - Mapas (I)",
    "section": "12.4 Práctica.",
    "text": "12.4 Práctica.\nEscoge alguna otra de las carencias sociales y elabora tu mapa a nivel estatal y municipal. Compara los resultados con los mapas que hicimos en la sesión."
  }
]